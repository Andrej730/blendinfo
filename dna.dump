struct raw_data // 0 bytes [#0]
struct DrawDataList // 16 bytes [#1]
    DrawData   *first                //    8 bytes, offset 0
    DrawData   *last                 //    8 bytes, offset 8
struct IDPropertyUIData // 16 bytes [#2]
    char       *description          //    8 bytes, offset 0
    int        rna_subtype           //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
struct IDPropertyUIDataEnumItem // 32 bytes [#3]
    char       *identifier           //    8 bytes, offset 0
    char       *name                 //    8 bytes, offset 8
    char       *description          //    8 bytes, offset 16
    int        value                 //    4 bytes, offset 24
    int        icon                  //    4 bytes, offset 28
struct IDPropertyUIDataInt // 64 bytes [#4]
    IDPropertyUIData base            //   16 bytes, offset 0
    int        *default_array        //    8 bytes, offset 16
    int        default_array_len     //    4 bytes, offset 24
    int        min                   //    4 bytes, offset 28
    int        max                   //    4 bytes, offset 32
    int        soft_min              //    4 bytes, offset 36
    int        soft_max              //    4 bytes, offset 40
    int        step                  //    4 bytes, offset 44
    int        default_value         //    4 bytes, offset 48
    int        enum_items_num        //    4 bytes, offset 52
    IDPropertyUIDataEnumItem *enum_items //    8 bytes, offset 56
struct IDPropertyUIDataBool // 32 bytes [#5]
    IDPropertyUIData base            //   16 bytes, offset 0
    int8_t     *default_array        //    8 bytes, offset 16
    int        default_array_len     //    4 bytes, offset 24
    char       _pad[3]               //    3 bytes, offset 28
    int8_t     default_value         //    1 bytes, offset 31
struct IDPropertyUIDataFloat // 80 bytes [#6]
    IDPropertyUIData base            //   16 bytes, offset 0
    double     *default_array        //    8 bytes, offset 16
    int        default_array_len     //    4 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 28
    float      step                  //    4 bytes, offset 32
    int        precision             //    4 bytes, offset 36
    double     min                   //    8 bytes, offset 40
    double     max                   //    8 bytes, offset 48
    double     soft_min              //    8 bytes, offset 56
    double     soft_max              //    8 bytes, offset 64
    double     default_value         //    8 bytes, offset 72
struct IDPropertyUIDataString // 24 bytes [#7]
    IDPropertyUIData base            //   16 bytes, offset 0
    char       *default_value        //    8 bytes, offset 16
struct IDPropertyUIDataID // 24 bytes [#8]
    IDPropertyUIData base            //   16 bytes, offset 0
    short      id_type               //    2 bytes, offset 16
    char       _pad[6]               //    6 bytes, offset 18
struct IDPropertyData // 32 bytes [#9]
    void       *pointer              //    8 bytes, offset 0
    ListBase   group                 //   16 bytes, offset 8
    int        val                   //    4 bytes, offset 24
    int        val2                  //    4 bytes, offset 28
struct IDProperty // 136 bytes [#10]
    IDProperty *next                 //    8 bytes, offset 0
    IDProperty *prev                 //    8 bytes, offset 8
    char       type                  //    1 bytes, offset 16
    char       subtype               //    1 bytes, offset 17
    short      flag                  //    2 bytes, offset 18
    char       name[64]              //   64 bytes, offset 20
    char       _pad0[4]              //    4 bytes, offset 84
    IDPropertyData data              //   32 bytes, offset 88
    int        len                   //    4 bytes, offset 120
    int        totallen              //    4 bytes, offset 124
    IDPropertyUIData *ui_data        //    8 bytes, offset 128
struct IDOverrideLibraryPropertyOperation // 64 bytes [#11]
    IDOverrideLibraryPropertyOperation *next //    8 bytes, offset 0
    IDOverrideLibraryPropertyOperation *prev //    8 bytes, offset 8
    short      operation             //    2 bytes, offset 16
    short      flag                  //    2 bytes, offset 18
    short      tag                   //    2 bytes, offset 20
    char       _pad0[2]              //    2 bytes, offset 22
    char       *subitem_reference_name //    8 bytes, offset 24
    char       *subitem_local_name   //    8 bytes, offset 32
    int        subitem_reference_index //    4 bytes, offset 40
    int        subitem_local_index   //    4 bytes, offset 44
    ID         *subitem_reference_id //    8 bytes, offset 48
    ID         *subitem_local_id     //    8 bytes, offset 56
struct IDOverrideLibraryProperty // 48 bytes [#12]
    IDOverrideLibraryProperty *next  //    8 bytes, offset 0
    IDOverrideLibraryProperty *prev  //    8 bytes, offset 8
    char       *rna_path             //    8 bytes, offset 16
    ListBase   operations            //   16 bytes, offset 24
    short      tag                   //    2 bytes, offset 40
    char       _pad[2]               //    2 bytes, offset 42
    int        rna_prop_type         //    4 bytes, offset 44
struct IDOverrideLibrary // 48 bytes [#13]
    ID         *reference            //    8 bytes, offset 0
    ListBase   properties            //   16 bytes, offset 8
    ID         *hierarchy_root       //    8 bytes, offset 24
    IDOverrideLibraryRuntime *runtime //    8 bytes, offset 32
    int        flag                  //    4 bytes, offset 40
    char       _pad_1[4]             //    4 bytes, offset 44
struct ID_Runtime_Remap // 16 bytes [#14]
    int        status                //    4 bytes, offset 0
    int        skipped_refcounted    //    4 bytes, offset 4
    int        skipped_direct        //    4 bytes, offset 8
    int        skipped_indirect      //    4 bytes, offset 12
struct ID_Runtime // 32 bytes [#15]
    ID_Runtime_Remap remap           //   16 bytes, offset 0
    Depsgraph  *depsgraph            //    8 bytes, offset 16
    ID_Readfile_Data *readfile_data  //    8 bytes, offset 24
struct ID // 208 bytes [#16]
    void       *next                 //    8 bytes, offset 0
    void       *prev                 //    8 bytes, offset 8
    ID         *newid                //    8 bytes, offset 16
    Library    *lib                  //    8 bytes, offset 24
    AssetMetaData *asset_data        //    8 bytes, offset 32
    char       name[66]              //   66 bytes, offset 40
    short      flag                  //    2 bytes, offset 106
    int        tag                   //    4 bytes, offset 108
    int        us                    //    4 bytes, offset 112
    int        icon_id               //    4 bytes, offset 116
    int        recalc                //    4 bytes, offset 120
    int        recalc_up_to_undo_push //    4 bytes, offset 124
    int        recalc_after_undo_push //    4 bytes, offset 128
    int        session_uid           //    4 bytes, offset 132
    IDProperty *properties           //    8 bytes, offset 136
    IDOverrideLibrary *override_library //    8 bytes, offset 144
    ID         *orig_id              //    8 bytes, offset 152
    void       *py_instance          //    8 bytes, offset 160
    LibraryWeakReference *library_weak_reference //    8 bytes, offset 168
    ID_Runtime runtime               //   32 bytes, offset 176
struct Library_Runtime // 1064 bytes [#17]
    UniqueName_Map *name_map         //    8 bytes, offset 0
    FileData   *filedata             //    8 bytes, offset 8
    char       filepath_abs[1024]    // 1024 bytes, offset 16
    Library    *parent               //    8 bytes, offset 1040
    ushort     tag                   //    2 bytes, offset 1048
    char       _pad[6]               //    6 bytes, offset 1050
    int        temp_index            //    4 bytes, offset 1056
    short      versionfile           //    2 bytes, offset 1060
    short      subversionfile        //    2 bytes, offset 1062
struct Library // 2304 bytes, is ID [#18]
    ID         id                    //  208 bytes, offset 0
    char       name[1024]            // 1024 bytes, offset 208
    PackedFile *packedfile           //    8 bytes, offset 1232
    Library_Runtime runtime          // 1064 bytes, offset 1240
struct LibraryWeakReference // 1092 bytes [#19]
    char       library_filepath[1024] // 1024 bytes, offset 0
    char       library_id_name[66]   //   66 bytes, offset 1024
    char       _pad[2]               //    2 bytes, offset 1090
struct PreviewImage // 48 bytes [#20]
    int        w[2]                  //    8 bytes, offset 0
    int        h[2]                  //    8 bytes, offset 8
    short      flag[2]               //    4 bytes, offset 16
    short      changed_timestamp[2]  //    4 bytes, offset 20
    int        *rect[2]              //   16 bytes, offset 24
    PreviewImageRuntimeHandle *runtime //    8 bytes, offset 40
struct bMotionPathVert // 16 bytes [#21]
    float      co[3]                 //   12 bytes, offset 0
    int        flag                  //    4 bytes, offset 12
struct bMotionPath // 88 bytes [#22]
    bMotionPathVert *points          //    8 bytes, offset 0
    int        length                //    4 bytes, offset 8
    int        start_frame           //    4 bytes, offset 12
    int        end_frame             //    4 bytes, offset 16
    float      color[3]              //   12 bytes, offset 20
    float      color_post[3]         //   12 bytes, offset 32
    int        line_thickness        //    4 bytes, offset 44
    int        flag                  //    4 bytes, offset 48
    char       _pad2[4]              //    4 bytes, offset 52
    GPUVertBufHandle *points_vbo     //    8 bytes, offset 56
    GPUBatchHandle *batch_line       //    8 bytes, offset 64
    GPUBatchHandle *batch_points     //    8 bytes, offset 72
    void       *_pad                 //    8 bytes, offset 80
struct bAnimVizSettings // 32 bytes [#23]
    short      recalc                //    2 bytes, offset 0
    short      path_type             //    2 bytes, offset 2
    short      path_step             //    2 bytes, offset 4
    short      path_range            //    2 bytes, offset 6
    short      path_viewflag         //    2 bytes, offset 8
    short      path_bakeflag         //    2 bytes, offset 10
    char       _pad[4]               //    4 bytes, offset 12
    int        path_sf               //    4 bytes, offset 16
    int        path_ef               //    4 bytes, offset 20
    int        path_bc               //    4 bytes, offset 24
    int        path_ac               //    4 bytes, offset 28
struct bPoseChannel_BBoneSegmentBoundary // 32 bytes [#24]
    float      point[3]              //   12 bytes, offset 0
    float      plane_normal[3]       //   12 bytes, offset 12
    float      plane_offset          //    4 bytes, offset 24
    float      depth_scale           //    4 bytes, offset 28
struct bPoseChannel_Runtime // 168 bytes [#25]
    SessionUID session_uid           //    8 bytes, offset 0
    DualQuat   deform_dual_quat      //  100 bytes, offset 8
    int        bbone_segments        //    4 bytes, offset 108
    float      bbone_arc_length_reciprocal //    4 bytes, offset 112
    char       _pad1[4]              //    4 bytes, offset 116
    Mat4       *bbone_rest_mats      //    8 bytes, offset 120
    Mat4       *bbone_pose_mats      //    8 bytes, offset 128
    Mat4       *bbone_deform_mats    //    8 bytes, offset 136
    DualQuat   *bbone_dual_quats     //    8 bytes, offset 144
    bPoseChannel_BBoneSegmentBoundary *bbone_segment_boundaries //    8 bytes, offset 152
    void       *_pad                 //    8 bytes, offset 160
struct bPoseChannel // 1016 bytes [#26]
    bPoseChannel *next               //    8 bytes, offset 0
    bPoseChannel *prev               //    8 bytes, offset 8
    IDProperty *prop                 //    8 bytes, offset 16
    ListBase   constraints           //   16 bytes, offset 24
    char       name[64]              //   64 bytes, offset 40
    short      flag                  //    2 bytes, offset 104
    short      ikflag                //    2 bytes, offset 106
    short      protectflag           //    2 bytes, offset 108
    short      agrp_index            //    2 bytes, offset 110
    char       constflag             //    1 bytes, offset 112
    char       selectflag            //    1 bytes, offset 113
    char       drawflag              //    1 bytes, offset 114
    char       bboneflag             //    1 bytes, offset 115
    char       _pad0[4]              //    4 bytes, offset 116
    Bone       *bone                 //    8 bytes, offset 120
    bPoseChannel *parent             //    8 bytes, offset 128
    bPoseChannel *child              //    8 bytes, offset 136
    ListBase   iktree                //   16 bytes, offset 144
    ListBase   siktree               //   16 bytes, offset 160
    bMotionPath *mpath               //    8 bytes, offset 176
    Object     *custom               //    8 bytes, offset 184
    bPoseChannel *custom_tx          //    8 bytes, offset 192
    float      custom_scale          //    4 bytes, offset 200
    float      custom_scale_xyz[3]   //   12 bytes, offset 204
    float      custom_translation[3] //   12 bytes, offset 216
    float      custom_rotation_euler[3] //   12 bytes, offset 228
    float      custom_shape_wire_width //    4 bytes, offset 240
    float      loc[3]                //   12 bytes, offset 244
    float      size[3]               //   12 bytes, offset 256
    float      eul[3]                //   12 bytes, offset 268
    float      quat[4]               //   16 bytes, offset 280
    float      rotAxis[3]            //   12 bytes, offset 296
    float      rotAngle              //    4 bytes, offset 308
    short      rotmode               //    2 bytes, offset 312
    char       _pad[6]               //    6 bytes, offset 314
    float      chan_mat[4][4]        //   64 bytes, offset 320
    float      pose_mat[4][4]        //   64 bytes, offset 384
    float      disp_mat[4][4]        //   64 bytes, offset 448
    float      disp_tail_mat[4][4]   //   64 bytes, offset 512
    float      constinv[4][4]        //   64 bytes, offset 576
    float      pose_head[3]          //   12 bytes, offset 640
    float      pose_tail[3]          //   12 bytes, offset 652
    float      limitmin[3]           //   12 bytes, offset 664
    float      limitmax[3]           //   12 bytes, offset 676
    float      stiffness[3]          //   12 bytes, offset 688
    float      ikstretch             //    4 bytes, offset 700
    float      ikrotweight           //    4 bytes, offset 704
    float      iklinweight           //    4 bytes, offset 708
    float      roll1                 //    4 bytes, offset 712
    float      roll2                 //    4 bytes, offset 716
    float      curveInX              //    4 bytes, offset 720
    float      curveInY              //    4 bytes, offset 724
    float      curveOutX             //    4 bytes, offset 728
    float      curveOutY             //    4 bytes, offset 732
    float      ease1                 //    4 bytes, offset 736
    float      ease2                 //    4 bytes, offset 740
    float      scaleIn               //    4 bytes, offset 744
    float      scale_in_y            //    4 bytes, offset 748
    float      scaleOut              //    4 bytes, offset 752
    float      scale_out_y           //    4 bytes, offset 756
    float      scale_in[3]           //   12 bytes, offset 760
    float      scale_out[3]          //   12 bytes, offset 772
    bPoseChannel *bbone_prev         //    8 bytes, offset 784
    bPoseChannel *bbone_next         //    8 bytes, offset 792
    void       *temp                 //    8 bytes, offset 800
    bPoseChannelDrawData *draw_data  //    8 bytes, offset 808
    bPoseChannel *orig_pchan         //    8 bytes, offset 816
    BoneColor  color                 //   24 bytes, offset 824
    bPoseChannel_Runtime runtime     //  168 bytes, offset 848
struct bPose // 136 bytes [#27]
    ListBase   chanbase              //   16 bytes, offset 0
    GHash      *chanhash             //    8 bytes, offset 16
    bPoseChannel **chan_array        //    8 bytes, offset 24
    short      flag                  //    2 bytes, offset 32
    char       _pad[2]               //    2 bytes, offset 34
    float      ctime                 //    4 bytes, offset 36
    float      stride_offset[3]      //   12 bytes, offset 40
    float      cyclic_offset[3]      //   12 bytes, offset 52
    ListBase   agroups               //   16 bytes, offset 64
    int        active_group          //    4 bytes, offset 80
    int        iksolver              //    4 bytes, offset 84
    void       *ikdata               //    8 bytes, offset 88
    void       *ikparam              //    8 bytes, offset 96
    bAnimVizSettings avs             //   32 bytes, offset 104
struct bIKParam // 4 bytes [#28]
    int        iksolver              //    4 bytes, offset 0
struct bItasc // 40 bytes [#29]
    int        iksolver              //    4 bytes, offset 0
    float      precision             //    4 bytes, offset 4
    short      numiter               //    2 bytes, offset 8
    short      numstep               //    2 bytes, offset 10
    float      minstep               //    4 bytes, offset 12
    float      maxstep               //    4 bytes, offset 16
    short      solver                //    2 bytes, offset 20
    short      flag                  //    2 bytes, offset 22
    float      feedback              //    4 bytes, offset 24
    float      maxvel                //    4 bytes, offset 28
    float      dampmax               //    4 bytes, offset 32
    float      dampeps               //    4 bytes, offset 36
struct bActionGroup // 136 bytes [#30]
    bActionGroup *next               //    8 bytes, offset 0
    bActionGroup *prev               //    8 bytes, offset 8
    ListBase   channels              //   16 bytes, offset 16
    int        fcurve_range_start    //    4 bytes, offset 32
    int        fcurve_range_length   //    4 bytes, offset 36
    ActionChannelBag *channel_bag    //    8 bytes, offset 40
    int        flag                  //    4 bytes, offset 48
    int        customCol             //    4 bytes, offset 52
    char       name[64]              //   64 bytes, offset 56
    ThemeWireColor cs                //   16 bytes, offset 120
struct bAction // 352 bytes, is ID [#31]
    ID         id                    //  208 bytes, offset 0
    ActionLayer **layer_array        //    8 bytes, offset 208
    int        layer_array_num       //    4 bytes, offset 216
    int        layer_active_index    //    4 bytes, offset 220
    ActionSlot **slot_array          //    8 bytes, offset 224
    int        slot_array_num        //    4 bytes, offset 232
    int        last_slot_handle      //    4 bytes, offset 236
    ActionStripKeyframeData **strip_keyframe_data_array //    8 bytes, offset 240
    int        strip_keyframe_data_array_num //    4 bytes, offset 248
    char       _pad0[4]              //    4 bytes, offset 252
    ListBase   curves                //   16 bytes, offset 256
    ListBase   chanbase              //   16 bytes, offset 272
    ListBase   groups                //   16 bytes, offset 288
    ListBase   markers               //   16 bytes, offset 304
    int        flag                  //    4 bytes, offset 320
    int        active_marker         //    4 bytes, offset 324
    int        idroot                //    4 bytes, offset 328
    char       _pad1[4]              //    4 bytes, offset 332
    float      frame_start           //    4 bytes, offset 336
    float      frame_end             //    4 bytes, offset 340
    PreviewImage *preview            //    8 bytes, offset 344
struct bDopeSheet // 112 bytes [#32]
    ID         *source               //    8 bytes, offset 0
    ListBase   chanbase              //   16 bytes, offset 8
    Collection *filter_grp           //    8 bytes, offset 24
    char       searchstr[64]         //   64 bytes, offset 32
    int        filterflag            //    4 bytes, offset 96
    int        filterflag2           //    4 bytes, offset 100
    int        flag                  //    4 bytes, offset 104
    int        renameIndex           //    4 bytes, offset 108
struct SpaceAction_Runtime // 8 bytes [#33]
    char       flag                  //    1 bytes, offset 0
    char       _pad0[7]              //    7 bytes, offset 1
struct SpaceAction // 344 bytes [#34]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    View2D     v2d                   //  152 bytes, offset 40
    bAction    *action               //    8 bytes, offset 192
    int        action_slot_handle    //    4 bytes, offset 200
    char       _pad2[4]              //    4 bytes, offset 204
    bDopeSheet ads                   //  112 bytes, offset 208
    float      timeslide             //    4 bytes, offset 320
    short      flag                  //    2 bytes, offset 324
    char       mode                  //    1 bytes, offset 326
    char       mode_prev             //    1 bytes, offset 327
    char       autosnap              //    1 bytes, offset 328
    char       cache_display         //    1 bytes, offset 329
    char       _pad1[6]              //    6 bytes, offset 330
    SpaceAction_Runtime runtime      //    8 bytes, offset 336
struct bActionChannel // 120 bytes [#35]
    bActionChannel *next             //    8 bytes, offset 0
    bActionChannel *prev             //    8 bytes, offset 8
    bActionGroup *grp                //    8 bytes, offset 16
    Ipo        *ipo                  //    8 bytes, offset 24
    ListBase   constraintChannels    //   16 bytes, offset 32
    int        flag                  //    4 bytes, offset 48
    char       name[64]              //   64 bytes, offset 52
    int        temp                  //    4 bytes, offset 116
struct ActionLayer // 88 bytes [#36]
    char       name[64]              //   64 bytes, offset 0
    float      influence             //    4 bytes, offset 64
    uchar      layer_flags           //    1 bytes, offset 68
    int8_t     layer_mix_mode        //    1 bytes, offset 69
    uchar      _pad0[2]              //    2 bytes, offset 70
    ActionStrip **strip_array        //    8 bytes, offset 72
    int        strip_array_num       //    4 bytes, offset 80
    uchar      _pad1[4]              //    4 bytes, offset 84
struct ActionSlot // 88 bytes [#37]
    char       name[66]              //   66 bytes, offset 0
    short      idtype                //    2 bytes, offset 66
    int        handle                //    4 bytes, offset 68
    int8_t     slot_flags            //    1 bytes, offset 72
    uchar      _pad1[7]              //    7 bytes, offset 73
    ActionSlotRuntimeHandle *runtime //    8 bytes, offset 80
struct ActionStrip // 24 bytes [#38]
    int8_t     strip_type            //    1 bytes, offset 0
    uchar      _pad0[3]              //    3 bytes, offset 1
    int        data_index            //    4 bytes, offset 4
    float      frame_start           //    4 bytes, offset 8
    float      frame_end             //    4 bytes, offset 12
    float      frame_offset          //    4 bytes, offset 16
    uchar      _pad1[4]              //    4 bytes, offset 20
struct ActionStripKeyframeData // 16 bytes [#39]
    ActionChannelBag **channelbag_array //    8 bytes, offset 0
    int        channelbag_array_num  //    4 bytes, offset 8
    uchar      _pad[4]               //    4 bytes, offset 12
struct ActionChannelBag // 32 bytes [#40]
    int        slot_handle           //    4 bytes, offset 0
    int        group_array_num       //    4 bytes, offset 4
    bActionGroup **group_array       //    8 bytes, offset 8
    uchar      _pad[4]               //    4 bytes, offset 16
    int        fcurve_array_num      //    4 bytes, offset 20
    FCurve     **fcurve_array        //    8 bytes, offset 24
struct FModifier // 128 bytes [#41]
    FModifier  *next                 //    8 bytes, offset 0
    FModifier  *prev                 //    8 bytes, offset 8
    FCurve     *curve                //    8 bytes, offset 16
    void       *data                 //    8 bytes, offset 24
    char       name[64]              //   64 bytes, offset 32
    short      type                  //    2 bytes, offset 96
    short      flag                  //    2 bytes, offset 98
    short      ui_expand_flag        //    2 bytes, offset 100
    char       _pad[6]               //    6 bytes, offset 102
    float      influence             //    4 bytes, offset 108
    float      sfra                  //    4 bytes, offset 112
    float      efra                  //    4 bytes, offset 116
    float      blendin               //    4 bytes, offset 120
    float      blendout              //    4 bytes, offset 124
struct FMod_Generator // 24 bytes [#42]
    float      *coefficients         //    8 bytes, offset 0
    int        arraysize             //    4 bytes, offset 8
    int        poly_order            //    4 bytes, offset 12
    int        mode                  //    4 bytes, offset 16
    int        flag                  //    4 bytes, offset 20
struct FMod_FunctionGenerator // 24 bytes [#43]
    float      amplitude             //    4 bytes, offset 0
    float      phase_multiplier      //    4 bytes, offset 4
    float      phase_offset          //    4 bytes, offset 8
    float      value_offset          //    4 bytes, offset 12
    int        type                  //    4 bytes, offset 16
    int        flag                  //    4 bytes, offset 20
struct FCM_EnvelopeData // 16 bytes [#44]
    float      min                   //    4 bytes, offset 0
    float      max                   //    4 bytes, offset 4
    float      time                  //    4 bytes, offset 8
    short      f1                    //    2 bytes, offset 12
    short      f2                    //    2 bytes, offset 14
struct FMod_Envelope // 24 bytes [#45]
    FCM_EnvelopeData *data           //    8 bytes, offset 0
    int        totvert               //    4 bytes, offset 8
    float      midval                //    4 bytes, offset 12
    float      min                   //    4 bytes, offset 16
    float      max                   //    4 bytes, offset 20
struct FMod_Cycles // 8 bytes [#46]
    short      before_mode           //    2 bytes, offset 0
    short      after_mode            //    2 bytes, offset 2
    short      before_cycles         //    2 bytes, offset 4
    short      after_cycles          //    2 bytes, offset 6
struct FMod_Limits // 24 bytes [#47]
    rctf       rect                  //   16 bytes, offset 0
    int        flag                  //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct FMod_Noise // 32 bytes [#48]
    float      size                  //    4 bytes, offset 0
    float      strength              //    4 bytes, offset 4
    float      phase                 //    4 bytes, offset 8
    float      offset                //    4 bytes, offset 12
    float      roughness             //    4 bytes, offset 16
    float      lacunarity            //    4 bytes, offset 20
    short      depth                 //    2 bytes, offset 24
    short      modification          //    2 bytes, offset 26
    char       legacy_noise          //    1 bytes, offset 28
    char       _pad[3]               //    3 bytes, offset 29
struct FMod_Stepped // 20 bytes [#49]
    float      step_size             //    4 bytes, offset 0
    float      offset                //    4 bytes, offset 4
    float      start_frame           //    4 bytes, offset 8
    float      end_frame             //    4 bytes, offset 12
    int        flag                  //    4 bytes, offset 16
struct DriverTarget // 104 bytes [#50]
    ID         *id                   //    8 bytes, offset 0
    char       *rna_path             //    8 bytes, offset 8
    char       pchan_name[64]        //   64 bytes, offset 16
    short      transChan             //    2 bytes, offset 80
    char       rotation_mode         //    1 bytes, offset 82
    char       _pad[5]               //    5 bytes, offset 83
    short      flag                  //    2 bytes, offset 88
    short      options               //    2 bytes, offset 90
    int        idtype                //    4 bytes, offset 92
    int        context_property      //    4 bytes, offset 96
    float      fallback_value        //    4 bytes, offset 100
struct DriverVar // 920 bytes [#51]
    DriverVar  *next                 //    8 bytes, offset 0
    DriverVar  *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    DriverTarget targets[8]          //  832 bytes, offset 80
    char       num_targets           //    1 bytes, offset 912
    char       type                  //    1 bytes, offset 913
    short      flag                  //    2 bytes, offset 914
    float      curval                //    4 bytes, offset 916
struct ChannelDriver // 304 bytes [#52]
    ListBase   variables             //   16 bytes, offset 0
    char       expression[256]       //  256 bytes, offset 16
    void       *expr_comp            //    8 bytes, offset 272
    ExprPyLike_Parsed *expr_simple   //    8 bytes, offset 280
    float      curval                //    4 bytes, offset 288
    float      influence             //    4 bytes, offset 292
    int        type                  //    4 bytes, offset 296
    int        flag                  //    4 bytes, offset 300
struct FPoint // 16 bytes [#53]
    float      vec[2]                //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
struct FCurve // 120 bytes [#54]
    FCurve     *next                 //    8 bytes, offset 0
    FCurve     *prev                 //    8 bytes, offset 8
    bActionGroup *grp                //    8 bytes, offset 16
    ChannelDriver *driver            //    8 bytes, offset 24
    ListBase   modifiers             //   16 bytes, offset 32
    BezTriple  *bezt                 //    8 bytes, offset 48
    FPoint     *fpt                  //    8 bytes, offset 56
    int        totvert               //    4 bytes, offset 64
    int        active_keyframe_index //    4 bytes, offset 68
    float      curval                //    4 bytes, offset 72
    short      flag                  //    2 bytes, offset 76
    short      extend                //    2 bytes, offset 78
    char       auto_smoothing        //    1 bytes, offset 80
    char       _pad[3]               //    3 bytes, offset 81
    int        array_index           //    4 bytes, offset 84
    char       *rna_path             //    8 bytes, offset 88
    int        color_mode            //    4 bytes, offset 96
    float      color[3]              //   12 bytes, offset 100
    float      prev_norm_factor      //    4 bytes, offset 112
    float      prev_offset           //    4 bytes, offset 116
struct NlaStrip // 288 bytes [#55]
    NlaStrip   *next                 //    8 bytes, offset 0
    NlaStrip   *prev                 //    8 bytes, offset 8
    ListBase   strips                //   16 bytes, offset 16
    bAction    *act                  //    8 bytes, offset 32
    int        action_slot_handle    //    4 bytes, offset 40
    char       action_slot_name[66]  //   66 bytes, offset 44
    char       _pad0[2]              //    2 bytes, offset 110
    ListBase   fcurves               //   16 bytes, offset 112
    ListBase   modifiers             //   16 bytes, offset 128
    char       name[64]              //   64 bytes, offset 144
    float      influence             //    4 bytes, offset 208
    float      strip_time            //    4 bytes, offset 212
    float      start                 //    4 bytes, offset 216
    float      end                   //    4 bytes, offset 220
    float      actstart              //    4 bytes, offset 224
    float      actend                //    4 bytes, offset 228
    float      repeat                //    4 bytes, offset 232
    float      scale                 //    4 bytes, offset 236
    float      blendin               //    4 bytes, offset 240
    float      blendout              //    4 bytes, offset 244
    short      blendmode             //    2 bytes, offset 248
    short      extendmode            //    2 bytes, offset 250
    char       _pad1[2]              //    2 bytes, offset 252
    short      type                  //    2 bytes, offset 254
    void       *speaker_handle       //    8 bytes, offset 256
    int        flag                  //    4 bytes, offset 264
    char       _pad2[4]              //    4 bytes, offset 268
    NlaStrip   *orig_strip           //    8 bytes, offset 272
    void       *_pad3                //    8 bytes, offset 280
struct NlaTrack // 104 bytes [#56]
    NlaTrack   *next                 //    8 bytes, offset 0
    NlaTrack   *prev                 //    8 bytes, offset 8
    ListBase   strips                //   16 bytes, offset 16
    int        flag                  //    4 bytes, offset 32
    int        index                 //    4 bytes, offset 36
    char       name[64]              //   64 bytes, offset 40
struct KS_Path // 112 bytes [#57]
    KS_Path    *next                 //    8 bytes, offset 0
    KS_Path    *prev                 //    8 bytes, offset 8
    ID         *id                   //    8 bytes, offset 16
    char       group[64]             //   64 bytes, offset 24
    int        idtype                //    4 bytes, offset 88
    short      groupmode             //    2 bytes, offset 92
    short      flag                  //    2 bytes, offset 94
    char       *rna_path             //    8 bytes, offset 96
    int        array_index           //    4 bytes, offset 104
    short      keyingflag            //    2 bytes, offset 108
    short      keyingoverride        //    2 bytes, offset 110
struct KeyingSet // 1264 bytes [#58]
    KeyingSet  *next                 //    8 bytes, offset 0
    KeyingSet  *prev                 //    8 bytes, offset 8
    ListBase   paths                 //   16 bytes, offset 16
    char       idname[64]            //   64 bytes, offset 32
    char       name[64]              //   64 bytes, offset 96
    char       description[1024]     // 1024 bytes, offset 160
    char       typeinfo[64]          //   64 bytes, offset 1184
    int        active_path           //    4 bytes, offset 1248
    short      flag                  //    2 bytes, offset 1252
    short      keyingflag            //    2 bytes, offset 1254
    short      keyingoverride        //    2 bytes, offset 1256
    char       _pad[6]               //    6 bytes, offset 1258
struct AnimOverride // 32 bytes [#59]
    AnimOverride *next               //    8 bytes, offset 0
    AnimOverride *prev               //    8 bytes, offset 8
    char       *rna_path             //    8 bytes, offset 16
    int        array_index           //    4 bytes, offset 24
    float      value                 //    4 bytes, offset 28
struct AnimData // 248 bytes [#60]
    bAction    *action               //    8 bytes, offset 0
    int        slot_handle           //    4 bytes, offset 8
    char       slot_name[66]         //   66 bytes, offset 12
    uchar      _pad0[2]              //    2 bytes, offset 78
    bAction    *tmpact               //    8 bytes, offset 80
    int        tmp_slot_handle       //    4 bytes, offset 88
    char       tmp_slot_name[66]     //   66 bytes, offset 92
    uchar      _pad1[2]              //    2 bytes, offset 158
    ListBase   nla_tracks            //   16 bytes, offset 160
    NlaTrack   *act_track            //    8 bytes, offset 176
    NlaStrip   *actstrip             //    8 bytes, offset 184
    ListBase   drivers               //   16 bytes, offset 192
    ListBase   overrides             //   16 bytes, offset 208
    FCurve     **driver_array        //    8 bytes, offset 224
    int        flag                  //    4 bytes, offset 232
    short      act_blendmode         //    2 bytes, offset 236
    short      act_extendmode        //    2 bytes, offset 238
    float      act_influence         //    4 bytes, offset 240
    uchar      _pad2[4]              //    4 bytes, offset 244
struct IdAdtTemplate // 216 bytes, is ID [#61]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
struct BoneColor // 24 bytes [#62]
    int8_t     palette_index         //    1 bytes, offset 0
    uchar      _pad0[7]              //    7 bytes, offset 1
    ThemeWireColor custom            //   16 bytes, offset 8
struct Bone_Runtime // 16 bytes [#63]
    ListBase   collections           //   16 bytes, offset 0
struct Bone // 472 bytes [#64]
    Bone       *next                 //    8 bytes, offset 0
    Bone       *prev                 //    8 bytes, offset 8
    IDProperty *prop                 //    8 bytes, offset 16
    Bone       *parent               //    8 bytes, offset 24
    ListBase   childbase             //   16 bytes, offset 32
    char       name[64]              //   64 bytes, offset 48
    float      roll                  //    4 bytes, offset 112
    float      head[3]               //   12 bytes, offset 116
    float      tail[3]               //   12 bytes, offset 128
    float      bone_mat[3][3]        //   36 bytes, offset 140
    int        flag                  //    4 bytes, offset 176
    char       _pad1[4]              //    4 bytes, offset 180
    BoneColor  color                 //   24 bytes, offset 184
    char       inherit_scale_mode    //    1 bytes, offset 208
    char       _pad[3]               //    3 bytes, offset 209
    float      arm_head[3]           //   12 bytes, offset 212
    float      arm_tail[3]           //   12 bytes, offset 224
    float      arm_mat[4][4]         //   64 bytes, offset 236
    float      arm_roll              //    4 bytes, offset 300
    float      dist                  //    4 bytes, offset 304
    float      weight                //    4 bytes, offset 308
    float      xwidth                //    4 bytes, offset 312
    float      length                //    4 bytes, offset 316
    float      zwidth                //    4 bytes, offset 320
    float      rad_head              //    4 bytes, offset 324
    float      rad_tail              //    4 bytes, offset 328
    float      roll1                 //    4 bytes, offset 332
    float      roll2                 //    4 bytes, offset 336
    float      curveInX              //    4 bytes, offset 340
    float      curveInY              //    4 bytes, offset 344
    float      curveOutX             //    4 bytes, offset 348
    float      curveOutY             //    4 bytes, offset 352
    float      ease1                 //    4 bytes, offset 356
    float      ease2                 //    4 bytes, offset 360
    float      scaleIn               //    4 bytes, offset 364
    float      scale_in_y            //    4 bytes, offset 368
    float      scaleOut              //    4 bytes, offset 372
    float      scale_out_y           //    4 bytes, offset 376
    float      scale_in[3]           //   12 bytes, offset 380
    float      scale_out[3]          //   12 bytes, offset 392
    float      size[3]               //   12 bytes, offset 404
    int        layer                 //    4 bytes, offset 416
    short      segments              //    2 bytes, offset 420
    char       bbone_mapping_mode    //    1 bytes, offset 422
    char       _pad2[7]              //    7 bytes, offset 423
    char       bbone_prev_type       //    1 bytes, offset 430
    char       bbone_next_type       //    1 bytes, offset 431
    int        bbone_flag            //    4 bytes, offset 432
    short      bbone_prev_flag       //    2 bytes, offset 436
    short      bbone_next_flag       //    2 bytes, offset 438
    Bone       *bbone_prev           //    8 bytes, offset 440
    Bone       *bbone_next           //    8 bytes, offset 448
    Bone_Runtime runtime             //   16 bytes, offset 456
struct bArmature_Runtime // 16 bytes [#65]
    int        active_collection_index //    4 bytes, offset 0
    uchar      _pad0[4]              //    4 bytes, offset 4
    BoneCollection *active_collection //    8 bytes, offset 8
struct bArmature // 416 bytes, is ID [#66]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    ListBase   bonebase              //   16 bytes, offset 216
    GHash      *bonehash             //    8 bytes, offset 232
    void       *_pad1                //    8 bytes, offset 240
    ListBase   *edbo                 //    8 bytes, offset 248
    Bone       *act_bone             //    8 bytes, offset 256
    EditBone   *act_edbone           //    8 bytes, offset 264
    char       needs_flush_to_id     //    1 bytes, offset 272
    char       _pad0[3]              //    3 bytes, offset 273
    int        flag                  //    4 bytes, offset 276
    int        drawtype              //    4 bytes, offset 280
    short      deformflag            //    2 bytes, offset 284
    short      pathflag              //    2 bytes, offset 286
    ListBase   collections           //   16 bytes, offset 288
    BoneCollection **collection_array //    8 bytes, offset 304
    int        collection_array_num  //    4 bytes, offset 312
    int        collection_root_count //    4 bytes, offset 316
    char       active_collection_name[64] //   64 bytes, offset 320
    int        layer_used            //    4 bytes, offset 384
    int        layer                 //    4 bytes, offset 388
    int        layer_protected       //    4 bytes, offset 392
    float      axes_position         //    4 bytes, offset 396
    bArmature_Runtime runtime        //   16 bytes, offset 400
struct BoneCollection // 120 bytes [#67]
    BoneCollection *next             //    8 bytes, offset 0
    BoneCollection *prev             //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    ListBase   bones                 //   16 bytes, offset 80
    uchar      flags                 //    1 bytes, offset 96
    uchar      _pad0[7]              //    7 bytes, offset 97
    int        child_index           //    4 bytes, offset 104
    int        child_count           //    4 bytes, offset 108
    IDProperty *prop                 //    8 bytes, offset 112
struct BoneCollectionMember // 24 bytes [#68]
    BoneCollectionMember *next       //    8 bytes, offset 0
    BoneCollectionMember *prev       //    8 bytes, offset 8
    Bone       *bone                 //    8 bytes, offset 16
struct BoneCollectionReference // 24 bytes [#69]
    BoneCollectionReference *next    //    8 bytes, offset 0
    BoneCollectionReference *prev    //    8 bytes, offset 8
    BoneCollection *bcoll            //    8 bytes, offset 16
struct AssetTag // 80 bytes [#70]
    AssetTag   *next                 //    8 bytes, offset 0
    AssetTag   *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
struct AssetMetaData // 152 bytes [#71]
    AssetTypeInfo *local_type_info   //    8 bytes, offset 0
    IDProperty *properties           //    8 bytes, offset 8
    bUUID      catalog_id            //   16 bytes, offset 16
    char       catalog_simple_name[64] //   64 bytes, offset 32
    char       *author               //    8 bytes, offset 96
    char       *description          //    8 bytes, offset 104
    char       *copyright            //    8 bytes, offset 112
    char       *license              //    8 bytes, offset 120
    ListBase   tags                  //   16 bytes, offset 128
    short      active_tag            //    2 bytes, offset 144
    short      tot_tags              //    2 bytes, offset 146
    char       _pad[4]               //    4 bytes, offset 148
struct AssetLibraryReference // 8 bytes [#72]
    short      type                  //    2 bytes, offset 0
    char       _pad1[2]              //    2 bytes, offset 2
    int        custom_library_index  //    4 bytes, offset 4
struct AssetWeakReference // 24 bytes [#73]
    char       _pad[6]               //    6 bytes, offset 0
    short      asset_library_type    //    2 bytes, offset 6
    char       *asset_library_identifier //    8 bytes, offset 8
    char       *relative_asset_identifier //    8 bytes, offset 16
struct AssetCatalogPathLink // 24 bytes [#74]
    AssetCatalogPathLink *next       //    8 bytes, offset 0
    AssetCatalogPathLink *prev       //    8 bytes, offset 8
    char       *path                 //    8 bytes, offset 16
struct BoidRule // 56 bytes [#75]
    BoidRule   *next                 //    8 bytes, offset 0
    BoidRule   *prev                 //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    int        flag                  //    4 bytes, offset 20
    char       name[32]              //   32 bytes, offset 24
struct BoidRuleGoalAvoid // 80 bytes [#76]
    BoidRule   rule                  //   56 bytes, offset 0
    Object     *ob                   //    8 bytes, offset 56
    int        options               //    4 bytes, offset 64
    float      fear_factor           //    4 bytes, offset 68
    int        signal_id             //    4 bytes, offset 72
    int        channels              //    4 bytes, offset 76
struct BoidRuleAvoidCollision // 64 bytes [#77]
    BoidRule   rule                  //   56 bytes, offset 0
    int        options               //    4 bytes, offset 56
    float      look_ahead            //    4 bytes, offset 60
struct BoidRuleFollowLeader // 104 bytes [#78]
    BoidRule   rule                  //   56 bytes, offset 0
    Object     *ob                   //    8 bytes, offset 56
    float      loc[3]                //   12 bytes, offset 64
    float      oloc[3]               //   12 bytes, offset 76
    float      cfra                  //    4 bytes, offset 88
    float      distance              //    4 bytes, offset 92
    int        options               //    4 bytes, offset 96
    int        queue_size            //    4 bytes, offset 100
struct BoidRuleAverageSpeed // 72 bytes [#79]
    BoidRule   rule                  //   56 bytes, offset 0
    float      wander                //    4 bytes, offset 56
    float      level                 //    4 bytes, offset 60
    float      speed                 //    4 bytes, offset 64
    char       _pad0[4]              //    4 bytes, offset 68
struct BoidRuleFight // 64 bytes [#80]
    BoidRule   rule                  //   56 bytes, offset 0
    float      distance              //    4 bytes, offset 56
    float      flee_distance         //    4 bytes, offset 60
struct BoidData // 20 bytes [#81]
    float      health                //    4 bytes, offset 0
    float      acc[3]                //   12 bytes, offset 4
    short      state_id              //    2 bytes, offset 16
    short      mode                  //    2 bytes, offset 18
struct BoidState // 128 bytes [#82]
    BoidState  *next                 //    8 bytes, offset 0
    BoidState  *prev                 //    8 bytes, offset 8
    ListBase   rules                 //   16 bytes, offset 16
    ListBase   conditions            //   16 bytes, offset 32
    ListBase   actions               //   16 bytes, offset 48
    char       name[32]              //   32 bytes, offset 64
    int        id                    //    4 bytes, offset 96
    int        flag                  //    4 bytes, offset 100
    int        ruleset_type          //    4 bytes, offset 104
    float      rule_fuzziness        //    4 bytes, offset 108
    int        signal_id             //    4 bytes, offset 112
    int        channels              //    4 bytes, offset 116
    float      volume                //    4 bytes, offset 120
    float      falloff               //    4 bytes, offset 124
struct BoidSettings // 104 bytes [#83]
    int        options               //    4 bytes, offset 0
    int        last_state_id         //    4 bytes, offset 4
    float      landing_smoothness    //    4 bytes, offset 8
    float      height                //    4 bytes, offset 12
    float      banking               //    4 bytes, offset 16
    float      pitch                 //    4 bytes, offset 20
    float      health                //    4 bytes, offset 24
    float      aggression            //    4 bytes, offset 28
    float      strength              //    4 bytes, offset 32
    float      accuracy              //    4 bytes, offset 36
    float      range                 //    4 bytes, offset 40
    float      air_min_speed         //    4 bytes, offset 44
    float      air_max_speed         //    4 bytes, offset 48
    float      air_max_acc           //    4 bytes, offset 52
    float      air_max_ave           //    4 bytes, offset 56
    float      air_personal_space    //    4 bytes, offset 60
    float      land_jump_speed       //    4 bytes, offset 64
    float      land_max_speed        //    4 bytes, offset 68
    float      land_max_acc          //    4 bytes, offset 72
    float      land_max_ave          //    4 bytes, offset 76
    float      land_personal_space   //    4 bytes, offset 80
    float      land_stick_force      //    4 bytes, offset 84
    ListBase   states                //   16 bytes, offset 88
struct BrushGpencilSettings // 248 bytes [#84]
    float      draw_smoothfac        //    4 bytes, offset 0
    float      fill_factor           //    4 bytes, offset 4
    float      draw_strength         //    4 bytes, offset 8
    float      draw_jitter           //    4 bytes, offset 12
    float      draw_angle            //    4 bytes, offset 16
    float      draw_angle_factor     //    4 bytes, offset 20
    float      draw_random_press     //    4 bytes, offset 24
    float      draw_random_strength  //    4 bytes, offset 28
    short      draw_smoothlvl        //    2 bytes, offset 32
    short      draw_subdivide        //    2 bytes, offset 34
    short      fill_layer_mode       //    2 bytes, offset 36
    short      fill_direction        //    2 bytes, offset 38
    float      fill_threshold        //    4 bytes, offset 40
    char       _pad2[2]              //    2 bytes, offset 44
    int8_t     caps_type             //    1 bytes, offset 46
    char       _pad[1]               //    1 bytes, offset 47
    int        flag2                 //    4 bytes, offset 48
    int        fill_simplylvl        //    4 bytes, offset 52
    int        fill_draw_mode        //    4 bytes, offset 56
    int        fill_extend_mode      //    4 bytes, offset 60
    int        input_samples         //    4 bytes, offset 64
    float      uv_random             //    4 bytes, offset 68
    int        brush_type            //    4 bytes, offset 72
    int        eraser_mode           //    4 bytes, offset 76
    float      active_smooth         //    4 bytes, offset 80
    float      era_strength_f        //    4 bytes, offset 84
    float      era_thickness_f       //    4 bytes, offset 88
    int        flag                  //    4 bytes, offset 92
    float      gradient_f            //    4 bytes, offset 96
    float      gradient_s[2]         //    8 bytes, offset 100
    float      simplify_f            //    4 bytes, offset 108
    float      vertex_factor         //    4 bytes, offset 112
    int        vertex_mode           //    4 bytes, offset 116
    int        sculpt_flag           //    4 bytes, offset 120
    int        sculpt_mode_flag      //    4 bytes, offset 124
    short      preset_type           //    2 bytes, offset 128
    short      brush_draw_mode       //    2 bytes, offset 130
    float      random_hue            //    4 bytes, offset 132
    float      random_saturation     //    4 bytes, offset 136
    float      random_value          //    4 bytes, offset 140
    float      fill_extend_fac       //    4 bytes, offset 144
    int        dilate_pixels         //    4 bytes, offset 148
    CurveMapping *curve_sensitivity  //    8 bytes, offset 152
    CurveMapping *curve_strength     //    8 bytes, offset 160
    CurveMapping *curve_jitter       //    8 bytes, offset 168
    CurveMapping *curve_rand_pressure //    8 bytes, offset 176
    CurveMapping *curve_rand_strength //    8 bytes, offset 184
    CurveMapping *curve_rand_uv      //    8 bytes, offset 192
    CurveMapping *curve_rand_hue     //    8 bytes, offset 200
    CurveMapping *curve_rand_saturation //    8 bytes, offset 208
    CurveMapping *curve_rand_value   //    8 bytes, offset 216
    float      outline_fac           //    4 bytes, offset 224
    float      simplify_px           //    4 bytes, offset 228
    Material   *material             //    8 bytes, offset 232
    Material   *material_alt         //    8 bytes, offset 240
struct BrushCurvesSculptSettings // 48 bytes [#85]
    int        add_amount            //    4 bytes, offset 0
    int        points_per_curve      //    4 bytes, offset 4
    int        flag                  //    4 bytes, offset 8
    float      minimum_length        //    4 bytes, offset 12
    float      curve_length          //    4 bytes, offset 16
    float      minimum_distance      //    4 bytes, offset 20
    float      curve_radius          //    4 bytes, offset 24
    int        density_add_attempts  //    4 bytes, offset 28
    uchar      density_mode          //    1 bytes, offset 32
    char       _pad[7]               //    7 bytes, offset 33
    CurveMapping *curve_parameter_falloff //    8 bytes, offset 40
struct Brush // 2208 bytes, is ID [#86]
    ID         id                    //  208 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 208
    MTex       mtex                  //  216 bytes, offset 216
    MTex       mask_mtex             //  216 bytes, offset 432
    Brush      *toggle_brush         //    8 bytes, offset 648
    ImBuf      *icon_imbuf           //    8 bytes, offset 656
    PreviewImage *preview            //    8 bytes, offset 664
    ColorBand  *gradient             //    8 bytes, offset 672
    PaintCurve *paint_curve          //    8 bytes, offset 680
    char       icon_filepath[1024]   // 1024 bytes, offset 688
    float      normal_weight         //    4 bytes, offset 1712
    float      rake_factor           //    4 bytes, offset 1716
    short      blend                 //    2 bytes, offset 1720
    short      ob_mode               //    2 bytes, offset 1722
    float      weight                //    4 bytes, offset 1724
    int        size                  //    4 bytes, offset 1728
    int        flag                  //    4 bytes, offset 1732
    int        flag2                 //    4 bytes, offset 1736
    int        sampling_flag         //    4 bytes, offset 1740
    int        input_samples         //    4 bytes, offset 1744
    int        mask_pressure         //    4 bytes, offset 1748
    float      jitter                //    4 bytes, offset 1752
    int        jitter_absolute       //    4 bytes, offset 1756
    int        overlay_flags         //    4 bytes, offset 1760
    int        spacing               //    4 bytes, offset 1764
    int        smooth_stroke_radius  //    4 bytes, offset 1768
    float      smooth_stroke_factor  //    4 bytes, offset 1772
    float      rate                  //    4 bytes, offset 1776
    float      rgb[3]                //   12 bytes, offset 1780
    float      alpha                 //    4 bytes, offset 1792
    float      hardness              //    4 bytes, offset 1796
    float      flow                  //    4 bytes, offset 1800
    float      wet_mix               //    4 bytes, offset 1804
    float      wet_persistence       //    4 bytes, offset 1808
    float      density               //    4 bytes, offset 1812
    int        paint_flags           //    4 bytes, offset 1816
    float      tip_roundness         //    4 bytes, offset 1820
    float      tip_scale_x           //    4 bytes, offset 1824
    float      secondary_rgb[3]      //   12 bytes, offset 1828
    float      dash_ratio            //    4 bytes, offset 1840
    int        dash_samples          //    4 bytes, offset 1844
    int        sculpt_plane          //    4 bytes, offset 1848
    float      plane_offset          //    4 bytes, offset 1852
    int        gradient_spacing      //    4 bytes, offset 1856
    char       gradient_stroke_mode  //    1 bytes, offset 1860
    char       gradient_fill_mode    //    1 bytes, offset 1861
    char       has_unsaved_changes   //    1 bytes, offset 1862
    char       falloff_shape         //    1 bytes, offset 1863
    float      falloff_angle         //    4 bytes, offset 1864
    char       sculpt_tool           //    1 bytes, offset 1868
    char       vertexpaint_tool      //    1 bytes, offset 1869
    char       weightpaint_tool      //    1 bytes, offset 1870
    char       imagepaint_tool       //    1 bytes, offset 1871
    char       mask_tool             //    1 bytes, offset 1872
    char       gpencil_tool          //    1 bytes, offset 1873
    char       gpencil_vertex_tool   //    1 bytes, offset 1874
    char       gpencil_sculpt_tool   //    1 bytes, offset 1875
    char       gpencil_weight_tool   //    1 bytes, offset 1876
    char       curves_sculpt_tool    //    1 bytes, offset 1877
    char       _pad1[2]              //    2 bytes, offset 1878
    float      autosmooth_factor     //    4 bytes, offset 1880
    float      tilt_strength_factor  //    4 bytes, offset 1884
    float      topology_rake_factor  //    4 bytes, offset 1888
    float      crease_pinch_factor   //    4 bytes, offset 1892
    float      normal_radius_factor  //    4 bytes, offset 1896
    float      area_radius_factor    //    4 bytes, offset 1900
    float      wet_paint_radius_factor //    4 bytes, offset 1904
    float      plane_trim            //    4 bytes, offset 1908
    float      height                //    4 bytes, offset 1912
    float      plane_height          //    4 bytes, offset 1916
    float      plane_depth           //    4 bytes, offset 1920
    float      stabilize_normal      //    4 bytes, offset 1924
    float      stabilize_plane       //    4 bytes, offset 1928
    int        plane_inversion_mode  //    4 bytes, offset 1932
    float      texture_sample_bias   //    4 bytes, offset 1936
    int        curve_preset          //    4 bytes, offset 1940
    float      disconnected_distance_max //    4 bytes, offset 1944
    int        deform_target         //    4 bytes, offset 1948
    int        automasking_flags     //    4 bytes, offset 1952
    int        automasking_boundary_edges_propagation_steps //    4 bytes, offset 1956
    float      automasking_start_normal_limit //    4 bytes, offset 1960
    float      automasking_start_normal_falloff //    4 bytes, offset 1964
    float      automasking_view_normal_limit //    4 bytes, offset 1968
    float      automasking_view_normal_falloff //    4 bytes, offset 1972
    int        elastic_deform_type   //    4 bytes, offset 1976
    float      elastic_deform_volume_preservation //    4 bytes, offset 1980
    int        snake_hook_deform_type //    4 bytes, offset 1984
    int        pose_deform_type      //    4 bytes, offset 1988
    float      pose_offset           //    4 bytes, offset 1992
    int        pose_smooth_iterations //    4 bytes, offset 1996
    int        pose_ik_segments      //    4 bytes, offset 2000
    int        pose_origin_type      //    4 bytes, offset 2004
    int        boundary_deform_type  //    4 bytes, offset 2008
    int        boundary_falloff_type //    4 bytes, offset 2012
    float      boundary_offset       //    4 bytes, offset 2016
    int        cloth_deform_type     //    4 bytes, offset 2020
    int        cloth_force_falloff_type //    4 bytes, offset 2024
    int        cloth_simulation_area_type //    4 bytes, offset 2028
    float      cloth_mass            //    4 bytes, offset 2032
    float      cloth_damping         //    4 bytes, offset 2036
    float      cloth_sim_limit       //    4 bytes, offset 2040
    float      cloth_sim_falloff     //    4 bytes, offset 2044
    float      cloth_constraint_softbody_strength //    4 bytes, offset 2048
    int        smooth_deform_type    //    4 bytes, offset 2052
    float      surface_smooth_shape_preservation //    4 bytes, offset 2056
    float      surface_smooth_current_vertex //    4 bytes, offset 2060
    int        surface_smooth_iterations //    4 bytes, offset 2064
    float      multiplane_scrape_angle //    4 bytes, offset 2068
    int        smear_deform_type     //    4 bytes, offset 2072
    int        slide_deform_type     //    4 bytes, offset 2076
    int        texture_overlay_alpha //    4 bytes, offset 2080
    int        mask_overlay_alpha    //    4 bytes, offset 2084
    int        cursor_overlay_alpha  //    4 bytes, offset 2088
    float      unprojected_radius    //    4 bytes, offset 2092
    float      sharp_threshold       //    4 bytes, offset 2096
    int        blur_kernel_radius    //    4 bytes, offset 2100
    int        blur_mode             //    4 bytes, offset 2104
    float      fill_threshold        //    4 bytes, offset 2108
    float      add_col[4]            //   16 bytes, offset 2112
    float      sub_col[4]            //   16 bytes, offset 2128
    float      stencil_pos[2]        //    8 bytes, offset 2144
    float      stencil_dimension[2]  //    8 bytes, offset 2152
    float      mask_stencil_pos[2]   //    8 bytes, offset 2160
    float      mask_stencil_dimension[2] //    8 bytes, offset 2168
    BrushGpencilSettings *gpencil_settings //    8 bytes, offset 2176
    BrushCurvesSculptSettings *curves_sculpt_settings //    8 bytes, offset 2184
    int        automasking_cavity_blur_steps //    4 bytes, offset 2192
    float      automasking_cavity_factor //    4 bytes, offset 2196
    CurveMapping *automasking_cavity_curve //    8 bytes, offset 2200
struct tPaletteColorHSV // 28 bytes [#87]
    float      rgb[3]                //   12 bytes, offset 0
    float      value                 //    4 bytes, offset 12
    float      h                     //    4 bytes, offset 16
    float      s                     //    4 bytes, offset 20
    float      v                     //    4 bytes, offset 24
struct PaletteColor // 32 bytes [#88]
    PaletteColor *next               //    8 bytes, offset 0
    PaletteColor *prev               //    8 bytes, offset 8
    float      rgb[3]                //   12 bytes, offset 16
    float      value                 //    4 bytes, offset 28
struct Palette // 232 bytes, is ID [#89]
    ID         id                    //  208 bytes, offset 0
    ListBase   colors                //   16 bytes, offset 208
    int        active_color          //    4 bytes, offset 224
    char       _pad[4]               //    4 bytes, offset 228
struct PaintCurvePoint // 76 bytes [#90]
    BezTriple  bez                   //   72 bytes, offset 0
    float      pressure              //    4 bytes, offset 72
struct PaintCurve // 224 bytes, is ID [#91]
    ID         id                    //  208 bytes, offset 0
    PaintCurvePoint *points          //    8 bytes, offset 208
    int        tot_points            //    4 bytes, offset 216
    int        add_index             //    4 bytes, offset 220
struct CacheObjectPath // 4112 bytes [#92]
    CacheObjectPath *next            //    8 bytes, offset 0
    CacheObjectPath *prev            //    8 bytes, offset 8
    char       path[4096]            // 4096 bytes, offset 16
struct CacheFileLayer // 1048 bytes [#93]
    CacheFileLayer *next             //    8 bytes, offset 0
    CacheFileLayer *prev             //    8 bytes, offset 8
    char       filepath[1024]        // 1024 bytes, offset 16
    int        flag                  //    4 bytes, offset 1040
    int        _pad                  //    4 bytes, offset 1044
struct CacheFile // 2416 bytes, is ID [#94]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    ListBase   object_paths          //   16 bytes, offset 216
    ListBase   layers                //   16 bytes, offset 232
    char       filepath[1024]        // 1024 bytes, offset 248
    char       is_sequence           //    1 bytes, offset 1272
    char       forward_axis          //    1 bytes, offset 1273
    char       up_axis               //    1 bytes, offset 1274
    char       override_frame        //    1 bytes, offset 1275
    float      scale                 //    4 bytes, offset 1276
    float      frame                 //    4 bytes, offset 1280
    float      frame_offset          //    4 bytes, offset 1284
    char       _pad[4]               //    4 bytes, offset 1288
    short      flag                  //    2 bytes, offset 1292
    char       type                  //    1 bytes, offset 1294
    char       use_render_procedural //    1 bytes, offset 1295
    char       _pad1[3]              //    3 bytes, offset 1296
    char       use_prefetch          //    1 bytes, offset 1299
    int        prefetch_cache_size   //    4 bytes, offset 1300
    int        active_layer          //    4 bytes, offset 1304
    char       _pad2[3]              //    3 bytes, offset 1308
    char       velocity_unit         //    1 bytes, offset 1311
    char       velocity_name[64]     //   64 bytes, offset 1312
    CacheArchiveHandle *handle       //    8 bytes, offset 1376
    char       handle_filepath[1024] // 1024 bytes, offset 1384
    GSet       *handle_readers       //    8 bytes, offset 2408
struct CameraStereoSettings // 24 bytes [#95]
    float      interocular_distance  //    4 bytes, offset 0
    float      convergence_distance  //    4 bytes, offset 4
    short      convergence_mode      //    2 bytes, offset 8
    short      pivot                 //    2 bytes, offset 10
    short      flag                  //    2 bytes, offset 12
    char       _pad[2]               //    2 bytes, offset 14
    float      pole_merge_angle_from //    4 bytes, offset 16
    float      pole_merge_angle_to   //    4 bytes, offset 20
struct CameraBGImage // 104 bytes [#96]
    CameraBGImage *next              //    8 bytes, offset 0
    CameraBGImage *prev              //    8 bytes, offset 8
    Image      *ima                  //    8 bytes, offset 16
    ImageUser  iuser                 //   40 bytes, offset 24
    MovieClip  *clip                 //    8 bytes, offset 64
    MovieClipUser cuser              //    8 bytes, offset 72
    float      offset[2]             //    8 bytes, offset 80
    float      scale                 //    4 bytes, offset 88
    float      rotation              //    4 bytes, offset 92
    float      alpha                 //    4 bytes, offset 96
    short      flag                  //    2 bytes, offset 100
    short      source                //    2 bytes, offset 102
struct CameraDOFSettings // 96 bytes [#97]
    Object     *focus_object         //    8 bytes, offset 0
    char       focus_subtarget[64]   //   64 bytes, offset 8
    float      focus_distance        //    4 bytes, offset 72
    float      aperture_fstop        //    4 bytes, offset 76
    float      aperture_rotation     //    4 bytes, offset 80
    float      aperture_ratio        //    4 bytes, offset 84
    int        aperture_blades       //    4 bytes, offset 88
    short      flag                  //    2 bytes, offset 92
    char       _pad[2]               //    2 bytes, offset 94
struct Camera_Runtime // 216 bytes [#98]
    float      drw_corners[2][4][2]  //   64 bytes, offset 0
    float      drw_tria[2][2]        //   16 bytes, offset 64
    float      drw_depth[2]          //    8 bytes, offset 80
    float      drw_focusmat[4][4]    //   64 bytes, offset 88
    float      drw_normalmat[4][4]   //   64 bytes, offset 152
struct Camera // 736 bytes, is ID [#99]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    char       type                  //    1 bytes, offset 216
    char       dtx                   //    1 bytes, offset 217
    short      flag                  //    2 bytes, offset 218
    float      passepartalpha        //    4 bytes, offset 220
    float      clipsta               //    4 bytes, offset 224
    float      clipend               //    4 bytes, offset 228
    float      lens                  //    4 bytes, offset 232
    float      ortho_scale           //    4 bytes, offset 236
    float      drawsize              //    4 bytes, offset 240
    float      sensor_x              //    4 bytes, offset 244
    float      sensor_y              //    4 bytes, offset 248
    float      shiftx                //    4 bytes, offset 252
    float      shifty                //    4 bytes, offset 256
    float      YF_dofdist            //    4 bytes, offset 260
    char       sensor_fit            //    1 bytes, offset 264
    char       panorama_type         //    1 bytes, offset 265
    char       _pad[2]               //    2 bytes, offset 266
    float      fisheye_fov           //    4 bytes, offset 268
    float      fisheye_lens          //    4 bytes, offset 272
    float      latitude_min          //    4 bytes, offset 276
    float      latitude_max          //    4 bytes, offset 280
    float      longitude_min         //    4 bytes, offset 284
    float      longitude_max         //    4 bytes, offset 288
    float      fisheye_polynomial_k0 //    4 bytes, offset 292
    float      fisheye_polynomial_k1 //    4 bytes, offset 296
    float      fisheye_polynomial_k2 //    4 bytes, offset 300
    float      fisheye_polynomial_k3 //    4 bytes, offset 304
    float      fisheye_polynomial_k4 //    4 bytes, offset 308
    float      central_cylindrical_range_u_min //    4 bytes, offset 312
    float      central_cylindrical_range_u_max //    4 bytes, offset 316
    float      central_cylindrical_range_v_min //    4 bytes, offset 320
    float      central_cylindrical_range_v_max //    4 bytes, offset 324
    float      central_cylindrical_radius //    4 bytes, offset 328
    float      _pad2                 //    4 bytes, offset 332
    Ipo        *ipo                  //    8 bytes, offset 336
    Object     *dof_ob               //    8 bytes, offset 344
    GPUDOFSettings gpu_dof           //   32 bytes, offset 352
    CameraDOFSettings dof            //   96 bytes, offset 384
    ListBase   bg_images             //   16 bytes, offset 480
    CameraStereoSettings stereo      //   24 bytes, offset 496
    Camera_Runtime runtime           //  216 bytes, offset 520
struct ClothSimSettings // 272 bytes [#100]
    LinkNode   *cache                //    8 bytes, offset 0
    float      mingoal               //    4 bytes, offset 8
    float      Cdis                  //    4 bytes, offset 12
    float      Cvi                   //    4 bytes, offset 16
    float      gravity[3]            //   12 bytes, offset 20
    float      dt                    //    4 bytes, offset 32
    float      mass                  //    4 bytes, offset 36
    float      structural            //    4 bytes, offset 40
    float      shear                 //    4 bytes, offset 44
    float      bending               //    4 bytes, offset 48
    float      max_bend              //    4 bytes, offset 52
    float      max_struct            //    4 bytes, offset 56
    float      max_shear             //    4 bytes, offset 60
    float      max_sewing            //    4 bytes, offset 64
    float      avg_spring_len        //    4 bytes, offset 68
    float      timescale             //    4 bytes, offset 72
    float      time_scale            //    4 bytes, offset 76
    float      maxgoal               //    4 bytes, offset 80
    float      eff_force_scale       //    4 bytes, offset 84
    float      eff_wind_scale        //    4 bytes, offset 88
    float      sim_time_old          //    4 bytes, offset 92
    float      defgoal               //    4 bytes, offset 96
    float      goalspring            //    4 bytes, offset 100
    float      goalfrict             //    4 bytes, offset 104
    float      velocity_smooth       //    4 bytes, offset 108
    float      density_target        //    4 bytes, offset 112
    float      density_strength      //    4 bytes, offset 116
    float      collider_friction     //    4 bytes, offset 120
    float      vel_damping           //    4 bytes, offset 124
    float      shrink_min            //    4 bytes, offset 128
    float      shrink_max            //    4 bytes, offset 132
    float      uniform_pressure_force //    4 bytes, offset 136
    float      target_volume         //    4 bytes, offset 140
    float      pressure_factor       //    4 bytes, offset 144
    float      fluid_density         //    4 bytes, offset 148
    short      vgroup_pressure       //    2 bytes, offset 152
    char       _pad7[6]              //    6 bytes, offset 154
    float      bending_damping       //    4 bytes, offset 160
    float      voxel_cell_size       //    4 bytes, offset 164
    int        stepsPerFrame         //    4 bytes, offset 168
    int        flags                 //    4 bytes, offset 172
    int        preroll               //    4 bytes, offset 176
    int        maxspringlen          //    4 bytes, offset 180
    short      solver_type           //    2 bytes, offset 184
    short      vgroup_bend           //    2 bytes, offset 186
    short      vgroup_mass           //    2 bytes, offset 188
    short      vgroup_struct         //    2 bytes, offset 190
    short      vgroup_shrink         //    2 bytes, offset 192
    short      shapekey_rest         //    2 bytes, offset 194
    short      presets               //    2 bytes, offset 196
    short      reset                 //    2 bytes, offset 198
    EffectorWeights *effector_weights //    8 bytes, offset 200
    short      bending_model         //    2 bytes, offset 208
    short      vgroup_shear          //    2 bytes, offset 210
    float      tension               //    4 bytes, offset 212
    float      compression           //    4 bytes, offset 216
    float      max_tension           //    4 bytes, offset 220
    float      max_compression       //    4 bytes, offset 224
    float      tension_damp          //    4 bytes, offset 228
    float      compression_damp      //    4 bytes, offset 232
    float      shear_damp            //    4 bytes, offset 236
    float      internal_spring_max_length //    4 bytes, offset 240
    float      internal_spring_max_diversion //    4 bytes, offset 244
    short      vgroup_intern         //    2 bytes, offset 248
    char       _pad1[2]              //    2 bytes, offset 250
    float      internal_tension      //    4 bytes, offset 252
    float      internal_compression  //    4 bytes, offset 256
    float      max_internal_tension  //    4 bytes, offset 260
    float      max_internal_compression //    4 bytes, offset 264
    char       _pad0[4]              //    4 bytes, offset 268
struct ClothCollSettings // 72 bytes [#101]
    LinkNode   *collision_list       //    8 bytes, offset 0
    float      epsilon               //    4 bytes, offset 8
    float      self_friction         //    4 bytes, offset 12
    float      friction              //    4 bytes, offset 16
    float      damping               //    4 bytes, offset 20
    float      selfepsilon           //    4 bytes, offset 24
    float      repel_force           //    4 bytes, offset 28
    float      distance_repel        //    4 bytes, offset 32
    int        flags                 //    4 bytes, offset 36
    short      self_loop_count       //    2 bytes, offset 40
    short      loop_count            //    2 bytes, offset 42
    char       _pad[4]               //    4 bytes, offset 44
    Collection *group                //    8 bytes, offset 48
    short      vgroup_selfcol        //    2 bytes, offset 56
    short      vgroup_objcol         //    2 bytes, offset 58
    char       _pad2[4]              //    4 bytes, offset 60
    float      clamp                 //    4 bytes, offset 64
    float      self_clamp            //    4 bytes, offset 68
struct CollectionLightLinking // 4 bytes [#102]
    uchar      link_state            //    1 bytes, offset 0
    uchar      _pad[3]               //    3 bytes, offset 1
struct CollectionObject // 32 bytes [#103]
    CollectionObject *next           //    8 bytes, offset 0
    CollectionObject *prev           //    8 bytes, offset 8
    Object     *ob                   //    8 bytes, offset 16
    CollectionLightLinking light_linking //    4 bytes, offset 24
    int        _pad                  //    4 bytes, offset 28
struct CollectionChild // 32 bytes [#104]
    CollectionChild *next            //    8 bytes, offset 0
    CollectionChild *prev            //    8 bytes, offset 8
    Collection *collection           //    8 bytes, offset 16
    CollectionLightLinking light_linking //    4 bytes, offset 24
    int        _pad                  //    4 bytes, offset 28
struct CollectionExport // 160 bytes [#105]
    CollectionExport *next           //    8 bytes, offset 0
    CollectionExport *prev           //    8 bytes, offset 8
    char       fh_idname[64]         //   64 bytes, offset 16
    char       name[64]              //   64 bytes, offset 80
    IDProperty *export_properties    //    8 bytes, offset 144
    int        flag                  //    4 bytes, offset 152
    int        _pad0                 //    4 bytes, offset 156
struct Collection_Runtime // 64 bytes [#106]
    ListBase   object_cache          //   16 bytes, offset 0
    ListBase   object_cache_instanced //   16 bytes, offset 16
    ListBase   parents               //   16 bytes, offset 32
    GHash      *gobject_hash         //    8 bytes, offset 48
    uchar      tag                   //    1 bytes, offset 56
    char       _pad0[7]              //    7 bytes, offset 57
struct Collection // 376 bytes, is ID [#107]
    ID         id                    //  208 bytes, offset 0
    ID         *owner_id             //    8 bytes, offset 208
    ListBase   gobject               //   16 bytes, offset 216
    ListBase   children              //   16 bytes, offset 232
    char       _pad0[4]              //    4 bytes, offset 248
    int        active_exporter_index //    4 bytes, offset 252
    ListBase   exporters             //   16 bytes, offset 256
    PreviewImage *preview            //    8 bytes, offset 272
    int        layer                 //    4 bytes, offset 280
    float      dupli_ofs[3]          //   12 bytes, offset 284
    uchar      flag                  //    1 bytes, offset 296
    int8_t     color_tag             //    1 bytes, offset 297
    char       _pad1[2]              //    2 bytes, offset 298
    uchar      lineart_usage         //    1 bytes, offset 300
    uchar      lineart_flags         //    1 bytes, offset 301
    uchar      lineart_intersection_mask //    1 bytes, offset 302
    uchar      lineart_intersection_priority //    1 bytes, offset 303
    ViewLayer  *view_layer           //    8 bytes, offset 304
    Collection_Runtime runtime       //   64 bytes, offset 312
struct CurveMapPoint // 12 bytes [#108]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    short      flag                  //    2 bytes, offset 8
    short      shorty                //    2 bytes, offset 10
struct CurveMap // 80 bytes [#109]
    short      totpoint              //    2 bytes, offset 0
    short      flag                  //    2 bytes, offset 2
    float      range                 //    4 bytes, offset 4
    float      mintable              //    4 bytes, offset 8
    float      maxtable              //    4 bytes, offset 12
    float      ext_in[2]             //    8 bytes, offset 16
    float      ext_out[2]            //    8 bytes, offset 24
    CurveMapPoint *curve             //    8 bytes, offset 32
    CurveMapPoint *table             //    8 bytes, offset 40
    CurveMapPoint *premultable       //    8 bytes, offset 48
    float      premul_ext_in[2]      //    8 bytes, offset 56
    float      premul_ext_out[2]     //    8 bytes, offset 64
    short      default_handle_type   //    2 bytes, offset 72
    char       _pad[6]               //    6 bytes, offset 74
struct CurveMapping // 424 bytes [#110]
    int        flag                  //    4 bytes, offset 0
    int        cur                   //    4 bytes, offset 4
    int        preset                //    4 bytes, offset 8
    int        changed_timestamp     //    4 bytes, offset 12
    rctf       curr                  //   16 bytes, offset 16
    rctf       clipr                 //   16 bytes, offset 32
    CurveMap   cm[4]                 //  320 bytes, offset 48
    float      black[3]              //   12 bytes, offset 368
    float      white[3]              //   12 bytes, offset 380
    float      bwmul[3]              //   12 bytes, offset 392
    float      sample[3]             //   12 bytes, offset 404
    short      tone                  //    2 bytes, offset 416
    char       _pad[6]               //    6 bytes, offset 418
struct Histogram // 5160 bytes [#111]
    int        channels              //    4 bytes, offset 0
    int        x_resolution          //    4 bytes, offset 4
    float      data_luma[256]        // 1024 bytes, offset 8
    float      data_r[256]           // 1024 bytes, offset 1032
    float      data_g[256]           // 1024 bytes, offset 2056
    float      data_b[256]           // 1024 bytes, offset 3080
    float      data_a[256]           // 1024 bytes, offset 4104
    float      xmax                  //    4 bytes, offset 5128
    float      ymax                  //    4 bytes, offset 5132
    short      mode                  //    2 bytes, offset 5136
    short      flag                  //    2 bytes, offset 5138
    int        height                //    4 bytes, offset 5140
    float      co[2][2]              //   16 bytes, offset 5144
struct Scopes // 5272 bytes [#112]
    int        ok                    //    4 bytes, offset 0
    int        sample_full           //    4 bytes, offset 4
    int        sample_lines          //    4 bytes, offset 8
    int        wavefrm_mode          //    4 bytes, offset 12
    int        vecscope_mode         //    4 bytes, offset 16
    int        wavefrm_height        //    4 bytes, offset 20
    int        vecscope_height       //    4 bytes, offset 24
    int        waveform_tot          //    4 bytes, offset 28
    float      accuracy              //    4 bytes, offset 32
    float      wavefrm_alpha         //    4 bytes, offset 36
    float      wavefrm_yfac          //    4 bytes, offset 40
    float      vecscope_alpha        //    4 bytes, offset 44
    float      minmax[3][2]          //   24 bytes, offset 48
    Histogram  hist                  // 5160 bytes, offset 72
    float      *waveform_1           //    8 bytes, offset 5232
    float      *waveform_2           //    8 bytes, offset 5240
    float      *waveform_3           //    8 bytes, offset 5248
    float      *vecscope             //    8 bytes, offset 5256
    float      *vecscope_rgb         //    8 bytes, offset 5264
struct ColorManagedViewSettings // 168 bytes [#113]
    int        flag                  //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
    char       look[64]              //   64 bytes, offset 8
    char       view_transform[64]    //   64 bytes, offset 72
    float      exposure              //    4 bytes, offset 136
    float      gamma                 //    4 bytes, offset 140
    float      temperature           //    4 bytes, offset 144
    float      tint                  //    4 bytes, offset 148
    CurveMapping *curve_mapping      //    8 bytes, offset 152
    void       *_pad2                //    8 bytes, offset 160
struct ColorManagedDisplaySettings // 64 bytes [#114]
    char       display_device[64]    //   64 bytes, offset 0
struct ColorManagedColorspaceSettings // 64 bytes [#115]
    char       name[64]              //   64 bytes, offset 0
struct bConstraintChannel // 56 bytes [#116]
    bConstraintChannel *next         //    8 bytes, offset 0
    bConstraintChannel *prev         //    8 bytes, offset 8
    Ipo        *ipo                  //    8 bytes, offset 16
    short      flag                  //    2 bytes, offset 24
    char       name[30]              //   30 bytes, offset 26
struct bConstraint // 192 bytes [#117]
    bConstraint *next                //    8 bytes, offset 0
    bConstraint *prev                //    8 bytes, offset 8
    void       *data                 //    8 bytes, offset 16
    short      type                  //    2 bytes, offset 24
    short      flag                  //    2 bytes, offset 26
    char       ownspace              //    1 bytes, offset 28
    char       tarspace              //    1 bytes, offset 29
    short      ui_expand_flag        //    2 bytes, offset 30
    Object     *space_object         //    8 bytes, offset 32
    char       space_subtarget[64]   //   64 bytes, offset 40
    char       name[64]              //   64 bytes, offset 104
    float      enforce               //    4 bytes, offset 168
    float      headtail              //    4 bytes, offset 172
    Ipo        *ipo                  //    8 bytes, offset 176
    float      lin_error             //    4 bytes, offset 184
    float      rot_error             //    4 bytes, offset 188
struct bConstraintTarget // 168 bytes [#118]
    bConstraintTarget *next          //    8 bytes, offset 0
    bConstraintTarget *prev          //    8 bytes, offset 8
    Object     *tar                  //    8 bytes, offset 16
    char       subtarget[64]         //   64 bytes, offset 24
    float      matrix[4][4]          //   64 bytes, offset 88
    short      space                 //    2 bytes, offset 152
    short      flag                  //    2 bytes, offset 154
    short      type                  //    2 bytes, offset 156
    short      rotOrder              //    2 bytes, offset 158
    float      weight                //    4 bytes, offset 160
    char       _pad[4]               //    4 bytes, offset 164
struct bPythonConstraint // 112 bytes [#119]
    Text       *text                 //    8 bytes, offset 0
    IDProperty *prop                 //    8 bytes, offset 8
    int        flag                  //    4 bytes, offset 16
    int        tarnum                //    4 bytes, offset 20
    ListBase   targets               //   16 bytes, offset 24
    Object     *tar                  //    8 bytes, offset 40
    char       subtarget[64]         //   64 bytes, offset 48
struct bKinematicConstraint // 184 bytes [#120]
    Object     *tar                  //    8 bytes, offset 0
    short      iterations            //    2 bytes, offset 8
    short      flag                  //    2 bytes, offset 10
    short      rootbone              //    2 bytes, offset 12
    short      max_rootbone          //    2 bytes, offset 14
    char       subtarget[64]         //   64 bytes, offset 16
    Object     *poletar              //    8 bytes, offset 80
    char       polesubtarget[64]     //   64 bytes, offset 88
    float      poleangle             //    4 bytes, offset 152
    float      weight                //    4 bytes, offset 156
    float      orientweight          //    4 bytes, offset 160
    float      grabtarget[3]         //   12 bytes, offset 164
    short      type                  //    2 bytes, offset 176
    short      mode                  //    2 bytes, offset 178
    float      dist                  //    4 bytes, offset 180
struct bSplineIKConstraint // 48 bytes [#121]
    Object     *tar                  //    8 bytes, offset 0
    float      *points               //    8 bytes, offset 8
    short      numpoints             //    2 bytes, offset 16
    short      chainlen              //    2 bytes, offset 18
    short      flag                  //    2 bytes, offset 20
    short      xzScaleMode           //    2 bytes, offset 22
    short      yScaleMode            //    2 bytes, offset 24
    short      _pad[3]               //    6 bytes, offset 26
    float      bulge                 //    4 bytes, offset 32
    float      bulge_min             //    4 bytes, offset 36
    float      bulge_max             //    4 bytes, offset 40
    float      bulge_smooth          //    4 bytes, offset 44
struct bArmatureConstraint // 24 bytes [#122]
    int        flag                  //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
    ListBase   targets               //   16 bytes, offset 8
struct bTrackToConstraint // 88 bytes [#123]
    Object     *tar                  //    8 bytes, offset 0
    int        reserved1             //    4 bytes, offset 8
    int        reserved2             //    4 bytes, offset 12
    int        flags                 //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
    char       subtarget[64]         //   64 bytes, offset 24
struct bRotateLikeConstraint // 80 bytes [#124]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    char       euler_order           //    1 bytes, offset 12
    char       mix_mode              //    1 bytes, offset 13
    char       _pad[2]               //    2 bytes, offset 14
    char       subtarget[64]         //   64 bytes, offset 16
struct bLocateLikeConstraint // 80 bytes [#125]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    int        reserved1             //    4 bytes, offset 12
    char       subtarget[64]         //   64 bytes, offset 16
struct bSizeLikeConstraint // 80 bytes [#126]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    float      power                 //    4 bytes, offset 12
    char       subtarget[64]         //   64 bytes, offset 16
struct bSameVolumeConstraint // 8 bytes [#127]
    char       flag                  //    1 bytes, offset 0
    char       mode                  //    1 bytes, offset 1
    char       _pad[2]               //    2 bytes, offset 2
    float      volume                //    4 bytes, offset 4
struct bTransLikeConstraint // 80 bytes [#128]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    char       mix_mode              //    1 bytes, offset 12
    char       _pad[3]               //    3 bytes, offset 13
    char       subtarget[64]         //   64 bytes, offset 16
struct bMinMaxConstraint // 88 bytes [#129]
    Object     *tar                  //    8 bytes, offset 0
    int        minmaxflag            //    4 bytes, offset 8
    float      offset                //    4 bytes, offset 12
    int        flag                  //    4 bytes, offset 16
    char       subtarget[64]         //   64 bytes, offset 20
    int        _pad                  //    4 bytes, offset 84
struct bActionConstraint // 184 bytes [#130]
    Object     *tar                  //    8 bytes, offset 0
    short      type                  //    2 bytes, offset 8
    short      local                 //    2 bytes, offset 10
    int        start                 //    4 bytes, offset 12
    int        end                   //    4 bytes, offset 16
    float      min                   //    4 bytes, offset 20
    float      max                   //    4 bytes, offset 24
    int        flag                  //    4 bytes, offset 28
    char       mix_mode              //    1 bytes, offset 32
    char       _pad[3]               //    3 bytes, offset 33
    float      eval_time             //    4 bytes, offset 36
    bAction    *act                  //    8 bytes, offset 40
    int        action_slot_handle    //    4 bytes, offset 48
    char       action_slot_name[66]  //   66 bytes, offset 52
    char       _pad1[2]              //    2 bytes, offset 118
    char       subtarget[64]         //   64 bytes, offset 120
struct bLockTrackConstraint // 80 bytes [#131]
    Object     *tar                  //    8 bytes, offset 0
    int        trackflag             //    4 bytes, offset 8
    int        lockflag              //    4 bytes, offset 12
    char       subtarget[64]         //   64 bytes, offset 16
struct bDampTrackConstraint // 80 bytes [#132]
    Object     *tar                  //    8 bytes, offset 0
    int        trackflag             //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
    char       subtarget[64]         //   64 bytes, offset 16
struct bFollowPathConstraint // 24 bytes [#133]
    Object     *tar                  //    8 bytes, offset 0
    float      offset                //    4 bytes, offset 8
    float      offset_fac            //    4 bytes, offset 12
    int        followflag            //    4 bytes, offset 16
    short      trackflag             //    2 bytes, offset 20
    short      upflag                //    2 bytes, offset 22
struct bStretchToConstraint // 104 bytes [#134]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    int        volmode               //    4 bytes, offset 12
    int        plane                 //    4 bytes, offset 16
    float      orglength             //    4 bytes, offset 20
    float      bulge                 //    4 bytes, offset 24
    float      bulge_min             //    4 bytes, offset 28
    float      bulge_max             //    4 bytes, offset 32
    float      bulge_smooth          //    4 bytes, offset 36
    char       subtarget[64]         //   64 bytes, offset 40
struct bRigidBodyJointConstraint // 104 bytes [#135]
    Object     *tar                  //    8 bytes, offset 0
    Object     *child                //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    float      pivX                  //    4 bytes, offset 20
    float      pivY                  //    4 bytes, offset 24
    float      pivZ                  //    4 bytes, offset 28
    float      axX                   //    4 bytes, offset 32
    float      axY                   //    4 bytes, offset 36
    float      axZ                   //    4 bytes, offset 40
    float      minLimit[6]           //   24 bytes, offset 44
    float      maxLimit[6]           //   24 bytes, offset 68
    float      extraFz               //    4 bytes, offset 92
    short      flag                  //    2 bytes, offset 96
    char       _pad[6]               //    6 bytes, offset 98
struct bClampToConstraint // 16 bytes [#136]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    int        flag2                 //    4 bytes, offset 12
struct bChildOfConstraint // 144 bytes [#137]
    Object     *tar                  //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
    float      invmat[4][4]          //   64 bytes, offset 16
    char       subtarget[64]         //   64 bytes, offset 80
struct bTransformConstraint // 232 bytes [#138]
    Object     *tar                  //    8 bytes, offset 0
    char       subtarget[64]         //   64 bytes, offset 8
    short      from                  //    2 bytes, offset 72
    short      to                    //    2 bytes, offset 74
    char       map[3]                //    3 bytes, offset 76
    char       expo                  //    1 bytes, offset 79
    char       from_rotation_mode    //    1 bytes, offset 80
    char       to_euler_order        //    1 bytes, offset 81
    char       mix_mode_loc          //    1 bytes, offset 82
    char       mix_mode_rot          //    1 bytes, offset 83
    char       mix_mode_scale        //    1 bytes, offset 84
    char       _pad[3]               //    3 bytes, offset 85
    float      from_min[3]           //   12 bytes, offset 88
    float      from_max[3]           //   12 bytes, offset 100
    float      to_min[3]             //   12 bytes, offset 112
    float      to_max[3]             //   12 bytes, offset 124
    float      from_min_rot[3]       //   12 bytes, offset 136
    float      from_max_rot[3]       //   12 bytes, offset 148
    float      to_min_rot[3]         //   12 bytes, offset 160
    float      to_max_rot[3]         //   12 bytes, offset 172
    float      from_min_scale[3]     //   12 bytes, offset 184
    float      from_max_scale[3]     //   12 bytes, offset 196
    float      to_min_scale[3]       //   12 bytes, offset 208
    float      to_max_scale[3]       //   12 bytes, offset 220
struct bPivotConstraint // 88 bytes [#139]
    Object     *tar                  //    8 bytes, offset 0
    char       subtarget[64]         //   64 bytes, offset 8
    float      offset[3]             //   12 bytes, offset 72
    short      rotAxis               //    2 bytes, offset 84
    short      flag                  //    2 bytes, offset 86
struct bLocLimitConstraint // 28 bytes [#140]
    float      xmin                  //    4 bytes, offset 0
    float      xmax                  //    4 bytes, offset 4
    float      ymin                  //    4 bytes, offset 8
    float      ymax                  //    4 bytes, offset 12
    float      zmin                  //    4 bytes, offset 16
    float      zmax                  //    4 bytes, offset 20
    short      flag                  //    2 bytes, offset 24
    short      flag2                 //    2 bytes, offset 26
struct bRotLimitConstraint // 32 bytes [#141]
    float      xmin                  //    4 bytes, offset 0
    float      xmax                  //    4 bytes, offset 4
    float      ymin                  //    4 bytes, offset 8
    float      ymax                  //    4 bytes, offset 12
    float      zmin                  //    4 bytes, offset 16
    float      zmax                  //    4 bytes, offset 20
    short      flag                  //    2 bytes, offset 24
    short      flag2                 //    2 bytes, offset 26
    char       euler_order           //    1 bytes, offset 28
    char       _pad[3]               //    3 bytes, offset 29
struct bSizeLimitConstraint // 28 bytes [#142]
    float      xmin                  //    4 bytes, offset 0
    float      xmax                  //    4 bytes, offset 4
    float      ymin                  //    4 bytes, offset 8
    float      ymax                  //    4 bytes, offset 12
    float      zmin                  //    4 bytes, offset 16
    float      zmax                  //    4 bytes, offset 20
    short      flag                  //    2 bytes, offset 24
    short      flag2                 //    2 bytes, offset 26
struct bDistLimitConstraint // 88 bytes [#143]
    Object     *tar                  //    8 bytes, offset 0
    char       subtarget[64]         //   64 bytes, offset 8
    float      dist                  //    4 bytes, offset 72
    float      soft                  //    4 bytes, offset 76
    short      flag                  //    2 bytes, offset 80
    short      mode                  //    2 bytes, offset 82
    char       _pad[4]               //    4 bytes, offset 84
struct bShrinkwrapConstraint // 24 bytes [#144]
    Object     *target               //    8 bytes, offset 0
    float      dist                  //    4 bytes, offset 8
    short      shrinkType            //    2 bytes, offset 12
    char       projAxis              //    1 bytes, offset 14
    char       projAxisSpace         //    1 bytes, offset 15
    float      projLimit             //    4 bytes, offset 16
    char       shrinkMode            //    1 bytes, offset 20
    char       flag                  //    1 bytes, offset 21
    char       trackAxis             //    1 bytes, offset 22
    char       _pad                  //    1 bytes, offset 23
struct bFollowTrackConstraint // 160 bytes [#145]
    MovieClip  *clip                 //    8 bytes, offset 0
    char       track[64]             //   64 bytes, offset 8
    int        flag                  //    4 bytes, offset 72
    int        frame_method          //    4 bytes, offset 76
    char       object[64]            //   64 bytes, offset 80
    Object     *camera               //    8 bytes, offset 144
    Object     *depth_ob             //    8 bytes, offset 152
struct bCameraSolverConstraint // 16 bytes [#146]
    MovieClip  *clip                 //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
struct bObjectSolverConstraint // 152 bytes [#147]
    MovieClip  *clip                 //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
    char       object[64]            //   64 bytes, offset 16
    float      invmat[4][4]          //   64 bytes, offset 80
    Object     *camera               //    8 bytes, offset 144
struct bTransformCacheConstraint // 2064 bytes [#148]
    CacheFile  *cache_file           //    8 bytes, offset 0
    char       object_path[1024]     // 1024 bytes, offset 8
    CacheReader *reader              //    8 bytes, offset 1032
    char       reader_object_path[1024] // 1024 bytes, offset 1040
struct BezTriple // 72 bytes [#149]
    float      vec[3][3]             //   36 bytes, offset 0
    float      alfa                  //    4 bytes, offset 36
    float      weight                //    4 bytes, offset 40
    float      radius                //    4 bytes, offset 44
    char       ipo                   //    1 bytes, offset 48
    uchar      h1                    //    1 bytes, offset 49
    uchar      h2                    //    1 bytes, offset 50
    uchar      f1                    //    1 bytes, offset 51
    uchar      f2                    //    1 bytes, offset 52
    uchar      f3                    //    1 bytes, offset 53
    char       hide                  //    1 bytes, offset 54
    char       easing                //    1 bytes, offset 55
    float      back                  //    4 bytes, offset 56
    float      amplitude             //    4 bytes, offset 60
    float      period                //    4 bytes, offset 64
    char       auto_handle_type      //    1 bytes, offset 68
    char       _pad[3]               //    3 bytes, offset 69
struct BPoint // 36 bytes [#150]
    float      vec[4]                //   16 bytes, offset 0
    float      alfa                  //    4 bytes, offset 16
    float      weight                //    4 bytes, offset 20
    uchar      f1                    //    1 bytes, offset 24
    char       _pad1[1]              //    1 bytes, offset 25
    short      hide                  //    2 bytes, offset 26
    float      radius                //    4 bytes, offset 28
    char       _pad[4]               //    4 bytes, offset 32
struct Nurb // 88 bytes [#151]
    Nurb       *next                 //    8 bytes, offset 0
    Nurb       *prev                 //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      mat_nr                //    2 bytes, offset 18
    short      hide                  //    2 bytes, offset 20
    short      flag                  //    2 bytes, offset 22
    int        pntsu                 //    4 bytes, offset 24
    int        pntsv                 //    4 bytes, offset 28
    char       _pad[4]               //    4 bytes, offset 32
    short      resolu                //    2 bytes, offset 36
    short      resolv                //    2 bytes, offset 38
    short      orderu                //    2 bytes, offset 40
    short      orderv                //    2 bytes, offset 42
    short      flagu                 //    2 bytes, offset 44
    short      flagv                 //    2 bytes, offset 46
    float      *knotsu               //    8 bytes, offset 48
    float      *knotsv               //    8 bytes, offset 56
    BPoint     *bp                   //    8 bytes, offset 64
    BezTriple  *bezt                 //    8 bytes, offset 72
    short      tilt_interp           //    2 bytes, offset 80
    short      radius_interp         //    2 bytes, offset 82
    int        charidx               //    4 bytes, offset 84
struct CharInfo // 8 bytes [#152]
    float      kern                  //    4 bytes, offset 0
    short      mat_nr                //    2 bytes, offset 4
    char       flag                  //    1 bytes, offset 6
    char       _pad[1]               //    1 bytes, offset 7
struct TextBox // 16 bytes [#153]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    float      w                     //    4 bytes, offset 8
    float      h                     //    4 bytes, offset 12
struct Curve // 640 bytes, is ID [#154]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    ListBase   nurb                  //   16 bytes, offset 216
    EditNurb   *editnurb             //    8 bytes, offset 232
    Object     *bevobj               //    8 bytes, offset 240
    Object     *taperobj             //    8 bytes, offset 248
    Object     *textoncurve          //    8 bytes, offset 256
    Ipo        *ipo                  //    8 bytes, offset 264
    Key        *key                  //    8 bytes, offset 272
    Material   **mat                 //    8 bytes, offset 280
    CurveProfile *bevel_profile      //    8 bytes, offset 288
    float      loc[3]                //   12 bytes, offset 296
    float      size[3]               //   12 bytes, offset 308
    short      type                  //    2 bytes, offset 320
    char       texflag               //    1 bytes, offset 322
    char       _pad0[7]              //    7 bytes, offset 323
    short      twist_mode            //    2 bytes, offset 330
    float      twist_smooth          //    4 bytes, offset 332
    float      smallcaps_scale       //    4 bytes, offset 336
    int        pathlen               //    4 bytes, offset 340
    short      bevresol              //    2 bytes, offset 344
    short      totcol                //    2 bytes, offset 346
    int        flag                  //    4 bytes, offset 348
    float      width                 //    4 bytes, offset 352
    float      ext1                  //    4 bytes, offset 356
    float      ext2                  //    4 bytes, offset 360
    short      resolu                //    2 bytes, offset 364
    short      resolv                //    2 bytes, offset 366
    short      resolu_ren            //    2 bytes, offset 368
    short      resolv_ren            //    2 bytes, offset 370
    int        actnu                 //    4 bytes, offset 372
    int        actvert               //    4 bytes, offset 376
    char       overflow              //    1 bytes, offset 380
    char       spacemode             //    1 bytes, offset 381
    char       align_y               //    1 bytes, offset 382
    char       bevel_mode            //    1 bytes, offset 383
    char       taper_radius_mode     //    1 bytes, offset 384
    char       _pad                  //    1 bytes, offset 385
    short      lines                 //    2 bytes, offset 386
    float      spacing               //    4 bytes, offset 388
    float      linedist              //    4 bytes, offset 392
    float      shear                 //    4 bytes, offset 396
    float      fsize                 //    4 bytes, offset 400
    float      wordspace             //    4 bytes, offset 404
    float      ulpos                 //    4 bytes, offset 408
    float      ulheight              //    4 bytes, offset 412
    float      xof                   //    4 bytes, offset 416
    float      yof                   //    4 bytes, offset 420
    float      linewidth             //    4 bytes, offset 424
    int        pos                   //    4 bytes, offset 428
    int        selstart              //    4 bytes, offset 432
    int        selend                //    4 bytes, offset 436
    int        len_wchar             //    4 bytes, offset 440
    int        len                   //    4 bytes, offset 444
    char       *str                  //    8 bytes, offset 448
    EditFont   *editfont             //    8 bytes, offset 456
    char       family[64]            //   64 bytes, offset 464
    VFont      *vfont                //    8 bytes, offset 528
    VFont      *vfontb               //    8 bytes, offset 536
    VFont      *vfonti               //    8 bytes, offset 544
    VFont      *vfontbi              //    8 bytes, offset 552
    TextBox    *tb                   //    8 bytes, offset 560
    int        totbox                //    4 bytes, offset 568
    int        actbox                //    4 bytes, offset 572
    CharInfo   *strinfo              //    8 bytes, offset 576
    CharInfo   curinfo               //    8 bytes, offset 584
    float      ctime                 //    4 bytes, offset 592
    float      bevfac1               //    4 bytes, offset 596
    float      bevfac2               //    4 bytes, offset 600
    char       bevfac1_mapping       //    1 bytes, offset 604
    char       bevfac2_mapping       //    1 bytes, offset 605
    char       _pad2[6]              //    6 bytes, offset 606
    float      fsize_realtime        //    4 bytes, offset 612
    Curves     *curve_eval           //    8 bytes, offset 616
    char       edit_data_from_original //    1 bytes, offset 624
    char       _pad3[7]              //    7 bytes, offset 625
    void       *batch_cache          //    8 bytes, offset 632
struct CurveProfilePoint // 40 bytes [#155]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    short      flag                  //    2 bytes, offset 8
    char       h1                    //    1 bytes, offset 10
    char       h2                    //    1 bytes, offset 11
    float      h1_loc[2]             //    8 bytes, offset 12
    float      h2_loc[2]             //    8 bytes, offset 20
    char       _pad[4]               //    4 bytes, offset 28
    CurveProfile *profile            //    8 bytes, offset 32
struct CurveProfile // 72 bytes [#156]
    short      path_len              //    2 bytes, offset 0
    short      segments_len          //    2 bytes, offset 2
    int        preset                //    4 bytes, offset 4
    CurveProfilePoint *path          //    8 bytes, offset 8
    CurveProfilePoint *table         //    8 bytes, offset 16
    CurveProfilePoint *segments      //    8 bytes, offset 24
    int        flag                  //    4 bytes, offset 32
    int        changed_timestamp     //    4 bytes, offset 36
    rctf       view_rect             //   16 bytes, offset 40
    rctf       clip_rect             //   16 bytes, offset 56
struct CurvesGeometry // 544 bytes [#157]
    int        *curve_offsets        //    8 bytes, offset 0
    CustomData point_data            //  248 bytes, offset 8
    CustomData curve_data            //  248 bytes, offset 256
    int        point_size            //    4 bytes, offset 504
    int        curve_size            //    4 bytes, offset 508
    ListBase   vertex_group_names    //   16 bytes, offset 512
    int        vertex_group_active_index //    4 bytes, offset 528
    int        attributes_active_index //    4 bytes, offset 532
    CurvesGeometryRuntimeHandle *runtime //    8 bytes, offset 536
struct Curves // 816 bytes, is ID [#158]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    CurvesGeometry geometry          //  544 bytes, offset 216
    int        flag                  //    4 bytes, offset 760
    int        attributes_active_index //    4 bytes, offset 764
    Material   **mat                 //    8 bytes, offset 768
    short      totcol                //    2 bytes, offset 776
    char       symmetry              //    1 bytes, offset 778
    char       selection_domain      //    1 bytes, offset 779
    char       _pad[4]               //    4 bytes, offset 780
    Object     *surface              //    8 bytes, offset 784
    char       *surface_uv_map       //    8 bytes, offset 792
    float      surface_collision_distance //    4 bytes, offset 800
    char       _pad2[4]              //    4 bytes, offset 804
    void       *batch_cache          //    8 bytes, offset 808
struct CustomDataLayer // 120 bytes [#159]
    int        type                  //    4 bytes, offset 0
    int        offset                //    4 bytes, offset 4
    int        flag                  //    4 bytes, offset 8
    int        active                //    4 bytes, offset 12
    int        active_rnd            //    4 bytes, offset 16
    int        active_clone          //    4 bytes, offset 20
    int        active_mask           //    4 bytes, offset 24
    int        uid                   //    4 bytes, offset 28
    char       name[68]              //   68 bytes, offset 32
    char       _pad1[4]              //    4 bytes, offset 100
    void       *data                 //    8 bytes, offset 104
    ImplicitSharingInfoHandle *sharing_info //    8 bytes, offset 112
struct CustomDataExternal // 1024 bytes [#160]
    char       filename[1024]        // 1024 bytes, offset 0
struct CustomData // 248 bytes [#161]
    CustomDataLayer *layers          //    8 bytes, offset 0
    int        typemap[53]           //  212 bytes, offset 8
    int        totlayer              //    4 bytes, offset 220
    int        maxlayer              //    4 bytes, offset 224
    int        totsize               //    4 bytes, offset 228
    BLI_mempool *pool                //    8 bytes, offset 232
    CustomDataExternal *external     //    8 bytes, offset 240
struct CustomData_MeshMasks // 40 bytes [#162]
    uint64_t   vmask                 //    8 bytes, offset 0
    uint64_t   emask                 //    8 bytes, offset 8
    uint64_t   fmask                 //    8 bytes, offset 16
    uint64_t   pmask                 //    8 bytes, offset 24
    uint64_t   lmask                 //    8 bytes, offset 32
struct DynamicPaintSurface // 1568 bytes [#163]
    DynamicPaintSurface *next        //    8 bytes, offset 0
    DynamicPaintSurface *prev        //    8 bytes, offset 8
    DynamicPaintCanvasSettings *canvas //    8 bytes, offset 16
    PaintSurfaceData *data           //    8 bytes, offset 24
    Collection *brush_group          //    8 bytes, offset 32
    EffectorWeights *effector_weights //    8 bytes, offset 40
    PointCache *pointcache           //    8 bytes, offset 48
    ListBase   ptcaches              //   16 bytes, offset 56
    int        current_frame         //    4 bytes, offset 72
    char       name[64]              //   64 bytes, offset 76
    short      format                //    2 bytes, offset 140
    short      type                  //    2 bytes, offset 142
    short      disp_type             //    2 bytes, offset 144
    short      image_fileformat      //    2 bytes, offset 146
    short      effect_ui             //    2 bytes, offset 148
    short      init_color_type       //    2 bytes, offset 150
    int        flags                 //    4 bytes, offset 152
    int        effect                //    4 bytes, offset 156
    int        image_resolution      //    4 bytes, offset 160
    int        substeps              //    4 bytes, offset 164
    int        start_frame           //    4 bytes, offset 168
    int        end_frame             //    4 bytes, offset 172
    float      init_color[4]         //   16 bytes, offset 176
    Tex        *init_texture         //    8 bytes, offset 192
    char       init_layername[68]    //   68 bytes, offset 200
    int        dry_speed             //    4 bytes, offset 268
    int        diss_speed            //    4 bytes, offset 272
    float      color_dry_threshold   //    4 bytes, offset 276
    float      depth_clamp           //    4 bytes, offset 280
    float      disp_factor           //    4 bytes, offset 284
    float      spread_speed          //    4 bytes, offset 288
    float      color_spread_speed    //    4 bytes, offset 292
    float      shrink_speed          //    4 bytes, offset 296
    float      drip_vel              //    4 bytes, offset 300
    float      drip_acc              //    4 bytes, offset 304
    float      influence_scale       //    4 bytes, offset 308
    float      radius_scale          //    4 bytes, offset 312
    float      wave_damping          //    4 bytes, offset 316
    float      wave_speed            //    4 bytes, offset 320
    float      wave_timescale        //    4 bytes, offset 324
    float      wave_spring           //    4 bytes, offset 328
    float      wave_smoothness       //    4 bytes, offset 332
    char       _pad2[4]              //    4 bytes, offset 336
    char       uvlayer_name[68]      //   68 bytes, offset 340
    char       image_output_path[1024] // 1024 bytes, offset 408
    char       output_name[68]       //   68 bytes, offset 1432
    char       output_name2[68]      //   68 bytes, offset 1500
struct DynamicPaintCanvasSettings // 96 bytes [#164]
    DynamicPaintModifierData *pmd    //    8 bytes, offset 0
    ListBase   surfaces              //   16 bytes, offset 8
    short      active_sur            //    2 bytes, offset 24
    short      flags                 //    2 bytes, offset 26
    char       _pad[4]               //    4 bytes, offset 28
    char       error[64]             //   64 bytes, offset 32
struct DynamicPaintBrushSettings // 96 bytes [#165]
    DynamicPaintModifierData *pmd    //    8 bytes, offset 0
    ParticleSystem *psys             //    8 bytes, offset 8
    int        flags                 //    4 bytes, offset 16
    int        collision             //    4 bytes, offset 20
    float      r                     //    4 bytes, offset 24
    float      g                     //    4 bytes, offset 28
    float      b                     //    4 bytes, offset 32
    float      alpha                 //    4 bytes, offset 36
    float      wetness               //    4 bytes, offset 40
    float      particle_radius       //    4 bytes, offset 44
    float      particle_smooth       //    4 bytes, offset 48
    float      paint_distance        //    4 bytes, offset 52
    ColorBand  *paint_ramp           //    8 bytes, offset 56
    ColorBand  *vel_ramp             //    8 bytes, offset 64
    short      proximity_falloff     //    2 bytes, offset 72
    short      wave_type             //    2 bytes, offset 74
    short      ray_dir               //    2 bytes, offset 76
    char       _pad[2]               //    2 bytes, offset 78
    float      wave_factor           //    4 bytes, offset 80
    float      wave_clamp            //    4 bytes, offset 84
    float      max_velocity          //    4 bytes, offset 88
    float      smudge_strength       //    4 bytes, offset 92
struct Effect // 24 bytes [#166]
    Effect     *next                 //    8 bytes, offset 0
    Effect     *prev                 //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      flag                  //    2 bytes, offset 18
    short      buttype               //    2 bytes, offset 20
    char       _pad0[2]              //    2 bytes, offset 22
struct BuildEff // 32 bytes [#167]
    BuildEff   *next                 //    8 bytes, offset 0
    BuildEff   *prev                 //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      flag                  //    2 bytes, offset 18
    short      buttype               //    2 bytes, offset 20
    char       _pad0[2]              //    2 bytes, offset 22
    float      len                   //    4 bytes, offset 24
    float      sfra                  //    4 bytes, offset 28
struct PartEff // 392 bytes [#168]
    PartEff    *next                 //    8 bytes, offset 0
    PartEff    *prev                 //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      flag                  //    2 bytes, offset 18
    short      buttype               //    2 bytes, offset 20
    short      stype                 //    2 bytes, offset 22
    short      vertgroup             //    2 bytes, offset 24
    short      userjit               //    2 bytes, offset 26
    float      sta                   //    4 bytes, offset 28
    float      end                   //    4 bytes, offset 32
    float      lifetime              //    4 bytes, offset 36
    int        totpart               //    4 bytes, offset 40
    int        totkey                //    4 bytes, offset 44
    int        seed                  //    4 bytes, offset 48
    float      normfac               //    4 bytes, offset 52
    float      obfac                 //    4 bytes, offset 56
    float      randfac               //    4 bytes, offset 60
    float      texfac                //    4 bytes, offset 64
    float      randlife              //    4 bytes, offset 68
    float      force[3]              //   12 bytes, offset 72
    float      damp                  //    4 bytes, offset 84
    float      nabla                 //    4 bytes, offset 88
    float      vectsize              //    4 bytes, offset 92
    float      maxlen                //    4 bytes, offset 96
    float      defvec[3]             //   12 bytes, offset 100
    char       _pad[4]               //    4 bytes, offset 112
    float      mult[4]               //   16 bytes, offset 116
    float      life[4]               //   16 bytes, offset 132
    short      child[4]              //    8 bytes, offset 148
    short      mat[4]                //    8 bytes, offset 156
    short      texmap                //    2 bytes, offset 164
    short      curmult               //    2 bytes, offset 166
    short      staticstep            //    2 bytes, offset 168
    short      omat                  //    2 bytes, offset 170
    short      timetex               //    2 bytes, offset 172
    short      speedtex              //    2 bytes, offset 174
    short      flag2                 //    2 bytes, offset 176
    short      flag2neg              //    2 bytes, offset 178
    short      disp                  //    2 bytes, offset 180
    short      vertgroup_v           //    2 bytes, offset 182
    char       vgroupname[64]        //   64 bytes, offset 184
    char       vgroupname_v[64]      //   64 bytes, offset 248
    float      imat[4][4]            //   64 bytes, offset 312
    Particle   *keys                 //    8 bytes, offset 376
    Collection *group                //    8 bytes, offset 384
struct WaveEff // 64 bytes [#169]
    WaveEff    *next                 //    8 bytes, offset 0
    WaveEff    *prev                 //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      flag                  //    2 bytes, offset 18
    short      buttype               //    2 bytes, offset 20
    short      stype                 //    2 bytes, offset 22
    float      startx                //    4 bytes, offset 24
    float      starty                //    4 bytes, offset 28
    float      height                //    4 bytes, offset 32
    float      width                 //    4 bytes, offset 36
    float      narrow                //    4 bytes, offset 40
    float      speed                 //    4 bytes, offset 44
    float      minfac                //    4 bytes, offset 48
    float      damp                  //    4 bytes, offset 52
    float      timeoffs              //    4 bytes, offset 56
    float      lifetime              //    4 bytes, offset 60
struct FileGlobal // 1104 bytes [#170]
    char       subvstr[4]            //    4 bytes, offset 0
    short      subversion            //    2 bytes, offset 4
    short      minversion            //    2 bytes, offset 6
    short      minsubversion         //    2 bytes, offset 8
    char       _pad[6]               //    6 bytes, offset 10
    bScreen    *curscreen            //    8 bytes, offset 16
    Scene      *curscene             //    8 bytes, offset 24
    ViewLayer  *cur_view_layer       //    8 bytes, offset 32
    void       *_pad1                //    8 bytes, offset 40
    int        fileflags             //    4 bytes, offset 48
    int        globalf               //    4 bytes, offset 52
    uint64_t   build_commit_timestamp //    8 bytes, offset 56
    char       build_hash[16]        //   16 bytes, offset 64
    char       filename[1024]        // 1024 bytes, offset 80
struct FluidDomainSettings // 2288 bytes [#171]
    FluidModifierData *fmd           //    8 bytes, offset 0
    MANTA      *fluid                //    8 bytes, offset 8
    MANTA      *fluid_old            //    8 bytes, offset 16
    void       *fluid_mutex          //    8 bytes, offset 24
    Collection *fluid_group          //    8 bytes, offset 32
    Collection *force_group          //    8 bytes, offset 40
    Collection *effector_group       //    8 bytes, offset 48
    GPUTexture *tex_density          //    8 bytes, offset 56
    GPUTexture *tex_color            //    8 bytes, offset 64
    GPUTexture *tex_wt               //    8 bytes, offset 72
    GPUTexture *tex_shadow           //    8 bytes, offset 80
    GPUTexture *tex_flame            //    8 bytes, offset 88
    GPUTexture *tex_flame_coba       //    8 bytes, offset 96
    GPUTexture *tex_coba             //    8 bytes, offset 104
    GPUTexture *tex_field            //    8 bytes, offset 112
    GPUTexture *tex_velocity_x       //    8 bytes, offset 120
    GPUTexture *tex_velocity_y       //    8 bytes, offset 128
    GPUTexture *tex_velocity_z       //    8 bytes, offset 136
    GPUTexture *tex_flags            //    8 bytes, offset 144
    GPUTexture *tex_range_field      //    8 bytes, offset 152
    Object     *guiding_parent       //    8 bytes, offset 160
    EffectorWeights *effector_weights //    8 bytes, offset 168
    float      p0[3]                 //   12 bytes, offset 176
    float      p1[3]                 //   12 bytes, offset 188
    float      dp0[3]                //   12 bytes, offset 200
    float      cell_size[3]          //   12 bytes, offset 212
    float      global_size[3]        //   12 bytes, offset 224
    float      prev_loc[3]           //   12 bytes, offset 236
    int        shift[3]              //   12 bytes, offset 248
    float      shift_f[3]            //   12 bytes, offset 260
    float      obj_shift_f[3]        //   12 bytes, offset 272
    float      imat[4][4]            //   64 bytes, offset 284
    float      obmat[4][4]           //   64 bytes, offset 348
    float      fluidmat[4][4]        //   64 bytes, offset 412
    float      fluidmat_wt[4][4]     //   64 bytes, offset 476
    int        base_res[3]           //   12 bytes, offset 540
    int        res_min[3]            //   12 bytes, offset 552
    int        res_max[3]            //   12 bytes, offset 564
    int        res[3]                //   12 bytes, offset 576
    int        total_cells           //    4 bytes, offset 588
    float      dx                    //    4 bytes, offset 592
    float      scale                 //    4 bytes, offset 596
    int        boundary_width        //    4 bytes, offset 600
    float      gravity_final[3]      //   12 bytes, offset 604
    int        adapt_margin          //    4 bytes, offset 616
    int        adapt_res             //    4 bytes, offset 620
    float      adapt_threshold       //    4 bytes, offset 624
    int        maxres                //    4 bytes, offset 628
    int        solver_res            //    4 bytes, offset 632
    int        border_collisions     //    4 bytes, offset 636
    int        flags                 //    4 bytes, offset 640
    float      gravity[3]            //   12 bytes, offset 644
    int        active_fields         //    4 bytes, offset 656
    short      type                  //    2 bytes, offset 660
    char       _pad2[6]              //    6 bytes, offset 662
    float      alpha                 //    4 bytes, offset 668
    float      beta                  //    4 bytes, offset 672
    int        diss_speed            //    4 bytes, offset 676
    float      vorticity             //    4 bytes, offset 680
    float      active_color[3]       //   12 bytes, offset 684
    int        highres_sampling      //    4 bytes, offset 696
    float      burning_rate          //    4 bytes, offset 700
    float      flame_smoke           //    4 bytes, offset 704
    float      flame_vorticity       //    4 bytes, offset 708
    float      flame_ignition        //    4 bytes, offset 712
    float      flame_max_temp        //    4 bytes, offset 716
    float      flame_smoke_color[3]  //   12 bytes, offset 720
    float      noise_strength        //    4 bytes, offset 732
    float      noise_pos_scale       //    4 bytes, offset 736
    float      noise_time_anim       //    4 bytes, offset 740
    int        res_noise[3]          //   12 bytes, offset 744
    int        noise_scale           //    4 bytes, offset 756
    char       _pad3[4]              //    4 bytes, offset 760
    float      particle_randomness   //    4 bytes, offset 764
    int        particle_number       //    4 bytes, offset 768
    int        particle_minimum      //    4 bytes, offset 772
    int        particle_maximum      //    4 bytes, offset 776
    float      particle_radius       //    4 bytes, offset 780
    float      particle_band_width   //    4 bytes, offset 784
    float      fractions_threshold   //    4 bytes, offset 788
    float      fractions_distance    //    4 bytes, offset 792
    float      flip_ratio            //    4 bytes, offset 796
    int        sys_particle_maximum  //    4 bytes, offset 800
    short      simulation_method     //    2 bytes, offset 804
    char       _pad4[6]              //    6 bytes, offset 806
    float      viscosity_value       //    4 bytes, offset 812
    char       _pad5[4]              //    4 bytes, offset 816
    float      surface_tension       //    4 bytes, offset 820
    float      viscosity_base        //    4 bytes, offset 824
    int        viscosity_exponent    //    4 bytes, offset 828
    float      mesh_concave_upper    //    4 bytes, offset 832
    float      mesh_concave_lower    //    4 bytes, offset 836
    float      mesh_particle_radius  //    4 bytes, offset 840
    int        mesh_smoothen_pos     //    4 bytes, offset 844
    int        mesh_smoothen_neg     //    4 bytes, offset 848
    int        mesh_scale            //    4 bytes, offset 852
    short      mesh_generator        //    2 bytes, offset 856
    char       _pad6[2]              //    2 bytes, offset 858
    int        particle_type         //    4 bytes, offset 860
    int        particle_scale        //    4 bytes, offset 864
    float      sndparticle_tau_min_wc //    4 bytes, offset 868
    float      sndparticle_tau_max_wc //    4 bytes, offset 872
    float      sndparticle_tau_min_ta //    4 bytes, offset 876
    float      sndparticle_tau_max_ta //    4 bytes, offset 880
    float      sndparticle_tau_min_k //    4 bytes, offset 884
    float      sndparticle_tau_max_k //    4 bytes, offset 888
    int        sndparticle_k_wc      //    4 bytes, offset 892
    int        sndparticle_k_ta      //    4 bytes, offset 896
    float      sndparticle_k_b       //    4 bytes, offset 900
    float      sndparticle_k_d       //    4 bytes, offset 904
    float      sndparticle_l_min     //    4 bytes, offset 908
    float      sndparticle_l_max     //    4 bytes, offset 912
    int        sndparticle_potential_radius //    4 bytes, offset 916
    int        sndparticle_update_radius //    4 bytes, offset 920
    char       sndparticle_boundary  //    1 bytes, offset 924
    char       sndparticle_combined_export //    1 bytes, offset 925
    char       _pad7[6]              //    6 bytes, offset 926
    float      guiding_alpha         //    4 bytes, offset 932
    int        guiding_beta          //    4 bytes, offset 936
    float      guiding_vel_factor    //    4 bytes, offset 940
    int        guide_res[3]          //   12 bytes, offset 944
    short      guiding_source        //    2 bytes, offset 956
    char       _pad8[2]              //    2 bytes, offset 958
    int        cache_frame_start     //    4 bytes, offset 960
    int        cache_frame_end       //    4 bytes, offset 964
    int        cache_frame_pause_data //    4 bytes, offset 968
    int        cache_frame_pause_noise //    4 bytes, offset 972
    int        cache_frame_pause_mesh //    4 bytes, offset 976
    int        cache_frame_pause_particles //    4 bytes, offset 980
    int        cache_frame_pause_guiding //    4 bytes, offset 984
    int        cache_frame_offset    //    4 bytes, offset 988
    int        cache_flag            //    4 bytes, offset 992
    char       cache_mesh_format     //    1 bytes, offset 996
    char       cache_data_format     //    1 bytes, offset 997
    char       cache_particle_format //    1 bytes, offset 998
    char       cache_noise_format    //    1 bytes, offset 999
    char       cache_directory[1024] // 1024 bytes, offset 1000
    char       error[64]             //   64 bytes, offset 2024
    short      cache_type            //    2 bytes, offset 2088
    char       cache_id[4]           //    4 bytes, offset 2090
    char       _pad9[2]              //    2 bytes, offset 2094
    float      dt                    //    4 bytes, offset 2096
    float      time_total            //    4 bytes, offset 2100
    float      time_per_frame        //    4 bytes, offset 2104
    float      frame_length          //    4 bytes, offset 2108
    float      time_scale            //    4 bytes, offset 2112
    float      cfl_condition         //    4 bytes, offset 2116
    int        timesteps_minimum     //    4 bytes, offset 2120
    int        timesteps_maximum     //    4 bytes, offset 2124
    float      slice_per_voxel       //    4 bytes, offset 2128
    float      slice_depth           //    4 bytes, offset 2132
    float      display_thickness     //    4 bytes, offset 2136
    float      grid_scale            //    4 bytes, offset 2140
    ColorBand  *coba                 //    8 bytes, offset 2144
    float      vector_scale          //    4 bytes, offset 2152
    float      gridlines_lower_bound //    4 bytes, offset 2156
    float      gridlines_upper_bound //    4 bytes, offset 2160
    float      gridlines_range_color[4] //   16 bytes, offset 2164
    char       axis_slice_method     //    1 bytes, offset 2180
    char       slice_axis            //    1 bytes, offset 2181
    char       show_gridlines        //    1 bytes, offset 2182
    char       draw_velocity         //    1 bytes, offset 2183
    char       vector_draw_type      //    1 bytes, offset 2184
    char       vector_field          //    1 bytes, offset 2185
    char       vector_scale_with_magnitude //    1 bytes, offset 2186
    char       vector_draw_mac_components //    1 bytes, offset 2187
    char       use_coba              //    1 bytes, offset 2188
    char       coba_field            //    1 bytes, offset 2189
    char       interp_method         //    1 bytes, offset 2190
    char       gridlines_color_field //    1 bytes, offset 2191
    char       gridlines_cell_filter //    1 bytes, offset 2192
    char       _pad10[3]             //    3 bytes, offset 2193
    float      velocity_scale        //    4 bytes, offset 2196
    int        openvdb_compression   //    4 bytes, offset 2200
    float      clipping              //    4 bytes, offset 2204
    char       openvdb_data_depth    //    1 bytes, offset 2208
    char       _pad11[7]             //    7 bytes, offset 2209
    int        viewsettings          //    4 bytes, offset 2216
    char       _pad12[4]             //    4 bytes, offset 2220
    PointCache *point_cache[2]       //   16 bytes, offset 2224
    ListBase   ptcaches[2]           //   32 bytes, offset 2240
    int        cache_comp            //    4 bytes, offset 2272
    int        cache_high_comp       //    4 bytes, offset 2276
    char       cache_file_format     //    1 bytes, offset 2280
    char       _pad13[7]             //    7 bytes, offset 2281
struct FluidFlowSettings // 216 bytes [#172]
    FluidModifierData *fmd           //    8 bytes, offset 0
    Mesh       *mesh                 //    8 bytes, offset 8
    ParticleSystem *psys             //    8 bytes, offset 16
    Tex        *noise_texture        //    8 bytes, offset 24
    float      *verts_old            //    8 bytes, offset 32
    int        numverts              //    4 bytes, offset 40
    float      vel_multi             //    4 bytes, offset 44
    float      vel_normal            //    4 bytes, offset 48
    float      vel_random            //    4 bytes, offset 52
    float      vel_coord[3]          //   12 bytes, offset 56
    char       _pad1[4]              //    4 bytes, offset 68
    float      density               //    4 bytes, offset 72
    float      color[3]              //   12 bytes, offset 76
    float      fuel_amount           //    4 bytes, offset 88
    float      temperature           //    4 bytes, offset 92
    float      volume_density        //    4 bytes, offset 96
    float      surface_distance      //    4 bytes, offset 100
    float      particle_size         //    4 bytes, offset 104
    int        subframes             //    4 bytes, offset 108
    float      texture_size          //    4 bytes, offset 112
    float      texture_offset        //    4 bytes, offset 116
    char       _pad2[4]              //    4 bytes, offset 120
    char       uvlayer_name[68]      //   68 bytes, offset 124
    char       _pad3[4]              //    4 bytes, offset 192
    short      vgroup_density        //    2 bytes, offset 196
    short      type                  //    2 bytes, offset 198
    short      behavior              //    2 bytes, offset 200
    short      source                //    2 bytes, offset 202
    short      texture_type          //    2 bytes, offset 204
    short      _pad4[3]              //    6 bytes, offset 206
    int        flags                 //    4 bytes, offset 212
struct FluidEffectorSettings // 56 bytes [#173]
    FluidModifierData *fmd           //    8 bytes, offset 0
    Mesh       *mesh                 //    8 bytes, offset 8
    float      *verts_old            //    8 bytes, offset 16
    int        numverts              //    4 bytes, offset 24
    float      surface_distance      //    4 bytes, offset 28
    int        flags                 //    4 bytes, offset 32
    int        subframes             //    4 bytes, offset 36
    short      type                  //    2 bytes, offset 40
    char       _pad1[6]              //    6 bytes, offset 42
    float      vel_multi             //    4 bytes, offset 48
    short      guiding_mode          //    2 bytes, offset 52
    char       _pad2[2]              //    2 bytes, offset 54
struct FreestyleLineSet // 128 bytes [#174]
    FreestyleLineSet *next           //    8 bytes, offset 0
    FreestyleLineSet *prev           //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    int        flags                 //    4 bytes, offset 80
    int        selection             //    4 bytes, offset 84
    short      qi                    //    2 bytes, offset 88
    char       _pad1[2]              //    2 bytes, offset 90
    int        qi_start              //    4 bytes, offset 92
    int        qi_end                //    4 bytes, offset 96
    int        edge_types            //    4 bytes, offset 100
    int        exclude_edge_types    //    4 bytes, offset 104
    char       _pad2[4]              //    4 bytes, offset 108
    Collection *group                //    8 bytes, offset 112
    FreestyleLineStyle *linestyle    //    8 bytes, offset 120
struct FreestyleModuleConfig // 32 bytes [#175]
    FreestyleModuleConfig *next      //    8 bytes, offset 0
    FreestyleModuleConfig *prev      //    8 bytes, offset 8
    Text       *script               //    8 bytes, offset 16
    short      is_displayed          //    2 bytes, offset 24
    char       _pad[6]               //    6 bytes, offset 26
struct FreestyleConfig // 56 bytes [#176]
    ListBase   modules               //   16 bytes, offset 0
    int        mode                  //    4 bytes, offset 16
    int        raycasting_algorithm  //    4 bytes, offset 20
    int        flags                 //    4 bytes, offset 24
    float      sphere_radius         //    4 bytes, offset 28
    float      dkr_epsilon           //    4 bytes, offset 32
    float      crease_angle          //    4 bytes, offset 36
    ListBase   linesets              //   16 bytes, offset 40
struct bGPDspoint // 64 bytes [#177]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    float      z                     //    4 bytes, offset 8
    float      pressure              //    4 bytes, offset 12
    float      strength              //    4 bytes, offset 16
    float      time                  //    4 bytes, offset 20
    int        flag                  //    4 bytes, offset 24
    float      uv_fac                //    4 bytes, offset 28
    float      uv_rot                //    4 bytes, offset 32
    float      uv_fill[2]            //    8 bytes, offset 36
    float      vert_color[4]         //   16 bytes, offset 44
    char       _pad2[4]              //    4 bytes, offset 60
struct bGPDtriangle // 12 bytes [#178]
    int        verts[3]              //   12 bytes, offset 0
struct bGPDpalettecolor // 120 bytes [#179]
    bGPDpalettecolor *next           //    8 bytes, offset 0
    bGPDpalettecolor *prev           //    8 bytes, offset 8
    char       info[64]              //   64 bytes, offset 16
    float      color[4]              //   16 bytes, offset 80
    float      fill[4]               //   16 bytes, offset 96
    short      flag                  //    2 bytes, offset 112
    char       _pad[6]               //    6 bytes, offset 114
struct bGPDpalette // 104 bytes [#180]
    bGPDpalette *next                //    8 bytes, offset 0
    bGPDpalette *prev                //    8 bytes, offset 8
    ListBase   colors                //   16 bytes, offset 16
    char       info[64]              //   64 bytes, offset 32
    short      flag                  //    2 bytes, offset 96
    char       _pad[6]               //    6 bytes, offset 98
struct bGPDcurve_point // 124 bytes [#181]
    BezTriple  bezt                  //   72 bytes, offset 0
    float      pressure              //    4 bytes, offset 72
    float      strength              //    4 bytes, offset 76
    int        point_index           //    4 bytes, offset 80
    int        flag                  //    4 bytes, offset 84
    float      uv_fac                //    4 bytes, offset 88
    float      uv_rot                //    4 bytes, offset 92
    float      uv_fill[2]            //    8 bytes, offset 96
    float      vert_color[4]         //   16 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 120
struct bGPDcurve // 16 bytes [#182]
    bGPDcurve_point *curve_points    //    8 bytes, offset 0
    int        tot_curve_points      //    4 bytes, offset 8
    short      flag                  //    2 bytes, offset 12
    char       _pad[2]               //    2 bytes, offset 14
struct bGPDstroke_Runtime // 168 bytes [#183]
    char       tmp_layerinfo[128]    //  128 bytes, offset 0
    float      multi_frame_falloff   //    4 bytes, offset 128
    int        stroke_start          //    4 bytes, offset 132
    int        fill_start            //    4 bytes, offset 136
    int        vertex_start          //    4 bytes, offset 140
    int        curve_start           //    4 bytes, offset 144
    int        _pad0                 //    4 bytes, offset 148
    bGPDstroke *gps_orig             //    8 bytes, offset 152
    void       *_pad2                //    8 bytes, offset 160
struct bGPDstroke // 448 bytes [#184]
    bGPDstroke *next                 //    8 bytes, offset 0
    bGPDstroke *prev                 //    8 bytes, offset 8
    bGPDspoint *points               //    8 bytes, offset 16
    bGPDtriangle *triangles          //    8 bytes, offset 24
    int        totpoints             //    4 bytes, offset 32
    int        tot_triangles         //    4 bytes, offset 36
    short      thickness             //    2 bytes, offset 40
    short      flag                  //    2 bytes, offset 42
    short      _pad[2]               //    4 bytes, offset 44
    double     inittime              //    8 bytes, offset 48
    char       colorname[128]        //  128 bytes, offset 56
    int        mat_nr                //    4 bytes, offset 184
    short      caps[2]               //    4 bytes, offset 188
    float      gradient_f            //    4 bytes, offset 192
    float      gradient_s[2]         //    8 bytes, offset 196
    float      fill_opacity_fac      //    4 bytes, offset 204
    float      uv_rotation           //    4 bytes, offset 208
    float      uv_translation[2]     //    8 bytes, offset 212
    float      uv_scale              //    4 bytes, offset 220
    int        select_index          //    4 bytes, offset 224
    char       _pad4[4]              //    4 bytes, offset 228
    MDeformVert *dvert               //    8 bytes, offset 232
    void       *_pad3                //    8 bytes, offset 240
    float      vert_color_fill[4]    //   16 bytes, offset 248
    bGPDcurve  *editcurve            //    8 bytes, offset 264
    bGPDstroke_Runtime runtime       //  168 bytes, offset 272
    void       *_pad5                //    8 bytes, offset 440
struct bGPDframe_Runtime // 8 bytes [#185]
    int        frameid               //    4 bytes, offset 0
    int        onion_id              //    4 bytes, offset 4
struct bGPDframe // 48 bytes [#186]
    bGPDframe  *next                 //    8 bytes, offset 0
    bGPDframe  *prev                 //    8 bytes, offset 8
    ListBase   strokes               //   16 bytes, offset 16
    int        framenum              //    4 bytes, offset 32
    short      flag                  //    2 bytes, offset 36
    short      key_type              //    2 bytes, offset 38
    bGPDframe_Runtime runtime        //    8 bytes, offset 40
struct bGPDlayer_Mask // 152 bytes [#187]
    bGPDlayer_Mask *next             //    8 bytes, offset 0
    bGPDlayer_Mask *prev             //    8 bytes, offset 8
    char       name[128]             //  128 bytes, offset 16
    short      flag                  //    2 bytes, offset 144
    short      sort_index            //    2 bytes, offset 146
    char       _pad[4]               //    4 bytes, offset 148
struct bGPDlayer_Runtime // 8 bytes [#188]
    int        icon_id               //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
struct bGPDlayer // 672 bytes [#189]
    bGPDlayer  *next                 //    8 bytes, offset 0
    bGPDlayer  *prev                 //    8 bytes, offset 8
    ListBase   frames                //   16 bytes, offset 16
    bGPDframe  *actframe             //    8 bytes, offset 32
    short      flag                  //    2 bytes, offset 40
    short      onion_flag            //    2 bytes, offset 42
    float      color[4]              //   16 bytes, offset 44
    float      fill[4]               //   16 bytes, offset 60
    char       info[128]             //  128 bytes, offset 76
    short      thickness             //    2 bytes, offset 204
    short      pass_index            //    2 bytes, offset 206
    Object     *parent               //    8 bytes, offset 208
    float      inverse[4][4]         //   64 bytes, offset 216
    char       parsubstr[64]         //   64 bytes, offset 280
    short      partype               //    2 bytes, offset 344
    short      line_change           //    2 bytes, offset 346
    float      tintcolor[4]          //   16 bytes, offset 348
    float      opacity               //    4 bytes, offset 364
    char       viewlayername[64]     //   64 bytes, offset 368
    int        blend_mode            //    4 bytes, offset 432
    float      vertex_paint_opacity  //    4 bytes, offset 436
    short      gstep                 //    2 bytes, offset 440
    short      gstep_next            //    2 bytes, offset 442
    float      gcolor_prev[3]        //   12 bytes, offset 444
    float      gcolor_next[3]        //   12 bytes, offset 456
    char       _pad1[4]              //    4 bytes, offset 468
    ListBase   mask_layers           //   16 bytes, offset 472
    int        act_mask              //    4 bytes, offset 488
    char       _pad2[4]              //    4 bytes, offset 492
    float      location[3]           //   12 bytes, offset 496
    float      rotation[3]           //   12 bytes, offset 508
    float      scale[3]              //   12 bytes, offset 520
    float      layer_mat[4][4]       //   64 bytes, offset 532
    float      layer_invmat[4][4]    //   64 bytes, offset 596
    char       _pad3[4]              //    4 bytes, offset 660
    bGPDlayer_Runtime runtime        //    8 bytes, offset 664
struct bGPdata_Runtime // 120 bytes [#190]
    void       *sbuffer              //    8 bytes, offset 0
    short      playing               //    2 bytes, offset 8
    short      matid                 //    2 bytes, offset 10
    short      sbuffer_sflag         //    2 bytes, offset 12
    char       _pad1[2]              //    2 bytes, offset 14
    int        sbuffer_used          //    4 bytes, offset 16
    int        sbuffer_size          //    4 bytes, offset 20
    float      vert_color_fill[4]    //   16 bytes, offset 24
    float      fill_opacity_fac      //    4 bytes, offset 40
    float      arrow_start[8]        //   32 bytes, offset 44
    float      arrow_end[8]          //   32 bytes, offset 76
    int        arrow_start_style     //    4 bytes, offset 108
    int        arrow_end_style       //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct bGPgrid // 40 bytes [#191]
    float      color[3]              //   12 bytes, offset 0
    float      scale[2]              //    8 bytes, offset 12
    float      offset[2]             //    8 bytes, offset 20
    char       _pad1[4]              //    4 bytes, offset 28
    int        lines                 //    4 bytes, offset 32
    char       _pad[4]               //    4 bytes, offset 36
struct bGPdata // 544 bytes, is ID [#192]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    ListBase   layers                //   16 bytes, offset 216
    int        flag                  //    4 bytes, offset 232
    int        curve_edit_resolution //    4 bytes, offset 236
    float      curve_edit_threshold  //    4 bytes, offset 240
    float      curve_edit_corner_angle //    4 bytes, offset 244
    ListBase   palettes              //   16 bytes, offset 248
    ListBase   vertex_group_names    //   16 bytes, offset 264
    float      pixfactor             //    4 bytes, offset 280
    float      line_color[4]         //   16 bytes, offset 284
    float      onion_factor          //    4 bytes, offset 300
    int        onion_mode            //    4 bytes, offset 304
    int        onion_flag            //    4 bytes, offset 308
    short      gstep                 //    2 bytes, offset 312
    short      gstep_next            //    2 bytes, offset 314
    float      gcolor_prev[3]        //   12 bytes, offset 316
    float      gcolor_next[3]        //   12 bytes, offset 328
    float      zdepth_offset         //    4 bytes, offset 340
    Material   **mat                 //    8 bytes, offset 344
    short      totcol                //    2 bytes, offset 352
    short      totlayer              //    2 bytes, offset 354
    short      totframe              //    2 bytes, offset 356
    char       _pad2[6]              //    6 bytes, offset 358
    int        totstroke             //    4 bytes, offset 364
    int        totpoint              //    4 bytes, offset 368
    short      draw_mode             //    2 bytes, offset 372
    short      onion_keytype         //    2 bytes, offset 374
    int        select_last_index     //    4 bytes, offset 376
    int        vertex_group_active_index //    4 bytes, offset 380
    bGPgrid    grid                  //   40 bytes, offset 384
    bGPdata_Runtime runtime          //  120 bytes, offset 424
struct GpencilModifierData // 104 bytes [#193]
    GpencilModifierData *next        //    8 bytes, offset 0
    GpencilModifierData *prev        //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    int        mode                  //    4 bytes, offset 20
    char       _pad0[4]              //    4 bytes, offset 24
    short      flag                  //    2 bytes, offset 28
    short      ui_expand_flag        //    2 bytes, offset 30
    char       name[64]              //   64 bytes, offset 32
    char       *error                //    8 bytes, offset 96
struct NoiseGpencilModifierData // 360 bytes [#194]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      factor                //    4 bytes, offset 312
    float      factor_strength       //    4 bytes, offset 316
    float      factor_thickness      //    4 bytes, offset 320
    float      factor_uvs            //    4 bytes, offset 324
    float      noise_scale           //    4 bytes, offset 328
    float      noise_offset          //    4 bytes, offset 332
    short      noise_mode            //    2 bytes, offset 336
    char       _pad[2]               //    2 bytes, offset 338
    int        step                  //    4 bytes, offset 340
    int        layer_pass            //    4 bytes, offset 344
    int        seed                  //    4 bytes, offset 348
    CurveMapping *curve_intensity    //    8 bytes, offset 352
struct SubdivGpencilModifierData // 264 bytes [#195]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    int        pass_index            //    4 bytes, offset 240
    int        flag                  //    4 bytes, offset 244
    int        level                 //    4 bytes, offset 248
    int        layer_pass            //    4 bytes, offset 252
    short      type                  //    2 bytes, offset 256
    char       _pad[6]               //    6 bytes, offset 258
struct ThickGpencilModifierData // 336 bytes [#196]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      thickness_fac         //    4 bytes, offset 312
    int        thickness             //    4 bytes, offset 316
    int        layer_pass            //    4 bytes, offset 320
    char       _pad[4]               //    4 bytes, offset 324
    CurveMapping *curve_thickness    //    8 bytes, offset 328
struct TimeGpencilModifierSegment // 88 bytes [#197]
    char       name[64]              //   64 bytes, offset 0
    TimeGpencilModifierData *gpmd    //    8 bytes, offset 64
    int        seg_start             //    4 bytes, offset 72
    int        seg_end               //    4 bytes, offset 76
    int        seg_mode              //    4 bytes, offset 80
    int        seg_repeat            //    4 bytes, offset 84
struct TimeGpencilModifierData // 224 bytes [#198]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    int        layer_pass            //    4 bytes, offset 176
    int        flag                  //    4 bytes, offset 180
    int        offset                //    4 bytes, offset 184
    float      frame_scale           //    4 bytes, offset 188
    int        mode                  //    4 bytes, offset 192
    int        sfra                  //    4 bytes, offset 196
    int        efra                  //    4 bytes, offset 200
    char       _pad[4]               //    4 bytes, offset 204
    TimeGpencilModifierSegment *segments //    8 bytes, offset 208
    int        segments_len          //    4 bytes, offset 216
    int        segment_active_index  //    4 bytes, offset 220
struct ColorGpencilModifierData // 280 bytes [#199]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    int        pass_index            //    4 bytes, offset 240
    int        flag                  //    4 bytes, offset 244
    float      hsv[3]                //   12 bytes, offset 248
    char       modify_color          //    1 bytes, offset 260
    char       _pad[3]               //    3 bytes, offset 261
    int        layer_pass            //    4 bytes, offset 264
    char       _pad1[4]              //    4 bytes, offset 268
    CurveMapping *curve_intensity    //    8 bytes, offset 272
struct OpacityGpencilModifierData // 336 bytes [#200]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      factor                //    4 bytes, offset 312
    char       modify_color          //    1 bytes, offset 316
    char       _pad[3]               //    3 bytes, offset 317
    int        layer_pass            //    4 bytes, offset 320
    float      hardeness             //    4 bytes, offset 324
    CurveMapping *curve_intensity    //    8 bytes, offset 328
struct OutlineGpencilModifierData // 216 bytes [#201]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    Material   *material             //    8 bytes, offset 112
    char       layername[64]         //   64 bytes, offset 120
    int        pass_index            //    4 bytes, offset 184
    int        flag                  //    4 bytes, offset 188
    int        thickness             //    4 bytes, offset 192
    float      sample_length         //    4 bytes, offset 196
    int        subdiv                //    4 bytes, offset 200
    int        layer_pass            //    4 bytes, offset 204
    Material   *outline_material     //    8 bytes, offset 208
struct ArrayGpencilModifierData // 336 bytes [#202]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    Material   *material             //    8 bytes, offset 112
    int        count                 //    4 bytes, offset 120
    int        flag                  //    4 bytes, offset 124
    float      offset[3]             //   12 bytes, offset 128
    float      shift[3]              //   12 bytes, offset 140
    float      rnd_offset[3]         //   12 bytes, offset 152
    float      rnd_rot[3]            //   12 bytes, offset 164
    float      rnd_scale[3]          //   12 bytes, offset 176
    char       _pad[4]               //    4 bytes, offset 188
    int        seed                  //    4 bytes, offset 192
    int        pass_index            //    4 bytes, offset 196
    char       layername[64]         //   64 bytes, offset 200
    char       materialname[64]      //   64 bytes, offset 264
    int        mat_rpl               //    4 bytes, offset 328
    int        layer_pass            //    4 bytes, offset 332
struct BuildGpencilModifierData // 376 bytes [#203]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    int        pass_index            //    4 bytes, offset 176
    char       materialname[64]      //   64 bytes, offset 180
    int        layer_pass            //    4 bytes, offset 244
    float      start_frame           //    4 bytes, offset 248
    float      end_frame             //    4 bytes, offset 252
    float      start_delay           //    4 bytes, offset 256
    float      length                //    4 bytes, offset 260
    short      flag                  //    2 bytes, offset 264
    short      mode                  //    2 bytes, offset 266
    short      transition            //    2 bytes, offset 268
    short      time_alignment        //    2 bytes, offset 270
    float      speed_fac             //    4 bytes, offset 272
    float      speed_maxgap          //    4 bytes, offset 276
    short      time_mode             //    2 bytes, offset 280
    char       _pad[6]               //    6 bytes, offset 282
    Object     *object               //    8 bytes, offset 288
    float      percentage_fac        //    4 bytes, offset 296
    float      fade_fac              //    4 bytes, offset 300
    char       target_vgname[64]     //   64 bytes, offset 304
    float      fade_opacity_strength //    4 bytes, offset 368
    float      fade_thickness_strength //    4 bytes, offset 372
struct LatticeGpencilModifierData // 336 bytes [#204]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    Material   *material             //    8 bytes, offset 112
    char       layername[64]         //   64 bytes, offset 120
    char       materialname[64]      //   64 bytes, offset 184
    char       vgname[64]            //   64 bytes, offset 248
    int        pass_index            //    4 bytes, offset 312
    int        flag                  //    4 bytes, offset 316
    float      strength              //    4 bytes, offset 320
    int        layer_pass            //    4 bytes, offset 324
    LatticeDeformData *cache_data    //    8 bytes, offset 328
struct LengthGpencilModifierData // 240 bytes [#205]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    int        pass_index            //    4 bytes, offset 176
    int        flag                  //    4 bytes, offset 180
    int        layer_pass            //    4 bytes, offset 184
    float      start_fac             //    4 bytes, offset 188
    float      end_fac               //    4 bytes, offset 192
    float      rand_start_fac        //    4 bytes, offset 196
    float      rand_end_fac          //    4 bytes, offset 200
    float      rand_offset           //    4 bytes, offset 204
    float      overshoot_fac         //    4 bytes, offset 208
    int        seed                  //    4 bytes, offset 212
    int        step                  //    4 bytes, offset 216
    int        mode                  //    4 bytes, offset 220
    char       _pad[4]               //    4 bytes, offset 224
    float      point_density         //    4 bytes, offset 228
    float      segment_influence     //    4 bytes, offset 232
    float      max_angle             //    4 bytes, offset 236
struct DashGpencilModifierSegment // 96 bytes [#206]
    char       name[64]              //   64 bytes, offset 0
    DashGpencilModifierData *dmd     //    8 bytes, offset 64
    int        dash                  //    4 bytes, offset 72
    int        gap                   //    4 bytes, offset 76
    float      radius                //    4 bytes, offset 80
    float      opacity               //    4 bytes, offset 84
    int        mat_nr                //    4 bytes, offset 88
    int        flag                  //    4 bytes, offset 92
struct DashGpencilModifierData // 208 bytes [#207]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    int        pass_index            //    4 bytes, offset 176
    int        flag                  //    4 bytes, offset 180
    int        layer_pass            //    4 bytes, offset 184
    int        dash_offset           //    4 bytes, offset 188
    DashGpencilModifierSegment *segments //    8 bytes, offset 192
    int        segments_len          //    4 bytes, offset 200
    int        segment_active_index  //    4 bytes, offset 204
struct MirrorGpencilModifierData // 264 bytes [#208]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    Material   *material             //    8 bytes, offset 112
    char       layername[64]         //   64 bytes, offset 120
    char       materialname[64]      //   64 bytes, offset 184
    int        pass_index            //    4 bytes, offset 248
    int        flag                  //    4 bytes, offset 252
    int        layer_pass            //    4 bytes, offset 256
    char       _pad[4]               //    4 bytes, offset 260
struct HookGpencilModifierData // 488 bytes [#209]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    Material   *material             //    8 bytes, offset 112
    char       subtarget[64]         //   64 bytes, offset 120
    char       layername[64]         //   64 bytes, offset 184
    char       materialname[64]      //   64 bytes, offset 248
    char       vgname[64]            //   64 bytes, offset 312
    int        pass_index            //    4 bytes, offset 376
    int        layer_pass            //    4 bytes, offset 380
    char       _pad[4]               //    4 bytes, offset 384
    int        flag                  //    4 bytes, offset 388
    char       falloff_type          //    1 bytes, offset 392
    char       _pad1[3]              //    3 bytes, offset 393
    float      parentinv[4][4]       //   64 bytes, offset 396
    float      cent[3]               //   12 bytes, offset 460
    float      falloff               //    4 bytes, offset 472
    float      force                 //    4 bytes, offset 476
    CurveMapping *curfalloff         //    8 bytes, offset 480
struct SimplifyGpencilModifierData // 272 bytes [#210]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    int        pass_index            //    4 bytes, offset 240
    int        flag                  //    4 bytes, offset 244
    float      factor                //    4 bytes, offset 248
    short      mode                  //    2 bytes, offset 252
    short      step                  //    2 bytes, offset 254
    int        layer_pass            //    4 bytes, offset 256
    float      length                //    4 bytes, offset 260
    float      sharp_threshold       //    4 bytes, offset 264
    float      distance              //    4 bytes, offset 268
struct OffsetGpencilModifierData // 408 bytes [#211]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      loc[3]                //   12 bytes, offset 312
    float      rot[3]                //   12 bytes, offset 324
    float      scale[3]              //   12 bytes, offset 336
    float      rnd_offset[3]         //   12 bytes, offset 348
    float      rnd_rot[3]            //   12 bytes, offset 360
    float      rnd_scale[3]          //   12 bytes, offset 372
    int        seed                  //    4 bytes, offset 384
    int        mode                  //    4 bytes, offset 388
    int        stroke_step           //    4 bytes, offset 392
    int        stroke_start_offset   //    4 bytes, offset 396
    int        layer_pass            //    4 bytes, offset 400
    char       _pad[4]               //    4 bytes, offset 404
struct SmoothGpencilModifierData // 336 bytes [#212]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      factor                //    4 bytes, offset 312
    int        step                  //    4 bytes, offset 316
    int        layer_pass            //    4 bytes, offset 320
    char       _pad1[4]              //    4 bytes, offset 324
    CurveMapping *curve_intensity    //    8 bytes, offset 328
struct ArmatureGpencilModifierData // 192 bytes [#213]
    GpencilModifierData modifier     //  104 bytes, offset 0
    short      deformflag            //    2 bytes, offset 104
    short      multi                 //    2 bytes, offset 106
    int        _pad                  //    4 bytes, offset 108
    Object     *object               //    8 bytes, offset 112
    float      (*vert_coords_prev)() //    8 bytes, offset 120
    char       vgname[64]            //   64 bytes, offset 128
struct MultiplyGpencilModifierData // 280 bytes [#214]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    int        pass_index            //    4 bytes, offset 240
    int        flag                  //    4 bytes, offset 244
    int        layer_pass            //    4 bytes, offset 248
    int        flags                 //    4 bytes, offset 252
    int        duplications          //    4 bytes, offset 256
    float      distance              //    4 bytes, offset 260
    float      offset                //    4 bytes, offset 264
    float      fading_center         //    4 bytes, offset 268
    float      fading_thickness      //    4 bytes, offset 272
    float      fading_opacity        //    4 bytes, offset 276
struct TintGpencilModifierData // 368 bytes [#215]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    Material   *material             //    8 bytes, offset 112
    char       layername[64]         //   64 bytes, offset 120
    char       materialname[64]      //   64 bytes, offset 184
    char       vgname[64]            //   64 bytes, offset 248
    int        pass_index            //    4 bytes, offset 312
    int        layer_pass            //    4 bytes, offset 316
    int        flag                  //    4 bytes, offset 320
    int        mode                  //    4 bytes, offset 324
    float      factor                //    4 bytes, offset 328
    float      radius                //    4 bytes, offset 332
    float      rgb[3]                //   12 bytes, offset 336
    int        type                  //    4 bytes, offset 348
    CurveMapping *curve_intensity    //    8 bytes, offset 352
    ColorBand  *colorband            //    8 bytes, offset 360
struct TextureGpencilModifierData // 352 bytes [#216]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       materialname[64]      //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      uv_offset             //    4 bytes, offset 312
    float      uv_scale              //    4 bytes, offset 316
    float      fill_rotation         //    4 bytes, offset 320
    float      fill_offset[2]        //    8 bytes, offset 324
    float      fill_scale            //    4 bytes, offset 332
    int        layer_pass            //    4 bytes, offset 336
    short      fit_method            //    2 bytes, offset 340
    short      mode                  //    2 bytes, offset 342
    float      alignment_rotation    //    4 bytes, offset 344
    char       _pad[4]               //    4 bytes, offset 348
struct WeightProxGpencilModifierData // 336 bytes [#217]
    GpencilModifierData modifier     //  104 bytes, offset 0
    char       target_vgname[64]     //   64 bytes, offset 104
    Material   *material             //    8 bytes, offset 168
    char       layername[64]         //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      min_weight            //    4 bytes, offset 312
    int        layer_pass            //    4 bytes, offset 316
    float      dist_start            //    4 bytes, offset 320
    float      dist_end              //    4 bytes, offset 324
    Object     *object               //    8 bytes, offset 328
struct WeightAngleGpencilModifierData // 328 bytes [#218]
    GpencilModifierData modifier     //  104 bytes, offset 0
    char       target_vgname[64]     //   64 bytes, offset 104
    Material   *material             //    8 bytes, offset 168
    char       layername[64]         //   64 bytes, offset 176
    char       vgname[64]            //   64 bytes, offset 240
    int        pass_index            //    4 bytes, offset 304
    int        flag                  //    4 bytes, offset 308
    float      min_weight            //    4 bytes, offset 312
    int        layer_pass            //    4 bytes, offset 316
    short      axis                  //    2 bytes, offset 320
    short      space                 //    2 bytes, offset 322
    float      angle                 //    4 bytes, offset 324
struct LineartGpencilModifierData // 432 bytes [#219]
    GpencilModifierData modifier     //  104 bytes, offset 0
    ushort     line_types            //    2 bytes, offset 104
    char       source_type           //    1 bytes, offset 106
    char       use_multiple_levels   //    1 bytes, offset 107
    short      level_start           //    2 bytes, offset 108
    short      level_end             //    2 bytes, offset 110
    Object     *source_camera        //    8 bytes, offset 112
    Object     *light_contour_object //    8 bytes, offset 120
    Object     *source_object        //    8 bytes, offset 128
    Collection *source_collection    //    8 bytes, offset 136
    Material   *target_material      //    8 bytes, offset 144
    char       target_layer[64]      //   64 bytes, offset 152
    char       source_vertex_group[64] //   64 bytes, offset 216
    char       vgname[64]            //   64 bytes, offset 280
    float      overscan              //    4 bytes, offset 344
    float      shadow_camera_fov     //    4 bytes, offset 348
    float      shadow_camera_size    //    4 bytes, offset 352
    float      shadow_camera_near    //    4 bytes, offset 356
    float      shadow_camera_far     //    4 bytes, offset 360
    float      opacity               //    4 bytes, offset 364
    short      thickness             //    2 bytes, offset 368
    char       transparency_flags    //    1 bytes, offset 370
    char       transparency_mask     //    1 bytes, offset 371
    char       intersection_mask     //    1 bytes, offset 372
    char       shadow_selection      //    1 bytes, offset 373
    char       silhouette_selection  //    1 bytes, offset 374
    char       _pad[1]               //    1 bytes, offset 375
    float      crease_threshold      //    4 bytes, offset 376
    float      angle_splitting_threshold //    4 bytes, offset 380
    float      chain_smooth_tolerance //    4 bytes, offset 384
    float      chaining_image_threshold //    4 bytes, offset 388
    int        calculation_flags     //    4 bytes, offset 392
    int        flags                 //    4 bytes, offset 396
    float      stroke_depth_offset   //    4 bytes, offset 400
    char       level_start_override  //    1 bytes, offset 404
    char       level_end_override    //    1 bytes, offset 405
    short      edge_types_override   //    2 bytes, offset 406
    char       shadow_selection_override //    1 bytes, offset 408
    char       shadow_use_silhouette_override //    1 bytes, offset 409
    char       _pad2[6]              //    6 bytes, offset 410
    LineartCache *cache              //    8 bytes, offset 416
    LineartData *la_data_ptr         //    8 bytes, offset 424
struct ShrinkwrapGpencilModifierData // 304 bytes [#220]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Object     *target               //    8 bytes, offset 104
    Object     *aux_target           //    8 bytes, offset 112
    Material   *material             //    8 bytes, offset 120
    char       layername[64]         //   64 bytes, offset 128
    char       vgname[64]            //   64 bytes, offset 192
    int        pass_index            //    4 bytes, offset 256
    int        flag                  //    4 bytes, offset 260
    int        layer_pass            //    4 bytes, offset 264
    float      keep_dist             //    4 bytes, offset 268
    short      shrink_type           //    2 bytes, offset 272
    char       shrink_opts           //    1 bytes, offset 274
    char       shrink_mode           //    1 bytes, offset 275
    float      proj_limit            //    4 bytes, offset 276
    char       proj_axis             //    1 bytes, offset 280
    char       subsurf_levels        //    1 bytes, offset 281
    char       _pad[6]               //    6 bytes, offset 282
    float      smooth_factor         //    4 bytes, offset 288
    int        smooth_step           //    4 bytes, offset 292
    ShrinkwrapTreeData *cache_data   //    8 bytes, offset 296
struct EnvelopeGpencilModifierData // 280 bytes [#221]
    GpencilModifierData modifier     //  104 bytes, offset 0
    Material   *material             //    8 bytes, offset 104
    char       layername[64]         //   64 bytes, offset 112
    char       vgname[64]            //   64 bytes, offset 176
    int        pass_index            //    4 bytes, offset 240
    int        flag                  //    4 bytes, offset 244
    int        mode                  //    4 bytes, offset 248
    int        mat_nr                //    4 bytes, offset 252
    float      thickness             //    4 bytes, offset 256
    float      strength              //    4 bytes, offset 260
    int        skip                  //    4 bytes, offset 264
    int        layer_pass            //    4 bytes, offset 268
    int        spread                //    4 bytes, offset 272
    char       _pad[4]               //    4 bytes, offset 276
struct GPUDOFSettings // 32 bytes [#222]
    float      focus_distance        //    4 bytes, offset 0
    float      fstop                 //    4 bytes, offset 4
    float      focal_length          //    4 bytes, offset 8
    float      sensor                //    4 bytes, offset 12
    float      rotation              //    4 bytes, offset 16
    float      ratio                 //    4 bytes, offset 20
    int        num_blades            //    4 bytes, offset 24
    int        high_quality          //    4 bytes, offset 28
struct GreasePencilDrawingBase // 8 bytes [#223]
    int8_t     type                  //    1 bytes, offset 0
    char       _pad[3]               //    3 bytes, offset 1
    int        flag                  //    4 bytes, offset 4
struct GreasePencilDrawing // 560 bytes [#224]
    GreasePencilDrawingBase base     //    8 bytes, offset 0
    CurvesGeometry geometry          //  544 bytes, offset 8
    GreasePencilDrawingRuntimeHandle *runtime //    8 bytes, offset 552
struct GreasePencilDrawingReference // 16 bytes [#225]
    GreasePencilDrawingBase base     //    8 bytes, offset 0
    GreasePencil *id_reference       //    8 bytes, offset 8
struct GreasePencilFrame // 12 bytes [#226]
    int        drawing_index         //    4 bytes, offset 0
    int        flag                  //    4 bytes, offset 4
    int8_t     type                  //    1 bytes, offset 8
    char       _pad[3]               //    3 bytes, offset 9
struct GreasePencilLayerFramesMapStorage // 24 bytes [#227]
    int        *keys                 //    8 bytes, offset 0
    GreasePencilFrame *values        //    8 bytes, offset 8
    int        size                  //    4 bytes, offset 16
    int        flag                  //    4 bytes, offset 20
struct GreasePencilLayerMask // 32 bytes [#228]
    GreasePencilLayerMask *next      //    8 bytes, offset 0
    GreasePencilLayerMask *prev      //    8 bytes, offset 8
    char       *layer_name           //    8 bytes, offset 16
    ushort     flag                  //    2 bytes, offset 24
    char       _pad[6]               //    6 bytes, offset 26
struct GreasePencilLayerTreeNode // 56 bytes [#229]
    GreasePencilLayerTreeNode *next  //    8 bytes, offset 0
    GreasePencilLayerTreeNode *prev  //    8 bytes, offset 8
    GreasePencilLayerTreeGroup *parent //    8 bytes, offset 16
    char       *name                 //    8 bytes, offset 24
    int8_t     type                  //    1 bytes, offset 32
    char       _pad[7]               //    7 bytes, offset 33
    float      color[3]              //   12 bytes, offset 40
    int        flag                  //    4 bytes, offset 52
struct GreasePencilLayer // 248 bytes [#230]
    GreasePencilLayerTreeNode base   //   56 bytes, offset 0
    GreasePencilLayerFramesMapStorage frames_storage //   24 bytes, offset 56
    int8_t     blend_mode            //    1 bytes, offset 80
    char       _pad[3]               //    3 bytes, offset 81
    float      opacity               //    4 bytes, offset 84
    ListBase   masks                 //   16 bytes, offset 88
    int        active_mask_index     //    4 bytes, offset 104
    char       _pad2[4]              //    4 bytes, offset 108
    Object     *parent               //    8 bytes, offset 112
    char       *parsubstr            //    8 bytes, offset 120
    float      parentinv[4][4]       //   64 bytes, offset 128
    float      translation[3]        //   12 bytes, offset 192
    float      rotation[3]           //   12 bytes, offset 204
    float      scale[3]              //   12 bytes, offset 216
    char       _pad3[4]              //    4 bytes, offset 228
    char       *viewlayername        //    8 bytes, offset 232
    GreasePencilLayerRuntimeHandle *runtime //    8 bytes, offset 240
struct GreasePencilLayerTreeGroup // 88 bytes [#231]
    GreasePencilLayerTreeNode base   //   56 bytes, offset 0
    ListBase   children              //   16 bytes, offset 56
    int8_t     color_tag             //    1 bytes, offset 72
    char       _pad[7]               //    7 bytes, offset 73
    GreasePencilLayerGroupRuntimeHandle *runtime //    8 bytes, offset 80
struct GreasePencilOnionSkinningSettings // 40 bytes [#232]
    float      opacity               //    4 bytes, offset 0
    int8_t     mode                  //    1 bytes, offset 4
    uchar      flag                  //    1 bytes, offset 5
    uchar      filter                //    1 bytes, offset 6
    char       _pad[1]               //    1 bytes, offset 7
    short      num_frames_before     //    2 bytes, offset 8
    short      num_frames_after      //    2 bytes, offset 10
    float      color_before[3]       //   12 bytes, offset 12
    float      color_after[3]        //   12 bytes, offset 24
    char       _pad2[4]              //    4 bytes, offset 36
struct GreasePencil // 592 bytes, is ID [#233]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    GreasePencilDrawingBase **drawing_array //    8 bytes, offset 216
    int        drawing_array_size    //    4 bytes, offset 224
    char       _pad[4]               //    4 bytes, offset 228
    GreasePencilLayerTreeGroup *root_group_ptr //    8 bytes, offset 232
    CustomData layers_data           //  248 bytes, offset 240
    int        attributes_active_index //    4 bytes, offset 488
    char       _pad2[4]              //    4 bytes, offset 492
    GreasePencilLayerTreeNode *active_node //    8 bytes, offset 496
    Material   **material_array      //    8 bytes, offset 504
    short      material_array_size   //    2 bytes, offset 512
    char       _pad3[2]              //    2 bytes, offset 514
    int        flag                  //    4 bytes, offset 516
    ListBase   vertex_group_names    //   16 bytes, offset 520
    int        vertex_group_active_index //    4 bytes, offset 536
    char       _pad4[4]              //    4 bytes, offset 540
    GreasePencilOnionSkinningSettings onion_skinning_settings //   40 bytes, offset 544
    GreasePencilRuntimeHandle *runtime //    8 bytes, offset 584
struct ImageUser // 40 bytes [#234]
    Scene      *scene                //    8 bytes, offset 0
    int        framenr               //    4 bytes, offset 8
    int        frames                //    4 bytes, offset 12
    int        offset                //    4 bytes, offset 16
    int        sfra                  //    4 bytes, offset 20
    char       cycl                  //    1 bytes, offset 24
    char       multiview_eye         //    1 bytes, offset 25
    short      pass                  //    2 bytes, offset 26
    int        tile                  //    4 bytes, offset 28
    short      multi_index           //    2 bytes, offset 32
    short      view                  //    2 bytes, offset 34
    short      layer                 //    2 bytes, offset 36
    short      flag                  //    2 bytes, offset 38
struct ImageAnim // 24 bytes [#235]
    ImageAnim  *next                 //    8 bytes, offset 0
    ImageAnim  *prev                 //    8 bytes, offset 8
    MovieReader *anim                //    8 bytes, offset 16
struct ImageView // 1104 bytes [#236]
    ImageView  *next                 //    8 bytes, offset 0
    ImageView  *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       filepath[1024]        // 1024 bytes, offset 80
struct ImagePackedFile // 1056 bytes [#237]
    ImagePackedFile *next            //    8 bytes, offset 0
    ImagePackedFile *prev            //    8 bytes, offset 8
    PackedFile *packedfile           //    8 bytes, offset 16
    int        view                  //    4 bytes, offset 24
    int        tile_number           //    4 bytes, offset 28
    char       filepath[1024]        // 1024 bytes, offset 32
struct RenderSlot // 88 bytes [#238]
    RenderSlot *next                 //    8 bytes, offset 0
    RenderSlot *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    RenderResult *render             //    8 bytes, offset 80
struct ImageTile_Runtime // 24 bytes [#239]
    int        tilearray_layer       //    4 bytes, offset 0
    int        _pad                  //    4 bytes, offset 4
    int        tilearray_offset[2]   //    8 bytes, offset 8
    int        tilearray_size[2]     //    8 bytes, offset 16
struct ImageTile // 136 bytes [#240]
    ImageTile  *next                 //    8 bytes, offset 0
    ImageTile  *prev                 //    8 bytes, offset 8
    ImageTile_Runtime runtime        //   24 bytes, offset 16
    int        tile_number           //    4 bytes, offset 40
    int        gen_x                 //    4 bytes, offset 44
    int        gen_y                 //    4 bytes, offset 48
    char       gen_type              //    1 bytes, offset 52
    char       gen_flag              //    1 bytes, offset 53
    short      gen_depth             //    2 bytes, offset 54
    float      gen_color[4]          //   16 bytes, offset 56
    char       label[64]             //   64 bytes, offset 72
struct Image_Runtime // 32 bytes [#241]
    void       *cache_mutex          //    8 bytes, offset 0
    PartialUpdateRegister *partial_update_register //    8 bytes, offset 8
    PartialUpdateUser *partial_update_user //    8 bytes, offset 16
    float      backdrop_offset[2]    //    8 bytes, offset 24
struct Image // 1600 bytes, is ID [#242]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    char       name[1024]            // 1024 bytes, offset 232
    MovieCache *cache                //    8 bytes, offset 1256
    GPUTexture *gputexture[3][2]     //   48 bytes, offset 1264
    ListBase   anims                 //   16 bytes, offset 1312
    RenderResult *rr                 //    8 bytes, offset 1328
    ListBase   renderslots           //   16 bytes, offset 1336
    short      render_slot           //    2 bytes, offset 1352
    short      last_render_slot      //    2 bytes, offset 1354
    int        flag                  //    4 bytes, offset 1356
    short      source                //    2 bytes, offset 1360
    short      type                  //    2 bytes, offset 1362
    int        lastframe             //    4 bytes, offset 1364
    int        gpuframenr            //    4 bytes, offset 1368
    short      gpuflag               //    2 bytes, offset 1372
    short      gpu_pass              //    2 bytes, offset 1374
    short      gpu_layer             //    2 bytes, offset 1376
    short      gpu_view              //    2 bytes, offset 1378
    short      seam_margin           //    2 bytes, offset 1380
    char       _pad2[2]              //    2 bytes, offset 1382
    PackedFile *packedfile           //    8 bytes, offset 1384
    ListBase   packedfiles           //   16 bytes, offset 1392
    PreviewImage *preview            //    8 bytes, offset 1408
    int        lastused              //    4 bytes, offset 1416
    int        gen_x                 //    4 bytes, offset 1420
    int        gen_y                 //    4 bytes, offset 1424
    char       gen_type              //    1 bytes, offset 1428
    char       gen_flag              //    1 bytes, offset 1429
    short      gen_depth             //    2 bytes, offset 1430
    float      gen_color[4]          //   16 bytes, offset 1432
    float      aspx                  //    4 bytes, offset 1448
    float      aspy                  //    4 bytes, offset 1452
    ColorManagedColorspaceSettings colorspace_settings //   64 bytes, offset 1456
    char       alpha_mode            //    1 bytes, offset 1520
    char       _pad                  //    1 bytes, offset 1521
    char       eye                   //    1 bytes, offset 1522
    char       views_format          //    1 bytes, offset 1523
    int        active_tile_index     //    4 bytes, offset 1524
    ListBase   tiles                 //   16 bytes, offset 1528
    ListBase   views                 //   16 bytes, offset 1544
    Stereo3dFormat *stereo3d_format  //    8 bytes, offset 1560
    Image_Runtime runtime            //   32 bytes, offset 1568
struct IpoDriver // 144 bytes [#243]
    Object     *ob                   //    8 bytes, offset 0
    short      blocktype             //    2 bytes, offset 8
    short      adrcode               //    2 bytes, offset 10
    short      type                  //    2 bytes, offset 12
    short      flag                  //    2 bytes, offset 14
    char       name[128]             //  128 bytes, offset 16
struct IpoCurve // 112 bytes [#244]
    IpoCurve   *next                 //    8 bytes, offset 0
    IpoCurve   *prev                 //    8 bytes, offset 8
    BPoint     *bp                   //    8 bytes, offset 16
    BezTriple  *bezt                 //    8 bytes, offset 24
    rctf       maxrct                //   16 bytes, offset 32
    rctf       totrct                //   16 bytes, offset 48
    short      blocktype             //    2 bytes, offset 64
    short      adrcode               //    2 bytes, offset 66
    short      vartype               //    2 bytes, offset 68
    short      totvert               //    2 bytes, offset 70
    short      ipo                   //    2 bytes, offset 72
    short      extrap                //    2 bytes, offset 74
    short      flag                  //    2 bytes, offset 76
    char       _pad0[2]              //    2 bytes, offset 78
    float      ymin                  //    4 bytes, offset 80
    float      ymax                  //    4 bytes, offset 84
    int        bitmask               //    4 bytes, offset 88
    float      slide_min             //    4 bytes, offset 92
    float      slide_max             //    4 bytes, offset 96
    float      curval                //    4 bytes, offset 100
    IpoDriver  *driver               //    8 bytes, offset 104
struct Ipo // 248 bytes, is ID [#245]
    ID         id                    //  208 bytes, offset 0
    ListBase   curve                 //   16 bytes, offset 208
    rctf       cur                   //   16 bytes, offset 224
    short      blocktype             //    2 bytes, offset 240
    short      showkey               //    2 bytes, offset 242
    short      muteipo               //    2 bytes, offset 244
    char       _pad[2]               //    2 bytes, offset 246
struct KeyBlock // 184 bytes [#246]
    KeyBlock   *next                 //    8 bytes, offset 0
    KeyBlock   *prev                 //    8 bytes, offset 8
    float      pos                   //    4 bytes, offset 16
    float      curval                //    4 bytes, offset 20
    short      type                  //    2 bytes, offset 24
    char       _pad1[2]              //    2 bytes, offset 26
    short      relative              //    2 bytes, offset 28
    short      flag                  //    2 bytes, offset 30
    int        totelem               //    4 bytes, offset 32
    int        uid                   //    4 bytes, offset 36
    void       *data                 //    8 bytes, offset 40
    char       name[64]              //   64 bytes, offset 48
    char       vgroup[64]            //   64 bytes, offset 112
    float      slidermin             //    4 bytes, offset 176
    float      slidermax             //    4 bytes, offset 180
struct Key // 312 bytes, is ID [#247]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    KeyBlock   *refkey               //    8 bytes, offset 216
    char       elemstr[32]           //   32 bytes, offset 224
    int        elemsize              //    4 bytes, offset 256
    char       _pad[4]               //    4 bytes, offset 260
    ListBase   block                 //   16 bytes, offset 264
    Ipo        *ipo                  //    8 bytes, offset 280
    ID         *from                 //    8 bytes, offset 288
    int        totkey                //    4 bytes, offset 296
    short      flag                  //    2 bytes, offset 300
    char       type                  //    1 bytes, offset 302
    char       _pad2                 //    1 bytes, offset 303
    float      ctime                 //    4 bytes, offset 304
    int        uidgen                //    4 bytes, offset 308
struct Lattice // 400 bytes, is ID [#248]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    short      pntsu                 //    2 bytes, offset 216
    short      pntsv                 //    2 bytes, offset 218
    short      pntsw                 //    2 bytes, offset 220
    short      flag                  //    2 bytes, offset 222
    short      opntsu                //    2 bytes, offset 224
    short      opntsv                //    2 bytes, offset 226
    short      opntsw                //    2 bytes, offset 228
    char       _pad2[3]              //    3 bytes, offset 230
    char       typeu                 //    1 bytes, offset 233
    char       typev                 //    1 bytes, offset 234
    char       typew                 //    1 bytes, offset 235
    int        actbp                 //    4 bytes, offset 236
    float      fu                    //    4 bytes, offset 240
    float      fv                    //    4 bytes, offset 244
    float      fw                    //    4 bytes, offset 248
    float      du                    //    4 bytes, offset 252
    float      dv                    //    4 bytes, offset 256
    float      dw                    //    4 bytes, offset 260
    BPoint     *def                  //    8 bytes, offset 264
    Ipo        *ipo                  //    8 bytes, offset 272
    Key        *key                  //    8 bytes, offset 280
    MDeformVert *dvert               //    8 bytes, offset 288
    char       vgroup[64]            //   64 bytes, offset 296
    ListBase   vertex_group_names    //   16 bytes, offset 360
    int        vertex_group_active_index //    4 bytes, offset 376
    char       _pad0[4]              //    4 bytes, offset 380
    EditLatt   *editlatt             //    8 bytes, offset 384
    void       *batch_cache          //    8 bytes, offset 392
struct Base // 48 bytes [#249]
    Base       *next                 //    8 bytes, offset 0
    Base       *prev                 //    8 bytes, offset 8
    Object     *object               //    8 bytes, offset 16
    Base       *base_orig            //    8 bytes, offset 24
    int        lay                   //    4 bytes, offset 32
    short      flag                  //    2 bytes, offset 36
    short      flag_from_collection  //    2 bytes, offset 38
    short      flag_legacy           //    2 bytes, offset 40
    short      local_view_bits       //    2 bytes, offset 42
    short      local_collections_bits //    2 bytes, offset 44
    char       _pad1[2]              //    2 bytes, offset 46
struct ViewLayerEngineData // 40 bytes [#250]
    ViewLayerEngineData *next        //    8 bytes, offset 0
    ViewLayerEngineData *prev        //    8 bytes, offset 8
    DrawEngineType *engine_type      //    8 bytes, offset 16
    void       *storage              //    8 bytes, offset 24
    void       (*free)()             //    8 bytes, offset 32
struct LayerCollection // 64 bytes [#251]
    LayerCollection *next            //    8 bytes, offset 0
    LayerCollection *prev            //    8 bytes, offset 8
    Collection *collection           //    8 bytes, offset 16
    void       *_pad1                //    8 bytes, offset 24
    short      flag                  //    2 bytes, offset 32
    short      runtime_flag          //    2 bytes, offset 34
    char       _pad[4]               //    4 bytes, offset 36
    ListBase   layer_collections     //   16 bytes, offset 40
    short      local_collections_bits //    2 bytes, offset 56
    short      _pad2[3]              //    6 bytes, offset 58
struct ViewLayerEEVEE // 8 bytes [#252]
    int        render_passes         //    4 bytes, offset 0
    int        _pad[1]               //    4 bytes, offset 4
struct ViewLayerAOV // 88 bytes [#253]
    ViewLayerAOV *next               //    8 bytes, offset 0
    ViewLayerAOV *prev               //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    int        flag                  //    4 bytes, offset 80
    int        type                  //    4 bytes, offset 84
struct ViewLayerLightgroup // 80 bytes [#254]
    ViewLayerLightgroup *next        //    8 bytes, offset 0
    ViewLayerLightgroup *prev        //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
struct LightgroupMembership // 64 bytes [#255]
    char       name[64]              //   64 bytes, offset 0
struct ViewLayer // 336 bytes [#256]
    ViewLayer  *next                 //    8 bytes, offset 0
    ViewLayer  *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    short      flag                  //    2 bytes, offset 80
    char       _pad[6]               //    6 bytes, offset 82
    ListBase   object_bases          //   16 bytes, offset 88
    SceneStats *stats                //    8 bytes, offset 104
    Base       *basact               //    8 bytes, offset 112
    ListBase   layer_collections     //   16 bytes, offset 120
    LayerCollection *active_collection //    8 bytes, offset 136
    int        layflag               //    4 bytes, offset 144
    int        passflag              //    4 bytes, offset 148
    float      pass_alpha_threshold  //    4 bytes, offset 152
    short      cryptomatte_flag      //    2 bytes, offset 156
    short      cryptomatte_levels    //    2 bytes, offset 158
    char       _pad1[4]              //    4 bytes, offset 160
    int        samples               //    4 bytes, offset 164
    Material   *mat_override         //    8 bytes, offset 168
    World      *world_override       //    8 bytes, offset 176
    IDProperty *id_properties        //    8 bytes, offset 184
    FreestyleConfig freestyle_config //   56 bytes, offset 192
    ViewLayerEEVEE eevee             //    8 bytes, offset 248
    ListBase   aovs                  //   16 bytes, offset 256
    ViewLayerAOV *active_aov         //    8 bytes, offset 272
    ListBase   lightgroups           //   16 bytes, offset 280
    ViewLayerLightgroup *active_lightgroup //    8 bytes, offset 296
    ListBase   drawdata              //   16 bytes, offset 304
    Base       **object_bases_array  //    8 bytes, offset 320
    GHash      *object_bases_hash    //    8 bytes, offset 328
struct Lamp // 368 bytes, is ID [#257]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    short      type                  //    2 bytes, offset 216
    short      flag                  //    2 bytes, offset 218
    int        mode                  //    4 bytes, offset 220
    float      r                     //    4 bytes, offset 224
    float      g                     //    4 bytes, offset 228
    float      b                     //    4 bytes, offset 232
    float      energy_new            //    4 bytes, offset 236
    float      radius                //    4 bytes, offset 240
    float      spotsize              //    4 bytes, offset 244
    float      spotblend             //    4 bytes, offset 248
    short      area_shape            //    2 bytes, offset 252
    short      _pad1                 //    2 bytes, offset 254
    float      area_size             //    4 bytes, offset 256
    float      area_sizey            //    4 bytes, offset 260
    float      area_sizez            //    4 bytes, offset 264
    float      area_spread           //    4 bytes, offset 268
    float      sun_angle             //    4 bytes, offset 272
    short      pr_texture            //    2 bytes, offset 276
    short      use_nodes             //    2 bytes, offset 278
    float      clipsta               //    4 bytes, offset 280
    float      clipend               //    4 bytes, offset 284
    float      cascade_max_dist      //    4 bytes, offset 288
    float      cascade_exponent      //    4 bytes, offset 292
    float      cascade_fade          //    4 bytes, offset 296
    int        cascade_count         //    4 bytes, offset 300
    float      diff_fac              //    4 bytes, offset 304
    float      spec_fac              //    4 bytes, offset 308
    float      transmission_fac      //    4 bytes, offset 312
    float      volume_fac            //    4 bytes, offset 316
    float      att_dist              //    4 bytes, offset 320
    float      shadow_filter_radius  //    4 bytes, offset 324
    float      shadow_maximum_resolution //    4 bytes, offset 328
    float      shadow_jitter_overblur //    4 bytes, offset 332
    PreviewImage *preview            //    8 bytes, offset 336
    bNodeTree  *nodetree             //    8 bytes, offset 344
    Ipo        *ipo                  //    8 bytes, offset 352
    float      energy                //    4 bytes, offset 360
    float      _pad2                 //    4 bytes, offset 364
struct LightProbe // 336 bytes, is ID [#258]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    char       type                  //    1 bytes, offset 216
    char       flag                  //    1 bytes, offset 217
    char       attenuation_type      //    1 bytes, offset 218
    char       parallax_type         //    1 bytes, offset 219
    char       grid_flag             //    1 bytes, offset 220
    char       _pad0[3]              //    3 bytes, offset 221
    float      distinf               //    4 bytes, offset 224
    float      distpar               //    4 bytes, offset 228
    float      falloff               //    4 bytes, offset 232
    float      clipsta               //    4 bytes, offset 236
    float      clipend               //    4 bytes, offset 240
    float      vis_bias              //    4 bytes, offset 244
    float      vis_bleedbias         //    4 bytes, offset 248
    float      vis_blur              //    4 bytes, offset 252
    float      intensity             //    4 bytes, offset 256
    int        grid_resolution_x     //    4 bytes, offset 260
    int        grid_resolution_y     //    4 bytes, offset 264
    int        grid_resolution_z     //    4 bytes, offset 268
    int        grid_bake_samples     //    4 bytes, offset 272
    float      grid_surface_bias     //    4 bytes, offset 276
    float      grid_escape_bias      //    4 bytes, offset 280
    float      grid_normal_bias      //    4 bytes, offset 284
    float      grid_view_bias        //    4 bytes, offset 288
    float      grid_facing_bias      //    4 bytes, offset 292
    float      grid_validity_threshold //    4 bytes, offset 296
    float      grid_dilation_threshold //    4 bytes, offset 300
    float      grid_dilation_radius  //    4 bytes, offset 304
    float      grid_clamp_direct     //    4 bytes, offset 308
    float      grid_clamp_indirect   //    4 bytes, offset 312
    int        grid_surfel_density   //    4 bytes, offset 316
    Collection *visibility_grp       //    8 bytes, offset 320
    float      data_display_size     //    4 bytes, offset 328
    char       _pad1[4]              //    4 bytes, offset 332
struct LightProbeCache // 160 bytes [#259]
    float      position[3]           //   12 bytes, offset 0
    float      parallax_type         //    4 bytes, offset 12
    float      attenuation_fac       //    4 bytes, offset 16
    float      attenuation_type      //    4 bytes, offset 20
    float      _pad3[2]              //    8 bytes, offset 24
    float      attenuationmat[4][4]  //   64 bytes, offset 32
    float      parallaxmat[4][4]     //   64 bytes, offset 96
struct LightGridCache // 160 bytes [#260]
    float      mat[4][4]             //   64 bytes, offset 0
    int        resolution[3]         //   12 bytes, offset 64
    int        offset                //    4 bytes, offset 76
    float      corner[3]             //   12 bytes, offset 80
    float      attenuation_scale     //    4 bytes, offset 92
    float      increment_x[3]        //   12 bytes, offset 96
    float      attenuation_bias      //    4 bytes, offset 108
    float      increment_y[3]        //   12 bytes, offset 112
    float      level_bias            //    4 bytes, offset 124
    float      increment_z[3]        //   12 bytes, offset 128
    float      _pad4                 //    4 bytes, offset 140
    float      visibility_bias       //    4 bytes, offset 144
    float      visibility_bleed      //    4 bytes, offset 148
    float      visibility_range      //    4 bytes, offset 152
    float      _pad5                 //    4 bytes, offset 156
struct LightCacheTexture // 32 bytes [#261]
    GPUTexture *tex                  //    8 bytes, offset 0
    char       *data                 //    8 bytes, offset 8
    int        tex_size[3]           //   12 bytes, offset 16
    char       data_type             //    1 bytes, offset 28
    char       components            //    1 bytes, offset 29
    char       _pad[2]               //    2 bytes, offset 30
struct LightCache // 128 bytes [#262]
    int        flag                  //    4 bytes, offset 0
    int        version               //    4 bytes, offset 4
    int        type                  //    4 bytes, offset 8
    int        cube_len              //    4 bytes, offset 12
    int        grid_len              //    4 bytes, offset 16
    int        mips_len              //    4 bytes, offset 20
    int        vis_res               //    4 bytes, offset 24
    int        ref_res               //    4 bytes, offset 28
    char       _pad[4][2]            //    8 bytes, offset 32
    LightCacheTexture grid_tx        //   32 bytes, offset 40
    LightCacheTexture cube_tx        //   32 bytes, offset 72
    LightCacheTexture *cube_mips     //    8 bytes, offset 104
    LightProbeCache *cube_data       //    8 bytes, offset 112
    LightGridCache *grid_data        //    8 bytes, offset 120
struct LightProbeBakingData // 48 bytes [#263]
    float      (*L0)()               //    8 bytes, offset 0
    float      (*L1_a)()             //    8 bytes, offset 8
    float      (*L1_b)()             //    8 bytes, offset 16
    float      (*L1_c)()             //    8 bytes, offset 24
    float      *validity             //    8 bytes, offset 32
    float      (*virtual_offset)()   //    8 bytes, offset 40
struct LightProbeIrradianceData // 32 bytes [#264]
    float      (*L0)()               //    8 bytes, offset 0
    float      (*L1_a)()             //    8 bytes, offset 8
    float      (*L1_b)()             //    8 bytes, offset 16
    float      (*L1_c)()             //    8 bytes, offset 24
struct LightProbeVisibilityData // 32 bytes [#265]
    float      *L0                   //    8 bytes, offset 0
    float      *L1_a                 //    8 bytes, offset 8
    float      *L1_b                 //    8 bytes, offset 16
    float      *L1_c                 //    8 bytes, offset 24
struct LightProbeConnectivityData // 8 bytes [#266]
    uchar      *validity             //    8 bytes, offset 0
struct LightProbeBlockData // 16 bytes [#267]
    int        offset[3]             //   12 bytes, offset 0
    int        level                 //    4 bytes, offset 12
struct LightProbeGridCacheFrame // 168 bytes [#268]
    int        size[3]               //   12 bytes, offset 0
    int        data_layout           //    4 bytes, offset 12
    int        block_len             //    4 bytes, offset 16
    int        block_size            //    4 bytes, offset 20
    LightProbeBlockData *block_infos //    8 bytes, offset 24
    LightProbeBakingData baking      //   48 bytes, offset 32
    LightProbeIrradianceData irradiance //   32 bytes, offset 80
    LightProbeVisibilityData visibility //   32 bytes, offset 112
    LightProbeConnectivityData connectivity //    8 bytes, offset 144
    char       _pad[4]               //    4 bytes, offset 152
    int        surfels_len           //    4 bytes, offset 156
    void       *surfels              //    8 bytes, offset 160
struct LightProbeObjectCache // 16 bytes [#269]
    int        cache_type            //    4 bytes, offset 0
    char       shared                //    1 bytes, offset 4
    char       dirty                 //    1 bytes, offset 5
    char       _pad0[2]              //    2 bytes, offset 6
    LightProbeGridCacheFrame *grid_static_cache //    8 bytes, offset 8
struct LineStyleModifier // 96 bytes [#270]
    LineStyleModifier *next          //    8 bytes, offset 0
    LineStyleModifier *prev          //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    int        type                  //    4 bytes, offset 80
    float      influence             //    4 bytes, offset 84
    int        flags                 //    4 bytes, offset 88
    int        blend                 //    4 bytes, offset 92
struct LineStyleColorModifier_AlongStroke // 104 bytes [#271]
    LineStyleModifier modifier       //   96 bytes, offset 0
    ColorBand  *color_ramp           //    8 bytes, offset 96
struct LineStyleAlphaModifier_AlongStroke // 112 bytes [#272]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 108
struct LineStyleThicknessModifier_AlongStroke // 120 bytes [#273]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      value_min             //    4 bytes, offset 108
    float      value_max             //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct LineStyleColorModifier_DistanceFromCamera // 112 bytes [#274]
    LineStyleModifier modifier       //   96 bytes, offset 0
    ColorBand  *color_ramp           //    8 bytes, offset 96
    float      range_min             //    4 bytes, offset 104
    float      range_max             //    4 bytes, offset 108
struct LineStyleAlphaModifier_DistanceFromCamera // 120 bytes [#275]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      range_min             //    4 bytes, offset 108
    float      range_max             //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct LineStyleThicknessModifier_DistanceFromCamera // 128 bytes [#276]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      range_min             //    4 bytes, offset 108
    float      range_max             //    4 bytes, offset 112
    float      value_min             //    4 bytes, offset 116
    float      value_max             //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
struct LineStyleColorModifier_DistanceFromObject // 120 bytes [#277]
    LineStyleModifier modifier       //   96 bytes, offset 0
    Object     *target               //    8 bytes, offset 96
    ColorBand  *color_ramp           //    8 bytes, offset 104
    float      range_min             //    4 bytes, offset 112
    float      range_max             //    4 bytes, offset 116
struct LineStyleAlphaModifier_DistanceFromObject // 128 bytes [#278]
    LineStyleModifier modifier       //   96 bytes, offset 0
    Object     *target               //    8 bytes, offset 96
    CurveMapping *curve              //    8 bytes, offset 104
    int        flags                 //    4 bytes, offset 112
    float      range_min             //    4 bytes, offset 116
    float      range_max             //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
struct LineStyleThicknessModifier_DistanceFromObject // 136 bytes [#279]
    LineStyleModifier modifier       //   96 bytes, offset 0
    Object     *target               //    8 bytes, offset 96
    CurveMapping *curve              //    8 bytes, offset 104
    int        flags                 //    4 bytes, offset 112
    float      range_min             //    4 bytes, offset 116
    float      range_max             //    4 bytes, offset 120
    float      value_min             //    4 bytes, offset 124
    float      value_max             //    4 bytes, offset 128
    char       _pad[4]               //    4 bytes, offset 132
struct LineStyleColorModifier_Curvature_3D // 120 bytes [#280]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      min_curvature         //    4 bytes, offset 96
    float      max_curvature         //    4 bytes, offset 100
    ColorBand  *color_ramp           //    8 bytes, offset 104
    float      range_min             //    4 bytes, offset 112
    float      range_max             //    4 bytes, offset 116
struct LineStyleAlphaModifier_Curvature_3D // 120 bytes [#281]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      min_curvature         //    4 bytes, offset 108
    float      max_curvature         //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct LineStyleThicknessModifier_Curvature_3D // 128 bytes [#282]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 108
    float      min_curvature         //    4 bytes, offset 112
    float      max_curvature         //    4 bytes, offset 116
    float      min_thickness         //    4 bytes, offset 120
    float      max_thickness         //    4 bytes, offset 124
struct LineStyleColorModifier_Noise // 120 bytes [#283]
    LineStyleModifier modifier       //   96 bytes, offset 0
    ColorBand  *color_ramp           //    8 bytes, offset 96
    float      period                //    4 bytes, offset 104
    float      amplitude             //    4 bytes, offset 108
    int        seed                  //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct LineStyleAlphaModifier_Noise // 120 bytes [#284]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      period                //    4 bytes, offset 108
    float      amplitude             //    4 bytes, offset 112
    int        seed                  //    4 bytes, offset 116
struct LineStyleThicknessModifier_Noise // 112 bytes [#285]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      period                //    4 bytes, offset 96
    float      amplitude             //    4 bytes, offset 100
    int        flags                 //    4 bytes, offset 104
    int        seed                  //    4 bytes, offset 108
struct LineStyleColorModifier_CreaseAngle // 112 bytes [#286]
    LineStyleModifier modifier       //   96 bytes, offset 0
    ColorBand  *color_ramp           //    8 bytes, offset 96
    float      min_angle             //    4 bytes, offset 104
    float      max_angle             //    4 bytes, offset 108
struct LineStyleAlphaModifier_CreaseAngle // 120 bytes [#287]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      min_angle             //    4 bytes, offset 108
    float      max_angle             //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct LineStyleThicknessModifier_CreaseAngle // 128 bytes [#288]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 108
    float      min_angle             //    4 bytes, offset 112
    float      max_angle             //    4 bytes, offset 116
    float      min_thickness         //    4 bytes, offset 120
    float      max_thickness         //    4 bytes, offset 124
struct LineStyleColorModifier_Tangent // 104 bytes [#289]
    LineStyleModifier modifier       //   96 bytes, offset 0
    ColorBand  *color_ramp           //    8 bytes, offset 96
struct LineStyleAlphaModifier_Tangent // 112 bytes [#290]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 108
struct LineStyleThicknessModifier_Tangent // 120 bytes [#291]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      min_thickness         //    4 bytes, offset 108
    float      max_thickness         //    4 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 116
struct LineStyleColorModifier_Material // 112 bytes [#292]
    LineStyleModifier modifier       //   96 bytes, offset 0
    ColorBand  *color_ramp           //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    int        mat_attr              //    4 bytes, offset 108
struct LineStyleAlphaModifier_Material // 112 bytes [#293]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    int        mat_attr              //    4 bytes, offset 108
struct LineStyleThicknessModifier_Material // 120 bytes [#294]
    LineStyleModifier modifier       //   96 bytes, offset 0
    CurveMapping *curve              //    8 bytes, offset 96
    int        flags                 //    4 bytes, offset 104
    float      value_min             //    4 bytes, offset 108
    float      value_max             //    4 bytes, offset 112
    int        mat_attr              //    4 bytes, offset 116
struct LineStyleGeometryModifier_Sampling // 104 bytes [#295]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      sampling              //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleGeometryModifier_BezierCurve // 104 bytes [#296]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      error                 //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleGeometryModifier_SinusDisplacement // 112 bytes [#297]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      wavelength            //    4 bytes, offset 96
    float      amplitude             //    4 bytes, offset 100
    float      phase                 //    4 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 108
struct LineStyleGeometryModifier_SpatialNoise // 112 bytes [#298]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      amplitude             //    4 bytes, offset 96
    float      scale                 //    4 bytes, offset 100
    int        octaves               //    4 bytes, offset 104
    int        flags                 //    4 bytes, offset 108
struct LineStyleGeometryModifier_PerlinNoise1D // 120 bytes [#299]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      frequency             //    4 bytes, offset 96
    float      amplitude             //    4 bytes, offset 100
    float      angle                 //    4 bytes, offset 104
    int        octaves               //    4 bytes, offset 108
    int        seed                  //    4 bytes, offset 112
    char       _pad1[4]              //    4 bytes, offset 116
struct LineStyleGeometryModifier_PerlinNoise2D // 120 bytes [#300]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      frequency             //    4 bytes, offset 96
    float      amplitude             //    4 bytes, offset 100
    float      angle                 //    4 bytes, offset 104
    int        octaves               //    4 bytes, offset 108
    int        seed                  //    4 bytes, offset 112
    char       _pad1[4]              //    4 bytes, offset 116
struct LineStyleGeometryModifier_BackboneStretcher // 104 bytes [#301]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      backbone_length       //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleGeometryModifier_TipRemover // 104 bytes [#302]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      tip_length            //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleGeometryModifier_Polygonalization // 104 bytes [#303]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      error                 //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleGeometryModifier_GuidingLines // 104 bytes [#304]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      offset                //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleGeometryModifier_Blueprint // 120 bytes [#305]
    LineStyleModifier modifier       //   96 bytes, offset 0
    int        flags                 //    4 bytes, offset 96
    int        rounds                //    4 bytes, offset 100
    float      backbone_length       //    4 bytes, offset 104
    int        random_radius         //    4 bytes, offset 108
    int        random_center         //    4 bytes, offset 112
    int        random_backbone       //    4 bytes, offset 116
struct LineStyleGeometryModifier_2DOffset // 112 bytes [#306]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      start                 //    4 bytes, offset 96
    float      end                   //    4 bytes, offset 100
    float      x                     //    4 bytes, offset 104
    float      y                     //    4 bytes, offset 108
struct LineStyleGeometryModifier_2DTransform // 128 bytes [#307]
    LineStyleModifier modifier       //   96 bytes, offset 0
    int        pivot                 //    4 bytes, offset 96
    float      scale_x               //    4 bytes, offset 100
    float      scale_y               //    4 bytes, offset 104
    float      angle                 //    4 bytes, offset 108
    float      pivot_u               //    4 bytes, offset 112
    float      pivot_x               //    4 bytes, offset 116
    float      pivot_y               //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
struct LineStyleGeometryModifier_Simplification // 104 bytes [#308]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      tolerance             //    4 bytes, offset 96
    char       _pad[4]               //    4 bytes, offset 100
struct LineStyleThicknessModifier_Calligraphy // 112 bytes [#309]
    LineStyleModifier modifier       //   96 bytes, offset 0
    float      min_thickness         //    4 bytes, offset 96
    float      max_thickness         //    4 bytes, offset 100
    float      orientation           //    4 bytes, offset 104
    char       _pad[4]               //    4 bytes, offset 108
struct FreestyleLineStyle // 552 bytes, is ID [#310]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    float      r                     //    4 bytes, offset 216
    float      g                     //    4 bytes, offset 220
    float      b                     //    4 bytes, offset 224
    float      alpha                 //    4 bytes, offset 228
    float      thickness             //    4 bytes, offset 232
    int        thickness_position    //    4 bytes, offset 236
    float      thickness_ratio       //    4 bytes, offset 240
    int        flag                  //    4 bytes, offset 244
    int        caps                  //    4 bytes, offset 248
    int        chaining              //    4 bytes, offset 252
    int        rounds                //    4 bytes, offset 256
    float      split_length          //    4 bytes, offset 260
    float      min_angle             //    4 bytes, offset 264
    float      max_angle             //    4 bytes, offset 268
    float      min_length            //    4 bytes, offset 272
    float      max_length            //    4 bytes, offset 276
    int        chain_count           //    4 bytes, offset 280
    short      split_dash1           //    2 bytes, offset 284
    short      split_gap1            //    2 bytes, offset 286
    short      split_dash2           //    2 bytes, offset 288
    short      split_gap2            //    2 bytes, offset 290
    short      split_dash3           //    2 bytes, offset 292
    short      split_gap3            //    2 bytes, offset 294
    int        sort_key              //    4 bytes, offset 296
    int        integration_type      //    4 bytes, offset 300
    float      texstep               //    4 bytes, offset 304
    short      texact                //    2 bytes, offset 308
    short      pr_texture            //    2 bytes, offset 310
    short      use_nodes             //    2 bytes, offset 312
    char       _pad[6]               //    6 bytes, offset 314
    short      dash1                 //    2 bytes, offset 320
    short      gap1                  //    2 bytes, offset 322
    short      dash2                 //    2 bytes, offset 324
    short      gap2                  //    2 bytes, offset 326
    short      dash3                 //    2 bytes, offset 328
    short      gap3                  //    2 bytes, offset 330
    int        panel                 //    4 bytes, offset 332
    MTex       *mtex[18]             //  144 bytes, offset 336
    bNodeTree  *nodetree             //    8 bytes, offset 480
    ListBase   color_modifiers       //   16 bytes, offset 488
    ListBase   alpha_modifiers       //   16 bytes, offset 504
    ListBase   thickness_modifiers   //   16 bytes, offset 520
    ListBase   geometry_modifiers    //   16 bytes, offset 536
struct Link // 16 bytes [#311]
    Link       *next                 //    8 bytes, offset 0
    Link       *prev                 //    8 bytes, offset 8
struct LinkData // 24 bytes [#312]
    LinkData   *next                 //    8 bytes, offset 0
    LinkData   *prev                 //    8 bytes, offset 8
    void       *data                 //    8 bytes, offset 16
struct ListBase // 16 bytes [#313]
    void       *first                //    8 bytes, offset 0
    void       *last                 //    8 bytes, offset 8
struct Mask // 272 bytes, is ID [#314]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    ListBase   masklayers            //   16 bytes, offset 232
    int        masklay_act           //    4 bytes, offset 248
    int        masklay_tot           //    4 bytes, offset 252
    int        sfra                  //    4 bytes, offset 256
    int        efra                  //    4 bytes, offset 260
    int        flag                  //    4 bytes, offset 264
    char       _pad[4]               //    4 bytes, offset 268
struct MaskParent // 184 bytes [#315]
    int        id_type               //    4 bytes, offset 0
    int        type                  //    4 bytes, offset 4
    ID         *id                   //    8 bytes, offset 8
    char       parent[64]            //   64 bytes, offset 16
    char       sub_parent[64]        //   64 bytes, offset 80
    float      parent_orig[2]        //    8 bytes, offset 144
    float      parent_corners_orig[4][2] //   32 bytes, offset 152
struct MaskSplinePointUW // 12 bytes [#316]
    float      u                     //    4 bytes, offset 0
    float      w                     //    4 bytes, offset 4
    int        flag                  //    4 bytes, offset 8
struct MaskSplinePoint // 272 bytes [#317]
    BezTriple  bezt                  //   72 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 72
    int        tot_uw                //    4 bytes, offset 76
    MaskSplinePointUW *uw            //    8 bytes, offset 80
    MaskParent parent                //  184 bytes, offset 88
struct MaskSpline // 224 bytes [#318]
    MaskSpline *next                 //    8 bytes, offset 0
    MaskSpline *prev                 //    8 bytes, offset 8
    short      flag                  //    2 bytes, offset 16
    char       offset_mode           //    1 bytes, offset 18
    char       weight_interp         //    1 bytes, offset 19
    int        tot_point             //    4 bytes, offset 20
    MaskSplinePoint *points          //    8 bytes, offset 24
    MaskParent parent                //  184 bytes, offset 32
    MaskSplinePoint *points_deform   //    8 bytes, offset 216
struct MaskLayerShape // 40 bytes [#319]
    MaskLayerShape *next             //    8 bytes, offset 0
    MaskLayerShape *prev             //    8 bytes, offset 8
    float      *data                 //    8 bytes, offset 16
    int        tot_vert              //    4 bytes, offset 24
    int        frame                 //    4 bytes, offset 28
    char       flag                  //    1 bytes, offset 32
    char       _pad[7]               //    7 bytes, offset 33
struct MaskLayer // 144 bytes [#320]
    MaskLayer  *next                 //    8 bytes, offset 0
    MaskLayer  *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    ListBase   splines               //   16 bytes, offset 80
    ListBase   splines_shapes        //   16 bytes, offset 96
    MaskSpline *act_spline           //    8 bytes, offset 112
    MaskSplinePoint *act_point       //    8 bytes, offset 120
    float      alpha                 //    4 bytes, offset 128
    char       blend                 //    1 bytes, offset 132
    char       blend_flag            //    1 bytes, offset 133
    char       falloff               //    1 bytes, offset 134
    char       _pad[7]               //    7 bytes, offset 135
    char       flag                  //    1 bytes, offset 142
    char       restrictflag          //    1 bytes, offset 143
struct TexPaintSlot // 40 bytes [#321]
    Image      *ima                  //    8 bytes, offset 0
    ImageUser  *image_user           //    8 bytes, offset 8
    char       *uvname               //    8 bytes, offset 16
    char       *attribute_name       //    8 bytes, offset 24
    int        valid                 //    4 bytes, offset 32
    int        interp                //    4 bytes, offset 36
struct MaterialGPencilStyle // 152 bytes [#322]
    Image      *sima                 //    8 bytes, offset 0
    Image      *ima                  //    8 bytes, offset 8
    float      stroke_rgba[4]        //   16 bytes, offset 16
    float      fill_rgba[4]          //   16 bytes, offset 32
    float      mix_rgba[4]           //   16 bytes, offset 48
    short      flag                  //    2 bytes, offset 64
    short      index                 //    2 bytes, offset 66
    short      stroke_style          //    2 bytes, offset 68
    short      fill_style            //    2 bytes, offset 70
    float      mix_factor            //    4 bytes, offset 72
    float      gradient_angle        //    4 bytes, offset 76
    float      gradient_radius       //    4 bytes, offset 80
    char       _pad2[4]              //    4 bytes, offset 84
    float      gradient_scale[2]     //    8 bytes, offset 88
    float      gradient_shift[2]     //    8 bytes, offset 96
    float      texture_angle         //    4 bytes, offset 104
    float      texture_scale[2]      //    8 bytes, offset 108
    float      texture_offset[2]     //    8 bytes, offset 116
    float      texture_opacity       //    4 bytes, offset 124
    float      texture_pixsize       //    4 bytes, offset 128
    int        mode                  //    4 bytes, offset 132
    int        gradient_type         //    4 bytes, offset 136
    float      mix_stroke_factor     //    4 bytes, offset 140
    int        alignment_mode        //    4 bytes, offset 144
    float      alignment_rotation    //    4 bytes, offset 148
struct MaterialLineArt // 8 bytes [#323]
    int        flags                 //    4 bytes, offset 0
    char       transparency_mask     //    1 bytes, offset 4
    char       mat_occlusion         //    1 bytes, offset 5
    char       intersection_priority //    1 bytes, offset 6
    char       _pad                  //    1 bytes, offset 7
struct Material // 392 bytes, is ID [#324]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    short      flag                  //    2 bytes, offset 216
    char       surface_render_method //    1 bytes, offset 218
    char       _pad1[1]              //    1 bytes, offset 219
    float      r                     //    4 bytes, offset 220
    float      g                     //    4 bytes, offset 224
    float      b                     //    4 bytes, offset 228
    float      a                     //    4 bytes, offset 232
    float      specr                 //    4 bytes, offset 236
    float      specg                 //    4 bytes, offset 240
    float      specb                 //    4 bytes, offset 244
    float      alpha                 //    4 bytes, offset 248
    float      ray_mirror            //    4 bytes, offset 252
    float      spec                  //    4 bytes, offset 256
    float      gloss_mir             //    4 bytes, offset 260
    float      roughness             //    4 bytes, offset 264
    float      metallic              //    4 bytes, offset 268
    char       use_nodes             //    1 bytes, offset 272
    char       pr_type               //    1 bytes, offset 273
    short      pr_texture            //    2 bytes, offset 274
    short      pr_flag               //    2 bytes, offset 276
    short      index                 //    2 bytes, offset 278
    bNodeTree  *nodetree             //    8 bytes, offset 280
    Ipo        *ipo                  //    8 bytes, offset 288
    PreviewImage *preview            //    8 bytes, offset 296
    float      line_col[4]           //   16 bytes, offset 304
    short      line_priority         //    2 bytes, offset 320
    short      vcol_alpha            //    2 bytes, offset 322
    short      paint_active_slot     //    2 bytes, offset 324
    short      paint_clone_slot      //    2 bytes, offset 326
    short      tot_slots             //    2 bytes, offset 328
    char       displacement_method   //    1 bytes, offset 330
    char       thickness_mode        //    1 bytes, offset 331
    float      alpha_threshold       //    4 bytes, offset 332
    float      refract_depth         //    4 bytes, offset 336
    char       blend_method          //    1 bytes, offset 340
    char       blend_shadow          //    1 bytes, offset 341
    char       blend_flag            //    1 bytes, offset 342
    char       volume_intersection_method //    1 bytes, offset 343
    float      inflate_bounds        //    4 bytes, offset 344
    char       _pad3[4]              //    4 bytes, offset 348
    TexPaintSlot *texpaintslot       //    8 bytes, offset 352
    ListBase   gpumaterial           //   16 bytes, offset 360
    MaterialGPencilStyle *gp_style   //    8 bytes, offset 376
    MaterialLineArt lineart          //    8 bytes, offset 384
struct Mesh // 1712 bytes, is ID [#325]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    Ipo        *ipo                  //    8 bytes, offset 216
    Key        *key                  //    8 bytes, offset 224
    Material   **mat                 //    8 bytes, offset 232
    int        totvert               //    4 bytes, offset 240
    int        totedge               //    4 bytes, offset 244
    int        totpoly               //    4 bytes, offset 248
    int        totloop               //    4 bytes, offset 252
    int        *poly_offset_indices  //    8 bytes, offset 256
    CustomData vdata                 //  248 bytes, offset 264
    CustomData edata                 //  248 bytes, offset 512
    CustomData pdata                 //  248 bytes, offset 760
    CustomData ldata                 //  248 bytes, offset 1008
    ListBase   vertex_group_names    //   16 bytes, offset 1256
    int        vertex_group_active_index //    4 bytes, offset 1272
    int        attributes_active_index //    4 bytes, offset 1276
    MSelect    *mselect              //    8 bytes, offset 1280
    int        totselect             //    4 bytes, offset 1288
    int        act_face              //    4 bytes, offset 1292
    Mesh       *texcomesh            //    8 bytes, offset 1296
    float      loc[3]                //   12 bytes, offset 1304
    float      size[3]               //   12 bytes, offset 1316
    char       texflag               //    1 bytes, offset 1328
    char       editflag              //    1 bytes, offset 1329
    ushort     flag                  //    2 bytes, offset 1330
    float      smoothresh            //    4 bytes, offset 1332
    float      remesh_voxel_size     //    4 bytes, offset 1336
    float      remesh_voxel_adaptivity //    4 bytes, offset 1340
    int        face_sets_color_seed  //    4 bytes, offset 1344
    int        face_sets_color_default //    4 bytes, offset 1348
    char       *active_color_attribute //    8 bytes, offset 1352
    char       *default_color_attribute //    8 bytes, offset 1360
    char       symmetry              //    1 bytes, offset 1368
    char       remesh_mode           //    1 bytes, offset 1369
    short      totcol                //    2 bytes, offset 1370
    char       cd_flag               //    1 bytes, offset 1372
    char       subdiv                //    1 bytes, offset 1373
    char       subdivr               //    1 bytes, offset 1374
    char       subsurftype           //    1 bytes, offset 1375
    MPoly      *mpoly                //    8 bytes, offset 1376
    MLoop      *mloop                //    8 bytes, offset 1384
    MVert      *mvert                //    8 bytes, offset 1392
    MEdge      *medge                //    8 bytes, offset 1400
    MDeformVert *dvert               //    8 bytes, offset 1408
    MTFace     *mtface               //    8 bytes, offset 1416
    TFace      *tface                //    8 bytes, offset 1424
    MCol       *mcol                 //    8 bytes, offset 1432
    MFace      *mface                //    8 bytes, offset 1440
    CustomData fdata                 //  248 bytes, offset 1448
    int        totface               //    4 bytes, offset 1696
    char       _pad1[4]              //    4 bytes, offset 1700
    MeshRuntimeHandle *runtime       //    8 bytes, offset 1704
struct TFace // 64 bytes [#326]
    void       *tpage                //    8 bytes, offset 0
    float      uv[4][2]              //   32 bytes, offset 8
    int        col[4]                //   16 bytes, offset 40
    char       flag                  //    1 bytes, offset 56
    char       transp                //    1 bytes, offset 57
    short      mode                  //    2 bytes, offset 58
    short      tile                  //    2 bytes, offset 60
    short      unwrap                //    2 bytes, offset 62
struct MSelect // 8 bytes [#327]
    int        index                 //    4 bytes, offset 0
    int        type                  //    4 bytes, offset 4
struct MFloatProperty // 4 bytes [#328]
    float      f                     //    4 bytes, offset 0
struct MIntProperty // 4 bytes [#329]
    int        i                     //    4 bytes, offset 0
struct MStringProperty // 256 bytes [#330]
    char       s[255]                //  255 bytes, offset 0
    char       s_len                 //    1 bytes, offset 255
struct MBoolProperty // 1 bytes [#331]
    uchar      b                     //    1 bytes, offset 0
struct MInt8Property // 1 bytes [#332]
    int8_t     i                     //    1 bytes, offset 0
struct MDeformWeight // 8 bytes [#333]
    int        def_nr                //    4 bytes, offset 0
    float      weight                //    4 bytes, offset 4
struct MDeformVert // 16 bytes [#334]
    MDeformWeight *dw                //    8 bytes, offset 0
    int        totweight             //    4 bytes, offset 8
    int        flag                  //    4 bytes, offset 12
struct MVertSkin // 16 bytes [#335]
    float      radius[3]             //   12 bytes, offset 0
    int        flag                  //    4 bytes, offset 12
struct MLoopCol // 4 bytes [#336]
    char       r                     //    1 bytes, offset 0
    char       g                     //    1 bytes, offset 1
    char       b                     //    1 bytes, offset 2
    char       a                     //    1 bytes, offset 3
struct MPropCol // 16 bytes [#337]
    float      color[4]              //   16 bytes, offset 0
struct MDisps // 24 bytes [#338]
    int        totdisp               //    4 bytes, offset 0
    int        level                 //    4 bytes, offset 4
    float      (*disps)()            //    8 bytes, offset 8
    int        *hidden               //    8 bytes, offset 16
struct GridPaintMask // 16 bytes [#339]
    float      *data                 //    8 bytes, offset 0
    int        level                 //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
struct FreestyleEdge // 1 bytes [#340]
    char       flag                  //    1 bytes, offset 0
struct FreestyleFace // 1 bytes [#341]
    char       flag                  //    1 bytes, offset 0
struct MEdge // 12 bytes [#342]
    int        v1                    //    4 bytes, offset 0
    int        v2                    //    4 bytes, offset 4
    char       crease                //    1 bytes, offset 8
    char       bweight               //    1 bytes, offset 9
    short      flag                  //    2 bytes, offset 10
struct MPoly // 12 bytes [#343]
    int        loopstart             //    4 bytes, offset 0
    int        totloop               //    4 bytes, offset 4
    short      mat_nr                //    2 bytes, offset 8
    char       flag                  //    1 bytes, offset 10
    char       _pad                  //    1 bytes, offset 11
struct MLoopUV // 12 bytes [#344]
    float      uv[2]                 //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
struct MVert // 16 bytes [#345]
    float      co[3]                 //   12 bytes, offset 0
    char       flag                  //    1 bytes, offset 12
    char       bweight               //    1 bytes, offset 13
    char       _pad[2]               //    2 bytes, offset 14
struct MLoop // 8 bytes [#346]
    int        v                     //    4 bytes, offset 0
    int        e                     //    4 bytes, offset 4
struct MFace // 20 bytes [#347]
    int        v1                    //    4 bytes, offset 0
    int        v2                    //    4 bytes, offset 4
    int        v3                    //    4 bytes, offset 8
    int        v4                    //    4 bytes, offset 12
    short      mat_nr                //    2 bytes, offset 16
    char       edcode                //    1 bytes, offset 18
    char       flag                  //    1 bytes, offset 19
struct MTFace // 32 bytes [#348]
    float      uv[4][2]              //   32 bytes, offset 0
struct MCol // 4 bytes [#349]
    char       a                     //    1 bytes, offset 0
    char       r                     //    1 bytes, offset 1
    char       g                     //    1 bytes, offset 2
    char       b                     //    1 bytes, offset 3
struct MRecast // 4 bytes [#350]
    int        i                     //    4 bytes, offset 0
struct MetaElem // 104 bytes [#351]
    MetaElem   *next                 //    8 bytes, offset 0
    MetaElem   *prev                 //    8 bytes, offset 8
    BoundBox   *bb                   //    8 bytes, offset 16
    short      type                  //    2 bytes, offset 24
    short      flag                  //    2 bytes, offset 26
    char       _pad[4]               //    4 bytes, offset 28
    float      x                     //    4 bytes, offset 32
    float      y                     //    4 bytes, offset 36
    float      z                     //    4 bytes, offset 40
    float      quat[4]               //   16 bytes, offset 44
    float      expx                  //    4 bytes, offset 60
    float      expy                  //    4 bytes, offset 64
    float      expz                  //    4 bytes, offset 68
    float      rad                   //    4 bytes, offset 72
    float      rad2                  //    4 bytes, offset 76
    float      s                     //    4 bytes, offset 80
    float      len                   //    4 bytes, offset 84
    float      *mat                  //    8 bytes, offset 88
    float      *imat                 //    8 bytes, offset 96
struct MetaBall // 312 bytes, is ID [#352]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    ListBase   elems                 //   16 bytes, offset 216
    ListBase   *editelems            //    8 bytes, offset 232
    Ipo        *ipo                  //    8 bytes, offset 240
    Material   **mat                 //    8 bytes, offset 248
    char       flag                  //    1 bytes, offset 256
    char       flag2                 //    1 bytes, offset 257
    short      totcol                //    2 bytes, offset 258
    char       texflag               //    1 bytes, offset 260
    char       _pad[2]               //    2 bytes, offset 261
    char       needs_flush_to_id     //    1 bytes, offset 263
    float      loc[3]                //   12 bytes, offset 264
    float      size[3]               //   12 bytes, offset 276
    float      wiresize              //    4 bytes, offset 288
    float      rendersize            //    4 bytes, offset 292
    float      thresh                //    4 bytes, offset 296
    char       _pad0[4]              //    4 bytes, offset 300
    MetaElem   *lastelem             //    8 bytes, offset 304
struct ModifierData // 120 bytes [#353]
    ModifierData *next               //    8 bytes, offset 0
    ModifierData *prev               //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    int        mode                  //    4 bytes, offset 20
    float      execution_time        //    4 bytes, offset 24
    short      flag                  //    2 bytes, offset 28
    short      ui_expand_flag        //    2 bytes, offset 30
    ushort     layout_panel_open_flag //    2 bytes, offset 32
    char       _pad[2]               //    2 bytes, offset 34
    int        persistent_uid        //    4 bytes, offset 36
    char       name[64]              //   64 bytes, offset 40
    char       *error                //    8 bytes, offset 104
    void       *runtime              //    8 bytes, offset 112
struct MappingInfoModifierData // 280 bytes [#354]
    ModifierData modifier            //  120 bytes, offset 0
    Tex        *texture              //    8 bytes, offset 120
    Object     *map_object           //    8 bytes, offset 128
    char       map_bone[64]          //   64 bytes, offset 136
    char       uvlayer_name[68]      //   68 bytes, offset 200
    char       _pad1[4]              //    4 bytes, offset 268
    int        uvlayer_tmp           //    4 bytes, offset 272
    int        texmapping            //    4 bytes, offset 276
struct SubsurfModifierData // 152 bytes [#355]
    ModifierData modifier            //  120 bytes, offset 0
    short      subdivType            //    2 bytes, offset 120
    short      levels                //    2 bytes, offset 122
    short      renderLevels          //    2 bytes, offset 124
    short      flags                 //    2 bytes, offset 126
    short      uv_smooth             //    2 bytes, offset 128
    short      quality               //    2 bytes, offset 130
    short      boundary_smooth       //    2 bytes, offset 132
    char       _pad[2]               //    2 bytes, offset 134
    void       *emCache              //    8 bytes, offset 136
    void       *mCache               //    8 bytes, offset 144
struct LatticeModifierData // 208 bytes [#356]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    char       name[64]              //   64 bytes, offset 128
    float      strength              //    4 bytes, offset 192
    short      flag                  //    2 bytes, offset 196
    char       _pad[2]               //    2 bytes, offset 198
    void       *_pad1                //    8 bytes, offset 200
struct CurveModifierData // 208 bytes [#357]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    char       name[64]              //   64 bytes, offset 128
    short      defaxis               //    2 bytes, offset 192
    short      flag                  //    2 bytes, offset 194
    char       _pad[4]               //    4 bytes, offset 196
    void       *_pad1                //    8 bytes, offset 200
struct BuildModifierData // 136 bytes [#358]
    ModifierData modifier            //  120 bytes, offset 0
    float      start                 //    4 bytes, offset 120
    float      length                //    4 bytes, offset 124
    short      flag                  //    2 bytes, offset 128
    short      randomize             //    2 bytes, offset 130
    int        seed                  //    4 bytes, offset 132
struct MaskModifierData // 208 bytes [#359]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *ob_arm               //    8 bytes, offset 120
    char       vgroup[64]            //   64 bytes, offset 128
    short      mode                  //    2 bytes, offset 192
    short      flag                  //    2 bytes, offset 194
    float      threshold             //    4 bytes, offset 196
    void       *_pad1                //    8 bytes, offset 200
struct ArrayModifierData // 208 bytes [#360]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *start_cap            //    8 bytes, offset 120
    Object     *end_cap              //    8 bytes, offset 128
    Object     *curve_ob             //    8 bytes, offset 136
    Object     *offset_ob            //    8 bytes, offset 144
    float      offset[3]             //   12 bytes, offset 152
    float      scale[3]              //   12 bytes, offset 164
    float      length                //    4 bytes, offset 176
    float      merge_dist            //    4 bytes, offset 180
    int        fit_type              //    4 bytes, offset 184
    int        offset_type           //    4 bytes, offset 188
    int        flags                 //    4 bytes, offset 192
    int        count                 //    4 bytes, offset 196
    float      uv_offset[2]          //    8 bytes, offset 200
struct MirrorModifierData // 168 bytes [#361]
    ModifierData modifier            //  120 bytes, offset 0
    short      axis                  //    2 bytes, offset 120
    short      flag                  //    2 bytes, offset 122
    float      tolerance             //    4 bytes, offset 124
    float      bisect_threshold      //    4 bytes, offset 128
    uchar      use_correct_order_on_merge //    1 bytes, offset 132
    char       _pad[3]               //    3 bytes, offset 133
    float      uv_offset[2]          //    8 bytes, offset 136
    float      uv_offset_copy[2]     //    8 bytes, offset 144
    Object     *mirror_ob            //    8 bytes, offset 152
    void       *_pad1                //    8 bytes, offset 160
struct EdgeSplitModifierData // 128 bytes [#362]
    ModifierData modifier            //  120 bytes, offset 0
    float      split_angle           //    4 bytes, offset 120
    int        flags                 //    4 bytes, offset 124
struct BevelModifierData // 368 bytes [#363]
    ModifierData modifier            //  120 bytes, offset 0
    float      value                 //    4 bytes, offset 120
    int        res                   //    4 bytes, offset 124
    short      flags                 //    2 bytes, offset 128
    short      val_flags             //    2 bytes, offset 130
    short      profile_type          //    2 bytes, offset 132
    short      lim_flags             //    2 bytes, offset 134
    short      e_flags               //    2 bytes, offset 136
    short      mat                   //    2 bytes, offset 138
    short      edge_flags            //    2 bytes, offset 140
    short      face_str_mode         //    2 bytes, offset 142
    short      miter_inner           //    2 bytes, offset 144
    short      miter_outer           //    2 bytes, offset 146
    short      vmesh_method          //    2 bytes, offset 148
    char       affect_type           //    1 bytes, offset 150
    char       _pad                  //    1 bytes, offset 151
    float      profile               //    4 bytes, offset 152
    float      bevel_angle           //    4 bytes, offset 156
    float      spread                //    4 bytes, offset 160
    char       defgrp_name[64]       //   64 bytes, offset 164
    char       _pad1[4]              //    4 bytes, offset 228
    CurveProfile *custom_profile     //    8 bytes, offset 232
    char       edge_weight_name[64]  //   64 bytes, offset 240
    char       vertex_weight_name[64] //   64 bytes, offset 304
struct FluidModifierData // 160 bytes [#364]
    ModifierData modifier            //  120 bytes, offset 0
    FluidDomainSettings *domain      //    8 bytes, offset 120
    FluidFlowSettings *flow          //    8 bytes, offset 128
    FluidEffectorSettings *effector  //    8 bytes, offset 136
    float      time                  //    4 bytes, offset 144
    int        type                  //    4 bytes, offset 148
    void       *_pad1                //    8 bytes, offset 152
struct DisplaceModifierData // 368 bytes [#365]
    ModifierData modifier            //  120 bytes, offset 0
    Tex        *texture              //    8 bytes, offset 120
    Object     *map_object           //    8 bytes, offset 128
    char       map_bone[64]          //   64 bytes, offset 136
    char       uvlayer_name[68]      //   68 bytes, offset 200
    char       _pad1[4]              //    4 bytes, offset 268
    int        uvlayer_tmp           //    4 bytes, offset 272
    int        texmapping            //    4 bytes, offset 276
    float      strength              //    4 bytes, offset 280
    int        direction             //    4 bytes, offset 284
    char       defgrp_name[64]       //   64 bytes, offset 288
    float      midlevel              //    4 bytes, offset 352
    int        space                 //    4 bytes, offset 356
    short      flag                  //    2 bytes, offset 360
    char       _pad2[6]              //    6 bytes, offset 362
struct UVProjectModifierData // 296 bytes [#366]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *projectors[10]       //   80 bytes, offset 120
    char       _pad2[4]              //    4 bytes, offset 200
    int        num_projectors        //    4 bytes, offset 204
    float      aspectx               //    4 bytes, offset 208
    float      aspecty               //    4 bytes, offset 212
    float      scalex                //    4 bytes, offset 216
    float      scaley                //    4 bytes, offset 220
    char       uvlayer_name[68]      //   68 bytes, offset 224
    int        uvlayer_tmp           //    4 bytes, offset 292
struct DecimateModifierData // 208 bytes [#367]
    ModifierData modifier            //  120 bytes, offset 0
    float      percent               //    4 bytes, offset 120
    short      iter                  //    2 bytes, offset 124
    char       delimit               //    1 bytes, offset 126
    char       symmetry_axis         //    1 bytes, offset 127
    float      angle                 //    4 bytes, offset 128
    char       defgrp_name[64]       //   64 bytes, offset 132
    float      defgrp_factor         //    4 bytes, offset 196
    short      flag                  //    2 bytes, offset 200
    short      mode                  //    2 bytes, offset 202
    int        face_count            //    4 bytes, offset 204
struct SmoothModifierData // 192 bytes [#368]
    ModifierData modifier            //  120 bytes, offset 0
    float      fac                   //    4 bytes, offset 120
    char       defgrp_name[64]       //   64 bytes, offset 124
    short      flag                  //    2 bytes, offset 188
    short      repeat                //    2 bytes, offset 190
struct CastModifierData // 216 bytes [#369]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    float      fac                   //    4 bytes, offset 128
    float      radius                //    4 bytes, offset 132
    float      size                  //    4 bytes, offset 136
    char       defgrp_name[64]       //   64 bytes, offset 140
    short      flag                  //    2 bytes, offset 204
    short      type                  //    2 bytes, offset 206
    void       *_pad1                //    8 bytes, offset 208
struct WaveModifierData // 408 bytes [#370]
    ModifierData modifier            //  120 bytes, offset 0
    Tex        *texture              //    8 bytes, offset 120
    Object     *map_object           //    8 bytes, offset 128
    char       map_bone[64]          //   64 bytes, offset 136
    char       uvlayer_name[68]      //   68 bytes, offset 200
    char       _pad1[4]              //    4 bytes, offset 268
    int        uvlayer_tmp           //    4 bytes, offset 272
    int        texmapping            //    4 bytes, offset 276
    Object     *objectcenter         //    8 bytes, offset 280
    char       defgrp_name[64]       //   64 bytes, offset 288
    short      flag                  //    2 bytes, offset 352
    char       _pad2[2]              //    2 bytes, offset 354
    float      startx                //    4 bytes, offset 356
    float      starty                //    4 bytes, offset 360
    float      height                //    4 bytes, offset 364
    float      width                 //    4 bytes, offset 368
    float      narrow                //    4 bytes, offset 372
    float      speed                 //    4 bytes, offset 376
    float      damp                  //    4 bytes, offset 380
    float      falloff               //    4 bytes, offset 384
    float      timeoffs              //    4 bytes, offset 388
    float      lifetime              //    4 bytes, offset 392
    char       _pad3[4]              //    4 bytes, offset 396
    void       *_pad4                //    8 bytes, offset 400
struct ArmatureModifierData // 208 bytes [#371]
    ModifierData modifier            //  120 bytes, offset 0
    short      deformflag            //    2 bytes, offset 120
    short      multi                 //    2 bytes, offset 122
    char       _pad2[4]              //    4 bytes, offset 124
    Object     *object               //    8 bytes, offset 128
    float      (*vert_coords_prev)() //    8 bytes, offset 136
    char       defgrp_name[64]       //   64 bytes, offset 144
struct HookModifierData // 376 bytes [#372]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    char       subtarget[64]         //   64 bytes, offset 128
    char       flag                  //    1 bytes, offset 192
    char       falloff_type          //    1 bytes, offset 193
    char       _pad[6]               //    6 bytes, offset 194
    float      parentinv[4][4]       //   64 bytes, offset 200
    float      cent[3]               //   12 bytes, offset 264
    float      falloff               //    4 bytes, offset 276
    CurveMapping *curfalloff         //    8 bytes, offset 280
    int        *indexar              //    8 bytes, offset 288
    int        totindex              //    4 bytes, offset 296
    float      force                 //    4 bytes, offset 300
    char       name[64]              //   64 bytes, offset 304
    void       *_pad1                //    8 bytes, offset 368
struct SoftbodyModifierData // 120 bytes [#373]
    ModifierData modifier            //  120 bytes, offset 0
struct ClothModifierData // 224 bytes [#374]
    ModifierData modifier            //  120 bytes, offset 0
    Cloth      *clothObject          //    8 bytes, offset 120
    ClothSimSettings *sim_parms      //    8 bytes, offset 128
    ClothCollSettings *coll_parms    //    8 bytes, offset 136
    PointCache *point_cache          //    8 bytes, offset 144
    ListBase   ptcaches              //   16 bytes, offset 152
    ClothHairData *hairdata          //    8 bytes, offset 168
    float      hair_grid_min[3]      //   12 bytes, offset 176
    float      hair_grid_max[3]      //   12 bytes, offset 188
    int        hair_grid_res[3]      //   12 bytes, offset 200
    float      hair_grid_cellsize    //    4 bytes, offset 212
    ClothSolverResult *solver_result //    8 bytes, offset 216
struct CollisionModifierData // 208 bytes [#375]
    ModifierData modifier            //  120 bytes, offset 0
    float      (*x)()                //    8 bytes, offset 120
    float      (*xnew)()             //    8 bytes, offset 128
    float      (*xold)()             //    8 bytes, offset 136
    float      (*current_xnew)()     //    8 bytes, offset 144
    float      (*current_x)()        //    8 bytes, offset 152
    float      (*current_v)()        //    8 bytes, offset 160
    int        (*vert_tris)()        //    8 bytes, offset 168
    int        mvert_num             //    4 bytes, offset 176
    int        tri_num               //    4 bytes, offset 180
    float      time_x                //    4 bytes, offset 184
    float      time_xnew             //    4 bytes, offset 188
    char       is_static             //    1 bytes, offset 192
    char       _pad[7]               //    7 bytes, offset 193
    BVHTree    *bvhtree              //    8 bytes, offset 200
struct SurfaceModifierData_Runtime // 40 bytes [#376]
    float      (*vert_positions_prev)() //    8 bytes, offset 0
    float      (*vert_velocities)()  //    8 bytes, offset 8
    Mesh       *mesh                 //    8 bytes, offset 16
    BVHTreeFromMeshHandle *bvhtree   //    8 bytes, offset 24
    int        cfra_prev             //    4 bytes, offset 32
    int        verts_num             //    4 bytes, offset 36
struct SurfaceModifierData // 160 bytes [#377]
    ModifierData modifier            //  120 bytes, offset 0
    SurfaceModifierData_Runtime runtime //   40 bytes, offset 120
struct BooleanModifierData // 152 bytes [#378]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    Collection *collection           //    8 bytes, offset 128
    float      double_threshold      //    4 bytes, offset 136
    char       operation             //    1 bytes, offset 140
    char       solver                //    1 bytes, offset 141
    char       material_mode         //    1 bytes, offset 142
    char       flag                  //    1 bytes, offset 143
    char       bm_flag               //    1 bytes, offset 144
    char       _pad[7]               //    7 bytes, offset 145
struct MDefInfluence // 8 bytes [#379]
    int        vertex                //    4 bytes, offset 0
    float      weight                //    4 bytes, offset 4
struct MDefCell // 8 bytes [#380]
    int        offset                //    4 bytes, offset 0
    int        totinfluence          //    4 bytes, offset 4
struct MeshDeformModifierData // 368 bytes [#381]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    char       defgrp_name[64]       //   64 bytes, offset 128
    short      gridsize              //    2 bytes, offset 192
    short      flag                  //    2 bytes, offset 194
    char       _pad[4]               //    4 bytes, offset 196
    MDefInfluence *bindinfluences    //    8 bytes, offset 200
    int        *bindoffsets          //    8 bytes, offset 208
    float      *bindcagecos          //    8 bytes, offset 216
    int        totvert               //    4 bytes, offset 224
    int        totcagevert           //    4 bytes, offset 228
    MDefCell   *dyngrid              //    8 bytes, offset 232
    MDefInfluence *dyninfluences     //    8 bytes, offset 240
    int        *dynverts             //    8 bytes, offset 248
    int        dyngridsize           //    4 bytes, offset 256
    int        totinfluence          //    4 bytes, offset 260
    float      dyncellmin[3]         //   12 bytes, offset 264
    float      dyncellwidth          //    4 bytes, offset 276
    float      bindmat[4][4]         //   64 bytes, offset 280
    float      *bindweights          //    8 bytes, offset 344
    float      *bindcos              //    8 bytes, offset 352
    void       (*bindfunc)()         //    8 bytes, offset 360
struct ParticleSystemModifierData // 168 bytes [#382]
    ModifierData modifier            //  120 bytes, offset 0
    ParticleSystem *psys             //    8 bytes, offset 120
    Mesh       *mesh_final           //    8 bytes, offset 128
    Mesh       *mesh_original        //    8 bytes, offset 136
    int        totdmvert             //    4 bytes, offset 144
    int        totdmedge             //    4 bytes, offset 148
    int        totdmface             //    4 bytes, offset 152
    short      flag                  //    2 bytes, offset 156
    char       _pad[2]               //    2 bytes, offset 158
    void       *_pad1                //    8 bytes, offset 160
struct ParticleInstanceModifierData // 304 bytes [#383]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *ob                   //    8 bytes, offset 120
    short      psys                  //    2 bytes, offset 128
    short      flag                  //    2 bytes, offset 130
    short      axis                  //    2 bytes, offset 132
    short      space                 //    2 bytes, offset 134
    float      position              //    4 bytes, offset 136
    float      random_position       //    4 bytes, offset 140
    float      rotation              //    4 bytes, offset 144
    float      random_rotation       //    4 bytes, offset 148
    float      particle_amount       //    4 bytes, offset 152
    float      particle_offset       //    4 bytes, offset 156
    char       index_layer_name[68]  //   68 bytes, offset 160
    char       value_layer_name[68]  //   68 bytes, offset 228
    void       *_pad1                //    8 bytes, offset 296
struct ExplodeModifierData // 216 bytes [#384]
    ModifierData modifier            //  120 bytes, offset 0
    int        *facepa               //    8 bytes, offset 120
    short      flag                  //    2 bytes, offset 128
    short      vgroup                //    2 bytes, offset 130
    float      protect               //    4 bytes, offset 132
    char       uvname[68]            //   68 bytes, offset 136
    char       _pad1[4]              //    4 bytes, offset 204
    void       *_pad2                //    8 bytes, offset 208
struct MultiresModifierData // 136 bytes [#385]
    ModifierData modifier            //  120 bytes, offset 0
    char       lvl                   //    1 bytes, offset 120
    char       sculptlvl             //    1 bytes, offset 121
    char       renderlvl             //    1 bytes, offset 122
    char       totlvl                //    1 bytes, offset 123
    char       simple                //    1 bytes, offset 124
    char       flags                 //    1 bytes, offset 125
    char       _pad[2]               //    2 bytes, offset 126
    short      quality               //    2 bytes, offset 128
    short      uv_smooth             //    2 bytes, offset 130
    short      boundary_smooth       //    2 bytes, offset 132
    char       _pad2[2]              //    2 bytes, offset 134
struct FluidsimModifierData // 136 bytes [#386]
    ModifierData modifier            //  120 bytes, offset 0
    FluidsimSettings *fss            //    8 bytes, offset 120
    void       *_pad1                //    8 bytes, offset 128
struct SmokeModifierData // 128 bytes [#387]
    ModifierData modifier            //  120 bytes, offset 0
    int        type                  //    4 bytes, offset 120
    int        _pad                  //    4 bytes, offset 124
struct ShrinkwrapModifierData // 216 bytes [#388]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *target               //    8 bytes, offset 120
    Object     *auxTarget            //    8 bytes, offset 128
    char       vgroup_name[64]       //   64 bytes, offset 136
    float      keepDist              //    4 bytes, offset 200
    short      shrinkType            //    2 bytes, offset 204
    char       shrinkOpts            //    1 bytes, offset 206
    char       shrinkMode            //    1 bytes, offset 207
    float      projLimit             //    4 bytes, offset 208
    char       projAxis              //    1 bytes, offset 212
    char       subsurfLevels         //    1 bytes, offset 213
    char       _pad[2]               //    2 bytes, offset 214
struct SimpleDeformModifierData // 216 bytes [#389]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *origin               //    8 bytes, offset 120
    char       vgroup_name[64]       //   64 bytes, offset 128
    float      factor                //    4 bytes, offset 192
    float      limit[2]              //    8 bytes, offset 196
    char       mode                  //    1 bytes, offset 204
    char       axis                  //    1 bytes, offset 205
    char       deform_axis           //    1 bytes, offset 206
    char       flag                  //    1 bytes, offset 207
    void       *_pad1                //    8 bytes, offset 208
struct ShapeKeyModifierData // 120 bytes [#390]
    ModifierData modifier            //  120 bytes, offset 0
struct SolidifyModifierData // 360 bytes [#391]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name[64]       //   64 bytes, offset 120
    char       shell_defgrp_name[64] //   64 bytes, offset 184
    char       rim_defgrp_name[64]   //   64 bytes, offset 248
    float      offset                //    4 bytes, offset 312
    float      offset_fac            //    4 bytes, offset 316
    float      offset_fac_vg         //    4 bytes, offset 320
    float      offset_clamp          //    4 bytes, offset 324
    char       mode                  //    1 bytes, offset 328
    char       nonmanifold_offset_mode //    1 bytes, offset 329
    char       nonmanifold_boundary_mode //    1 bytes, offset 330
    char       _pad                  //    1 bytes, offset 331
    float      crease_inner          //    4 bytes, offset 332
    float      crease_outer          //    4 bytes, offset 336
    float      crease_rim            //    4 bytes, offset 340
    int        flag                  //    4 bytes, offset 344
    short      mat_ofs               //    2 bytes, offset 348
    short      mat_ofs_rim           //    2 bytes, offset 350
    float      merge_tolerance       //    4 bytes, offset 352
    float      bevel_convex          //    4 bytes, offset 356
struct ScrewModifierData // 168 bytes [#392]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *ob_axis              //    8 bytes, offset 120
    int        steps                 //    4 bytes, offset 128
    int        render_steps          //    4 bytes, offset 132
    int        iter                  //    4 bytes, offset 136
    float      screw_ofs             //    4 bytes, offset 140
    float      angle                 //    4 bytes, offset 144
    float      merge_dist            //    4 bytes, offset 148
    short      flag                  //    2 bytes, offset 152
    char       axis                  //    1 bytes, offset 154
    char       _pad[5]               //    5 bytes, offset 155
    void       *_pad1                //    8 bytes, offset 160
struct OceanModifierData // 1392 bytes [#393]
    ModifierData modifier            //  120 bytes, offset 0
    Ocean      *ocean                //    8 bytes, offset 120
    OceanCache *oceancache           //    8 bytes, offset 128
    int        resolution            //    4 bytes, offset 136
    int        viewport_resolution   //    4 bytes, offset 140
    int        spatial_size          //    4 bytes, offset 144
    float      wind_velocity         //    4 bytes, offset 148
    float      damp                  //    4 bytes, offset 152
    float      smallest_wave         //    4 bytes, offset 156
    float      depth                 //    4 bytes, offset 160
    float      wave_alignment        //    4 bytes, offset 164
    float      wave_direction        //    4 bytes, offset 168
    float      wave_scale            //    4 bytes, offset 172
    float      chop_amount           //    4 bytes, offset 176
    float      foam_coverage         //    4 bytes, offset 180
    float      time                  //    4 bytes, offset 184
    int        spectrum              //    4 bytes, offset 188
    float      fetch_jonswap         //    4 bytes, offset 192
    float      sharpen_peak_jonswap  //    4 bytes, offset 196
    int        bakestart             //    4 bytes, offset 200
    int        bakeend               //    4 bytes, offset 204
    char       cachepath[1024]       // 1024 bytes, offset 208
    char       foamlayername[68]     //   68 bytes, offset 1232
    char       spraylayername[68]    //   68 bytes, offset 1300
    char       cached                //    1 bytes, offset 1368
    char       geometry_mode         //    1 bytes, offset 1369
    char       flag                  //    1 bytes, offset 1370
    char       _pad2                 //    1 bytes, offset 1371
    short      repeat_x              //    2 bytes, offset 1372
    short      repeat_y              //    2 bytes, offset 1374
    int        seed                  //    4 bytes, offset 1376
    float      size                  //    4 bytes, offset 1380
    float      foam_fade             //    4 bytes, offset 1384
    char       _pad[4]               //    4 bytes, offset 1388
struct WarpModifierData // 520 bytes [#394]
    ModifierData modifier            //  120 bytes, offset 0
    Tex        *texture              //    8 bytes, offset 120
    Object     *map_object           //    8 bytes, offset 128
    char       map_bone[64]          //   64 bytes, offset 136
    char       uvlayer_name[68]      //   68 bytes, offset 200
    char       _pad1[4]              //    4 bytes, offset 268
    int        uvlayer_tmp           //    4 bytes, offset 272
    int        texmapping            //    4 bytes, offset 276
    Object     *object_from          //    8 bytes, offset 280
    Object     *object_to            //    8 bytes, offset 288
    char       bone_from[64]         //   64 bytes, offset 296
    char       bone_to[64]           //   64 bytes, offset 360
    CurveMapping *curfalloff         //    8 bytes, offset 424
    char       defgrp_name[64]       //   64 bytes, offset 432
    float      strength              //    4 bytes, offset 496
    float      falloff_radius        //    4 bytes, offset 500
    char       flag                  //    1 bytes, offset 504
    char       falloff_type          //    1 bytes, offset 505
    char       _pad2[6]              //    6 bytes, offset 506
    void       *_pad3                //    8 bytes, offset 512
struct WeightVGEditModifierData // 440 bytes [#395]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name[64]       //   64 bytes, offset 120
    short      edit_flags            //    2 bytes, offset 184
    short      falloff_type          //    2 bytes, offset 186
    float      default_weight        //    4 bytes, offset 188
    CurveMapping *cmap_curve         //    8 bytes, offset 192
    float      add_threshold         //    4 bytes, offset 200
    float      rem_threshold         //    4 bytes, offset 204
    float      mask_constant         //    4 bytes, offset 208
    char       mask_defgrp_name[64]  //   64 bytes, offset 212
    int        mask_tex_use_channel  //    4 bytes, offset 276
    Tex        *mask_texture         //    8 bytes, offset 280
    Object     *mask_tex_map_obj     //    8 bytes, offset 288
    char       mask_tex_map_bone[64] //   64 bytes, offset 296
    int        mask_tex_mapping      //    4 bytes, offset 360
    char       mask_tex_uvlayer_name[68] //   68 bytes, offset 364
    void       *_pad1                //    8 bytes, offset 432
struct WeightVGMixModifierData // 496 bytes [#396]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name_a[64]     //   64 bytes, offset 120
    char       defgrp_name_b[64]     //   64 bytes, offset 184
    float      default_weight_a      //    4 bytes, offset 248
    float      default_weight_b      //    4 bytes, offset 252
    char       mix_mode              //    1 bytes, offset 256
    char       mix_set               //    1 bytes, offset 257
    char       _pad0[6]              //    6 bytes, offset 258
    float      mask_constant         //    4 bytes, offset 264
    char       mask_defgrp_name[64]  //   64 bytes, offset 268
    int        mask_tex_use_channel  //    4 bytes, offset 332
    Tex        *mask_texture         //    8 bytes, offset 336
    Object     *mask_tex_map_obj     //    8 bytes, offset 344
    char       mask_tex_map_bone[64] //   64 bytes, offset 352
    int        mask_tex_mapping      //    4 bytes, offset 416
    char       mask_tex_uvlayer_name[68] //   68 bytes, offset 420
    char       _pad1[4]              //    4 bytes, offset 488
    char       flag                  //    1 bytes, offset 492
    char       _pad2[3]              //    3 bytes, offset 493
struct WeightVGProximityModifierData // 448 bytes [#397]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name[64]       //   64 bytes, offset 120
    CurveMapping *cmap_curve         //    8 bytes, offset 184
    int        proximity_mode        //    4 bytes, offset 192
    int        proximity_flags       //    4 bytes, offset 196
    Object     *proximity_ob_target  //    8 bytes, offset 200
    float      mask_constant         //    4 bytes, offset 208
    char       mask_defgrp_name[64]  //   64 bytes, offset 212
    int        mask_tex_use_channel  //    4 bytes, offset 276
    Tex        *mask_texture         //    8 bytes, offset 280
    Object     *mask_tex_map_obj     //    8 bytes, offset 288
    char       mask_tex_map_bone[64] //   64 bytes, offset 296
    int        mask_tex_mapping      //    4 bytes, offset 360
    char       mask_tex_uvlayer_name[68] //   68 bytes, offset 364
    char       _pad1[4]              //    4 bytes, offset 432
    float      min_dist              //    4 bytes, offset 436
    float      max_dist              //    4 bytes, offset 440
    short      falloff_type          //    2 bytes, offset 444
    char       _pad0[2]              //    2 bytes, offset 446
struct DynamicPaintModifierData // 144 bytes [#398]
    ModifierData modifier            //  120 bytes, offset 0
    DynamicPaintCanvasSettings *canvas //    8 bytes, offset 120
    DynamicPaintBrushSettings *brush //    8 bytes, offset 128
    int        type                  //    4 bytes, offset 136
    char       _pad[4]               //    4 bytes, offset 140
struct RemeshModifierData // 144 bytes [#399]
    ModifierData modifier            //  120 bytes, offset 0
    float      threshold             //    4 bytes, offset 120
    float      scale                 //    4 bytes, offset 124
    float      hermite_num           //    4 bytes, offset 128
    char       depth                 //    1 bytes, offset 132
    char       flag                  //    1 bytes, offset 133
    char       mode                  //    1 bytes, offset 134
    char       _pad                  //    1 bytes, offset 135
    float      voxel_size            //    4 bytes, offset 136
    float      adaptivity            //    4 bytes, offset 140
struct SkinModifierData // 128 bytes [#400]
    ModifierData modifier            //  120 bytes, offset 0
    float      branch_smoothing      //    4 bytes, offset 120
    char       flag                  //    1 bytes, offset 124
    char       symmetry_axes         //    1 bytes, offset 125
    char       _pad[2]               //    2 bytes, offset 126
struct TriangulateModifierData // 136 bytes [#401]
    ModifierData modifier            //  120 bytes, offset 0
    int        flag                  //    4 bytes, offset 120
    int        quad_method           //    4 bytes, offset 124
    int        ngon_method           //    4 bytes, offset 128
    int        min_vertices          //    4 bytes, offset 132
struct LaplacianSmoothModifierData // 200 bytes [#402]
    ModifierData modifier            //  120 bytes, offset 0
    float      lambda                //    4 bytes, offset 120
    float      lambda_border         //    4 bytes, offset 124
    char       _pad1[4]              //    4 bytes, offset 128
    char       defgrp_name[64]       //   64 bytes, offset 132
    short      flag                  //    2 bytes, offset 196
    short      repeat                //    2 bytes, offset 198
struct CorrectiveSmoothDeltaCache // 32 bytes [#403]
    float      (*deltas)()           //    8 bytes, offset 0
    int        deltas_num            //    4 bytes, offset 8
    float      lambda                //    4 bytes, offset 12
    float      scale                 //    4 bytes, offset 16
    short      repeat                //    2 bytes, offset 20
    short      flag                  //    2 bytes, offset 22
    char       smooth_type           //    1 bytes, offset 24
    char       rest_source           //    1 bytes, offset 25
    char       _pad[6]               //    6 bytes, offset 26
struct CorrectiveSmoothModifierData // 248 bytes [#404]
    ModifierData modifier            //  120 bytes, offset 0
    float      (*bind_coords)()      //    8 bytes, offset 120
    int        bind_coords_num       //    4 bytes, offset 128
    float      lambda                //    4 bytes, offset 132
    float      scale                 //    4 bytes, offset 136
    short      repeat                //    2 bytes, offset 140
    short      flag                  //    2 bytes, offset 142
    char       smooth_type           //    1 bytes, offset 144
    char       rest_source           //    1 bytes, offset 145
    char       _pad[6]               //    6 bytes, offset 146
    char       defgrp_name[64]       //   64 bytes, offset 152
    CorrectiveSmoothDeltaCache delta_cache //   32 bytes, offset 216
struct UVWarpModifierData // 432 bytes [#405]
    ModifierData modifier            //  120 bytes, offset 0
    char       axis_u                //    1 bytes, offset 120
    char       axis_v                //    1 bytes, offset 121
    short      flag                  //    2 bytes, offset 122
    float      center[2]             //    8 bytes, offset 124
    float      offset[2]             //    8 bytes, offset 132
    float      scale[2]              //    8 bytes, offset 140
    float      rotation              //    4 bytes, offset 148
    Object     *object_src           //    8 bytes, offset 152
    char       bone_src[64]          //   64 bytes, offset 160
    Object     *object_dst           //    8 bytes, offset 224
    char       bone_dst[64]          //   64 bytes, offset 232
    char       vgroup_name[64]       //   64 bytes, offset 296
    char       uvlayer_name[68]      //   68 bytes, offset 360
    char       _pad[4]               //    4 bytes, offset 428
struct MeshCacheModifierData // 1248 bytes [#406]
    ModifierData modifier            //  120 bytes, offset 0
    char       flag                  //    1 bytes, offset 120
    char       type                  //    1 bytes, offset 121
    char       time_mode             //    1 bytes, offset 122
    char       play_mode             //    1 bytes, offset 123
    char       forward_axis          //    1 bytes, offset 124
    char       up_axis               //    1 bytes, offset 125
    char       flip_axis             //    1 bytes, offset 126
    char       interp                //    1 bytes, offset 127
    float      factor                //    4 bytes, offset 128
    char       deform_mode           //    1 bytes, offset 132
    char       defgrp_name[64]       //   64 bytes, offset 133
    char       _pad[7]               //    7 bytes, offset 197
    float      frame_start           //    4 bytes, offset 204
    float      frame_scale           //    4 bytes, offset 208
    float      eval_frame            //    4 bytes, offset 212
    float      eval_time             //    4 bytes, offset 216
    float      eval_factor           //    4 bytes, offset 220
    char       filepath[1024]        // 1024 bytes, offset 224
struct LaplacianDeformModifierData // 216 bytes [#407]
    ModifierData modifier            //  120 bytes, offset 0
    char       anchor_grp_name[64]   //   64 bytes, offset 120
    int        total_verts           //    4 bytes, offset 184
    int        repeat                //    4 bytes, offset 188
    float      *vertexco             //    8 bytes, offset 192
    void       *cache_system         //    8 bytes, offset 200
    short      flag                  //    2 bytes, offset 208
    char       _pad[6]               //    6 bytes, offset 210
struct WireframeModifierData // 208 bytes [#408]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name[64]       //   64 bytes, offset 120
    float      offset                //    4 bytes, offset 184
    float      offset_fac            //    4 bytes, offset 188
    float      offset_fac_vg         //    4 bytes, offset 192
    float      crease_weight         //    4 bytes, offset 196
    short      flag                  //    2 bytes, offset 200
    short      mat_ofs               //    2 bytes, offset 202
    char       _pad[4]               //    4 bytes, offset 204
struct WeldModifierData // 192 bytes [#409]
    ModifierData modifier            //  120 bytes, offset 0
    float      merge_dist            //    4 bytes, offset 120
    char       defgrp_name[64]       //   64 bytes, offset 124
    char       mode                  //    1 bytes, offset 188
    char       flag                  //    1 bytes, offset 189
    char       _pad[2]               //    2 bytes, offset 190
struct DataTransferModifierData // 288 bytes [#410]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *ob_source            //    8 bytes, offset 120
    int        data_types            //    4 bytes, offset 128
    int        vmap_mode             //    4 bytes, offset 132
    int        emap_mode             //    4 bytes, offset 136
    int        lmap_mode             //    4 bytes, offset 140
    int        pmap_mode             //    4 bytes, offset 144
    float      map_max_distance      //    4 bytes, offset 148
    float      map_ray_radius        //    4 bytes, offset 152
    float      islands_precision     //    4 bytes, offset 156
    char       _pad1[4]              //    4 bytes, offset 160
    int        layers_select_src[5]  //   20 bytes, offset 164
    int        layers_select_dst[5]  //   20 bytes, offset 184
    int        mix_mode              //    4 bytes, offset 204
    float      mix_factor            //    4 bytes, offset 208
    char       defgrp_name[64]       //   64 bytes, offset 212
    int        flags                 //    4 bytes, offset 276
    void       *_pad2                //    8 bytes, offset 280
struct NormalEditModifierData // 232 bytes [#411]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name[64]       //   64 bytes, offset 120
    Object     *target               //    8 bytes, offset 184
    short      mode                  //    2 bytes, offset 192
    short      flag                  //    2 bytes, offset 194
    short      mix_mode              //    2 bytes, offset 196
    char       _pad[2]               //    2 bytes, offset 198
    float      mix_factor            //    4 bytes, offset 200
    float      mix_limit             //    4 bytes, offset 204
    float      offset[3]             //   12 bytes, offset 208
    char       _pad0[4]              //    4 bytes, offset 220
    void       *_pad1                //    8 bytes, offset 224
struct MeshSeqCacheModifierData // 2192 bytes [#412]
    ModifierData modifier            //  120 bytes, offset 0
    CacheFile  *cache_file           //    8 bytes, offset 120
    char       object_path[1024]     // 1024 bytes, offset 128
    char       read_flag             //    1 bytes, offset 1152
    char       _pad[3]               //    3 bytes, offset 1153
    float      velocity_scale        //    4 bytes, offset 1156
    CacheReader *reader              //    8 bytes, offset 1160
    char       reader_object_path[1024] // 1024 bytes, offset 1168
struct SDefBind // 32 bytes [#413]
    int        *vert_inds            //    8 bytes, offset 0
    int        numverts              //    4 bytes, offset 8
    int        mode                  //    4 bytes, offset 12
    float      *vert_weights         //    8 bytes, offset 16
    float      normal_dist           //    4 bytes, offset 24
    float      influence             //    4 bytes, offset 28
struct SDefVert // 16 bytes [#414]
    SDefBind   *binds                //    8 bytes, offset 0
    int        numbinds              //    4 bytes, offset 8
    int        vertex_idx            //    4 bytes, offset 12
struct SurfaceDeformModifierData // 312 bytes [#415]
    ModifierData modifier            //  120 bytes, offset 0
    Depsgraph  *depsgraph            //    8 bytes, offset 120
    Object     *target               //    8 bytes, offset 128
    SDefVert   *verts                //    8 bytes, offset 136
    void       *_pad1                //    8 bytes, offset 144
    float      falloff               //    4 bytes, offset 152
    int        num_mesh_verts        //    4 bytes, offset 156
    int        numverts              //    4 bytes, offset 160
    int        target_verts_num      //    4 bytes, offset 164
    int        numpoly               //    4 bytes, offset 168
    int        flags                 //    4 bytes, offset 172
    float      mat[4][4]             //   64 bytes, offset 176
    float      strength              //    4 bytes, offset 240
    char       defgrp_name[64]       //   64 bytes, offset 244
    int        _pad2                 //    4 bytes, offset 308
struct WeightedNormalModifierData // 192 bytes [#416]
    ModifierData modifier            //  120 bytes, offset 0
    char       defgrp_name[64]       //   64 bytes, offset 120
    char       mode                  //    1 bytes, offset 184
    char       flag                  //    1 bytes, offset 185
    short      weight                //    2 bytes, offset 186
    float      thresh                //    4 bytes, offset 188
struct NodesModifierSettings // 8 bytes [#417]
    IDProperty *properties           //    8 bytes, offset 0
struct NodesModifierDataBlock // 32 bytes [#418]
    char       *id_name              //    8 bytes, offset 0
    char       *lib_name             //    8 bytes, offset 8
    ID         *id                   //    8 bytes, offset 16
    int        id_type               //    4 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 28
struct NodesModifierBakeFile // 16 bytes [#419]
    char       *name                 //    8 bytes, offset 0
    PackedFile *packed_file          //    8 bytes, offset 8
struct NodesModifierPackedBake // 24 bytes [#420]
    int        meta_files_num        //    4 bytes, offset 0
    int        blob_files_num        //    4 bytes, offset 4
    NodesModifierBakeFile *meta_files //    8 bytes, offset 8
    NodesModifierBakeFile *blob_files //    8 bytes, offset 16
struct NodesModifierBake // 72 bytes, is ID [#421]
    int        id                    //    4 bytes, offset 0
    int        flag                  //    4 bytes, offset 4
    uchar      bake_mode             //    1 bytes, offset 8
    int8_t     bake_target           //    1 bytes, offset 9
    char       _pad[6]               //    6 bytes, offset 10
    char       *directory            //    8 bytes, offset 16
    int        frame_start           //    4 bytes, offset 24
    int        frame_end             //    4 bytes, offset 28
    int        data_blocks_num       //    4 bytes, offset 32
    int        active_data_block     //    4 bytes, offset 36
    NodesModifierDataBlock *data_blocks //    8 bytes, offset 40
    NodesModifierPackedBake *packed  //    8 bytes, offset 48
    void       *_pad2                //    8 bytes, offset 56
    int64_t    bake_size             //    8 bytes, offset 64
struct NodesModifierPanel // 8 bytes, is ID [#422]
    int        id                    //    4 bytes, offset 0
    int        flag                  //    4 bytes, offset 4
struct NodesModifierData // 184 bytes [#423]
    ModifierData modifier            //  120 bytes, offset 0
    bNodeTree  *node_group           //    8 bytes, offset 120
    NodesModifierSettings settings   //    8 bytes, offset 128
    char       *simulation_bake_directory //    8 bytes, offset 136
    int8_t     flag                  //    1 bytes, offset 144
    int8_t     bake_target           //    1 bytes, offset 145
    char       _pad[2]               //    2 bytes, offset 146
    int        bakes_num             //    4 bytes, offset 148
    NodesModifierBake *bakes         //    8 bytes, offset 152
    char       _pad2[4]              //    4 bytes, offset 160
    int        panels_num            //    4 bytes, offset 164
    NodesModifierPanel *panels       //    8 bytes, offset 168
    NodesModifierRuntimeHandle *runtime //    8 bytes, offset 176
struct MeshToVolumeModifierData // 160 bytes [#424]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    int        resolution_mode       //    4 bytes, offset 128
    float      voxel_size            //    4 bytes, offset 132
    int        voxel_amount          //    4 bytes, offset 136
    float      interior_band_width   //    4 bytes, offset 140
    float      density               //    4 bytes, offset 144
    char       _pad2[4]              //    4 bytes, offset 148
    void       *_pad3                //    8 bytes, offset 152
struct VolumeDisplaceModifierData // 160 bytes [#425]
    ModifierData modifier            //  120 bytes, offset 0
    Tex        *texture              //    8 bytes, offset 120
    Object     *texture_map_object   //    8 bytes, offset 128
    int        texture_map_mode      //    4 bytes, offset 136
    float      strength              //    4 bytes, offset 140
    float      texture_mid_level[3]  //   12 bytes, offset 144
    float      texture_sample_radius //    4 bytes, offset 156
struct VolumeToMeshModifierData // 224 bytes [#426]
    ModifierData modifier            //  120 bytes, offset 0
    Object     *object               //    8 bytes, offset 120
    float      threshold             //    4 bytes, offset 128
    float      adaptivity            //    4 bytes, offset 132
    int        flag                  //    4 bytes, offset 136
    int        resolution_mode       //    4 bytes, offset 140
    float      voxel_size            //    4 bytes, offset 144
    int        voxel_amount          //    4 bytes, offset 148
    char       grid_name[64]         //   64 bytes, offset 152
    void       *_pad1                //    8 bytes, offset 216
struct GreasePencilModifierInfluenceData // 168 bytes [#427]
    int        flag                  //    4 bytes, offset 0
    char       _pad1[4]              //    4 bytes, offset 4
    char       layer_name[64]        //   64 bytes, offset 8
    Material   *material             //    8 bytes, offset 72
    int        layer_pass            //    4 bytes, offset 80
    int        material_pass         //    4 bytes, offset 84
    char       vertex_group_name[64] //   64 bytes, offset 88
    CurveMapping *custom_curve       //    8 bytes, offset 152
    void       *_pad2                //    8 bytes, offset 160
struct GreasePencilOpacityModifierData // 312 bytes [#428]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    char       color_mode            //    1 bytes, offset 292
    char       _pad1[3]              //    3 bytes, offset 293
    float      color_factor          //    4 bytes, offset 296
    float      hardness_factor       //    4 bytes, offset 300
    void       *_pad2                //    8 bytes, offset 304
struct GreasePencilSubdivModifierData // 312 bytes [#429]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        type                  //    4 bytes, offset 288
    int        level                 //    4 bytes, offset 292
    char       _pad[8]               //    8 bytes, offset 296
    void       *_pad1                //    8 bytes, offset 304
struct GreasePencilColorModifierData // 312 bytes [#430]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    char       color_mode            //    1 bytes, offset 288
    char       _pad1[3]              //    3 bytes, offset 289
    float      hsv[3]                //   12 bytes, offset 292
    void       *_pad2                //    8 bytes, offset 304
struct GreasePencilTintModifierData // 336 bytes [#431]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    short      flag                  //    2 bytes, offset 288
    char       color_mode            //    1 bytes, offset 290
    char       tint_mode             //    1 bytes, offset 291
    float      factor                //    4 bytes, offset 292
    float      radius                //    4 bytes, offset 296
    float      color[3]              //   12 bytes, offset 300
    Object     *object               //    8 bytes, offset 312
    ColorBand  *color_ramp           //    8 bytes, offset 320
    void       *_pad                 //    8 bytes, offset 328
struct GreasePencilSmoothModifierData // 312 bytes [#432]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    float      factor                //    4 bytes, offset 292
    int        step                  //    4 bytes, offset 296
    char       _pad[4]               //    4 bytes, offset 300
    void       *_pad1                //    8 bytes, offset 304
struct GreasePencilOffsetModifierData // 392 bytes [#433]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    int        offset_mode           //    4 bytes, offset 292
    float      loc[3]                //   12 bytes, offset 296
    float      rot[3]                //   12 bytes, offset 308
    float      scale[3]              //   12 bytes, offset 320
    float      stroke_loc[3]         //   12 bytes, offset 332
    float      stroke_rot[3]         //   12 bytes, offset 344
    float      stroke_scale[3]       //   12 bytes, offset 356
    int        seed                  //    4 bytes, offset 368
    int        stroke_step           //    4 bytes, offset 372
    int        stroke_start_offset   //    4 bytes, offset 376
    char       _pad1[4]              //    4 bytes, offset 380
    void       *_pad2                //    8 bytes, offset 384
struct GreasePencilNoiseModifierData // 336 bytes [#434]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    float      factor                //    4 bytes, offset 292
    float      factor_strength       //    4 bytes, offset 296
    float      factor_thickness      //    4 bytes, offset 300
    float      factor_uvs            //    4 bytes, offset 304
    float      noise_scale           //    4 bytes, offset 308
    float      noise_offset          //    4 bytes, offset 312
    short      noise_mode            //    2 bytes, offset 316
    char       _pad[2]               //    2 bytes, offset 318
    int        step                  //    4 bytes, offset 320
    int        seed                  //    4 bytes, offset 324
    void       *_pad1                //    8 bytes, offset 328
struct GreasePencilMirrorModifierData // 304 bytes [#435]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *object               //    8 bytes, offset 288
    int        flag                  //    4 bytes, offset 296
    char       _pad[4]               //    4 bytes, offset 300
struct GreasePencilThickModifierData // 312 bytes [#436]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    float      thickness_fac         //    4 bytes, offset 292
    float      thickness             //    4 bytes, offset 296
    char       _pad[4]               //    4 bytes, offset 300
    void       *_pad1                //    8 bytes, offset 304
struct GreasePencilLatticeModifierData // 304 bytes [#437]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *object               //    8 bytes, offset 288
    float      strength              //    4 bytes, offset 296
    char       _pad[4]               //    4 bytes, offset 300
struct GreasePencilDashModifierSegment // 88 bytes [#438]
    char       name[64]              //   64 bytes, offset 0
    int        dash                  //    4 bytes, offset 64
    int        gap                   //    4 bytes, offset 68
    float      radius                //    4 bytes, offset 72
    float      opacity               //    4 bytes, offset 76
    int        mat_nr                //    4 bytes, offset 80
    int        flag                  //    4 bytes, offset 84
struct GreasePencilDashModifierData // 312 bytes [#439]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    GreasePencilDashModifierSegment *segments_array //    8 bytes, offset 288
    int        segments_num          //    4 bytes, offset 296
    int        segment_active_index  //    4 bytes, offset 300
    int        dash_offset           //    4 bytes, offset 304
    char       _pad[4]               //    4 bytes, offset 308
struct GreasePencilMultiModifierData // 328 bytes [#440]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    int        duplications          //    4 bytes, offset 292
    float      distance              //    4 bytes, offset 296
    float      offset                //    4 bytes, offset 300
    float      fading_center         //    4 bytes, offset 304
    float      fading_thickness      //    4 bytes, offset 308
    float      fading_opacity        //    4 bytes, offset 312
    int        _pad0                 //    4 bytes, offset 316
    void       *_pad                 //    8 bytes, offset 320
struct GreasePencilLengthModifierData // 352 bytes [#441]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    float      start_fac             //    4 bytes, offset 292
    float      end_fac               //    4 bytes, offset 296
    float      rand_start_fac        //    4 bytes, offset 300
    float      rand_end_fac          //    4 bytes, offset 304
    float      rand_offset           //    4 bytes, offset 308
    float      overshoot_fac         //    4 bytes, offset 312
    int        seed                  //    4 bytes, offset 316
    int        step                  //    4 bytes, offset 320
    int        mode                  //    4 bytes, offset 324
    char       _pad[4]               //    4 bytes, offset 328
    float      point_density         //    4 bytes, offset 332
    float      segment_influence     //    4 bytes, offset 336
    float      max_angle             //    4 bytes, offset 340
    void       *_pad1                //    8 bytes, offset 344
struct GreasePencilWeightAngleModifierData // 376 bytes [#442]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    float      min_weight            //    4 bytes, offset 292
    short      axis                  //    2 bytes, offset 296
    short      space                 //    2 bytes, offset 298
    float      angle                 //    4 bytes, offset 300
    char       target_vgname[64]     //   64 bytes, offset 304
    void       *_pad                 //    8 bytes, offset 368
struct GreasePencilArrayModifierData // 376 bytes [#443]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *object               //    8 bytes, offset 288
    int        count                 //    4 bytes, offset 296
    int        flag                  //    4 bytes, offset 300
    float      offset[3]             //   12 bytes, offset 304
    float      shift[3]              //   12 bytes, offset 316
    float      rnd_offset[3]         //   12 bytes, offset 328
    float      rnd_rot[3]            //   12 bytes, offset 340
    float      rnd_scale[3]          //   12 bytes, offset 352
    char       _pad[4]               //    4 bytes, offset 364
    int        seed                  //    4 bytes, offset 368
    int        mat_rpl               //    4 bytes, offset 372
struct GreasePencilWeightProximityModifierData // 376 bytes [#444]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    char       target_vgname[64]     //   64 bytes, offset 292
    float      min_weight            //    4 bytes, offset 356
    float      dist_start            //    4 bytes, offset 360
    float      dist_end              //    4 bytes, offset 364
    Object     *object               //    8 bytes, offset 368
struct GreasePencilHookModifierData // 456 bytes [#445]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *object               //    8 bytes, offset 288
    char       subtarget[64]         //   64 bytes, offset 296
    char       _pad[4]               //    4 bytes, offset 360
    int        flag                  //    4 bytes, offset 364
    char       falloff_type          //    1 bytes, offset 368
    char       _pad1[3]              //    3 bytes, offset 369
    float      parentinv[4][4]       //   64 bytes, offset 372
    float      cent[3]               //   12 bytes, offset 436
    float      falloff               //    4 bytes, offset 448
    float      force                 //    4 bytes, offset 452
struct GreasePencilLineartModifierData // 464 bytes [#446]
    ModifierData modifier            //  120 bytes, offset 0
    ushort     edge_types            //    2 bytes, offset 120
    char       source_type           //    1 bytes, offset 122
    char       use_multiple_levels   //    1 bytes, offset 123
    short      level_start           //    2 bytes, offset 124
    short      level_end             //    2 bytes, offset 126
    Object     *source_camera        //    8 bytes, offset 128
    Object     *light_contour_object //    8 bytes, offset 136
    Object     *source_object        //    8 bytes, offset 144
    Collection *source_collection    //    8 bytes, offset 152
    Material   *target_material      //    8 bytes, offset 160
    char       target_layer[64]      //   64 bytes, offset 168
    char       source_vertex_group[64] //   64 bytes, offset 232
    char       vgname[64]            //   64 bytes, offset 296
    float      overscan              //    4 bytes, offset 360
    float      shadow_camera_fov     //    4 bytes, offset 364
    float      shadow_camera_size    //    4 bytes, offset 368
    float      shadow_camera_near    //    4 bytes, offset 372
    float      shadow_camera_far     //    4 bytes, offset 376
    float      opacity               //    4 bytes, offset 380
    short      thickness             //    2 bytes, offset 384
    char       mask_switches         //    1 bytes, offset 386
    char       material_mask_bits    //    1 bytes, offset 387
    char       intersection_mask     //    1 bytes, offset 388
    char       shadow_selection      //    1 bytes, offset 389
    char       silhouette_selection  //    1 bytes, offset 390
    char       _pad[1]               //    1 bytes, offset 391
    float      crease_threshold      //    4 bytes, offset 392
    float      angle_splitting_threshold //    4 bytes, offset 396
    float      chain_smooth_tolerance //    4 bytes, offset 400
    float      chaining_image_threshold //    4 bytes, offset 404
    int        calculation_flags     //    4 bytes, offset 408
    int        flags                 //    4 bytes, offset 412
    float      stroke_depth_offset   //    4 bytes, offset 416
    char       level_start_override  //    1 bytes, offset 420
    char       level_end_override    //    1 bytes, offset 421
    short      edge_types_override   //    2 bytes, offset 422
    char       shadow_selection_override //    1 bytes, offset 424
    char       shadow_use_silhouette_override //    1 bytes, offset 425
    char       _pad2[6]              //    6 bytes, offset 426
    LineartCache *shared_cache       //    8 bytes, offset 432
    LineartCache *cache              //    8 bytes, offset 440
    LineartData *la_data_ptr         //    8 bytes, offset 448
    LineartModifierRuntime *runtime  //    8 bytes, offset 456
struct GreasePencilArmatureModifierData // 304 bytes [#447]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *object               //    8 bytes, offset 288
    short      deformflag            //    2 bytes, offset 296
    char       _pad[6]               //    6 bytes, offset 298
struct GreasePencilTimeModifierSegment // 80 bytes [#448]
    char       name[64]              //   64 bytes, offset 0
    int        segment_start         //    4 bytes, offset 64
    int        segment_end           //    4 bytes, offset 68
    int        segment_mode          //    4 bytes, offset 72
    int        segment_repeat        //    4 bytes, offset 76
struct GreasePencilTimeModifierData // 328 bytes [#449]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        flag                  //    4 bytes, offset 288
    int        offset                //    4 bytes, offset 292
    float      frame_scale           //    4 bytes, offset 296
    int        mode                  //    4 bytes, offset 300
    int        sfra                  //    4 bytes, offset 304
    int        efra                  //    4 bytes, offset 308
    GreasePencilTimeModifierSegment *segments_array //    8 bytes, offset 312
    int        segments_num          //    4 bytes, offset 320
    int        segment_active_index  //    4 bytes, offset 324
struct GreasePencilEnvelopeModifierData // 312 bytes [#450]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    int        mode                  //    4 bytes, offset 288
    int        mat_nr                //    4 bytes, offset 292
    float      thickness             //    4 bytes, offset 296
    float      strength              //    4 bytes, offset 300
    int        skip                  //    4 bytes, offset 304
    int        spread                //    4 bytes, offset 308
struct GreasePencilOutlineModifierData // 320 bytes [#451]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *object               //    8 bytes, offset 288
    int        flag                  //    4 bytes, offset 296
    int        thickness             //    4 bytes, offset 300
    float      sample_length         //    4 bytes, offset 304
    int        subdiv                //    4 bytes, offset 308
    Material   *outline_material     //    8 bytes, offset 312
struct GreasePencilShrinkwrapModifierData // 336 bytes [#452]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    Object     *target               //    8 bytes, offset 288
    Object     *aux_target           //    8 bytes, offset 296
    float      keep_dist             //    4 bytes, offset 304
    short      shrink_type           //    2 bytes, offset 308
    char       shrink_opts           //    1 bytes, offset 310
    char       shrink_mode           //    1 bytes, offset 311
    float      proj_limit            //    4 bytes, offset 312
    char       proj_axis             //    1 bytes, offset 316
    char       subsurf_levels        //    1 bytes, offset 317
    char       _pad[2]               //    2 bytes, offset 318
    float      smooth_factor         //    4 bytes, offset 320
    int        smooth_step           //    4 bytes, offset 324
    ShrinkwrapTreeData *cache_data   //    8 bytes, offset 328
struct GreasePencilBuildModifierData // 416 bytes [#453]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    float      start_frame           //    4 bytes, offset 288
    float      end_frame             //    4 bytes, offset 292
    float      start_delay           //    4 bytes, offset 296
    float      length                //    4 bytes, offset 300
    short      flag                  //    2 bytes, offset 304
    short      mode                  //    2 bytes, offset 306
    short      transition            //    2 bytes, offset 308
    short      time_alignment        //    2 bytes, offset 310
    float      speed_fac             //    4 bytes, offset 312
    float      speed_maxgap          //    4 bytes, offset 316
    short      time_mode             //    2 bytes, offset 320
    char       _pad[6]               //    6 bytes, offset 322
    Object     *object               //    8 bytes, offset 328
    float      percentage_fac        //    4 bytes, offset 336
    float      fade_fac              //    4 bytes, offset 340
    char       target_vgname[64]     //   64 bytes, offset 344
    float      fade_opacity_strength //    4 bytes, offset 408
    float      fade_thickness_strength //    4 bytes, offset 412
struct GreasePencilSimplifyModifierData // 312 bytes [#454]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    short      mode                  //    2 bytes, offset 288
    char       _pad[4]               //    4 bytes, offset 290
    short      step                  //    2 bytes, offset 294
    float      factor                //    4 bytes, offset 296
    float      length                //    4 bytes, offset 300
    float      sharp_threshold       //    4 bytes, offset 304
    float      distance              //    4 bytes, offset 308
struct GreasePencilTextureModifierData // 328 bytes [#455]
    ModifierData modifier            //  120 bytes, offset 0
    GreasePencilModifierInfluenceData influence //  168 bytes, offset 120
    float      uv_offset             //    4 bytes, offset 288
    float      uv_scale              //    4 bytes, offset 292
    float      fill_rotation         //    4 bytes, offset 296
    float      fill_offset[2]        //    8 bytes, offset 300
    float      fill_scale            //    4 bytes, offset 308
    int        layer_pass            //    4 bytes, offset 312
    short      fit_method            //    2 bytes, offset 316
    short      mode                  //    2 bytes, offset 318
    float      alignment_rotation    //    4 bytes, offset 320
    char       _pad[4]               //    4 bytes, offset 324
struct MovieClipUser // 8 bytes [#456]
    int        framenr               //    4 bytes, offset 0
    short      render_size           //    2 bytes, offset 4
    short      render_flag           //    2 bytes, offset 6
struct MovieClipProxy // 776 bytes [#457]
    char       dir[768]              //  768 bytes, offset 0
    short      tc                    //    2 bytes, offset 768
    short      quality               //    2 bytes, offset 770
    short      build_size_flag       //    2 bytes, offset 772
    short      build_tc_flag         //    2 bytes, offset 774
struct MovieClip_RuntimeGPUTexture // 48 bytes [#458]
    void       *next                 //    8 bytes, offset 0
    void       *prev                 //    8 bytes, offset 8
    MovieClipUser user               //    8 bytes, offset 16
    GPUTexture *gputexture[3]        //   24 bytes, offset 24
struct MovieClip_Runtime // 16 bytes [#459]
    ListBase   gputextures           //   16 bytes, offset 0
struct MovieClip // 2568 bytes, is ID [#460]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    char       name[1024]            // 1024 bytes, offset 232
    int        source                //    4 bytes, offset 1256
    int        _pad                  //    4 bytes, offset 1260
    int        lastsize[2]           //    8 bytes, offset 1264
    float      aspx                  //    4 bytes, offset 1272
    float      aspy                  //    4 bytes, offset 1276
    MovieReader *anim                //    8 bytes, offset 1280
    MovieClipCache *cache            //    8 bytes, offset 1288
    bGPdata    *gpd                  //    8 bytes, offset 1296
    MovieTracking tracking           //  384 bytes, offset 1304
    void       *tracking_context     //    8 bytes, offset 1688
    MovieClipProxy proxy             //  776 bytes, offset 1696
    int        flag                  //    4 bytes, offset 2472
    int        len                   //    4 bytes, offset 2476
    int        start_frame           //    4 bytes, offset 2480
    int        frame_offset          //    4 bytes, offset 2484
    ColorManagedColorspaceSettings colorspace_settings //   64 bytes, offset 2488
    MovieClip_Runtime runtime        //   16 bytes, offset 2552
struct MovieClipScopes // 136 bytes [#461]
    short      ok                    //    2 bytes, offset 0
    short      use_track_mask        //    2 bytes, offset 2
    int        track_preview_height  //    4 bytes, offset 4
    int        frame_width           //    4 bytes, offset 8
    int        frame_height          //    4 bytes, offset 12
    MovieTrackingMarker undist_marker //   64 bytes, offset 16
    ImBuf      *track_search         //    8 bytes, offset 80
    ImBuf      *track_preview        //    8 bytes, offset 88
    float      track_pos[2]          //    8 bytes, offset 96
    short      track_disabled        //    2 bytes, offset 104
    short      track_locked          //    2 bytes, offset 106
    int        scene_framenr         //    4 bytes, offset 108
    MovieTrackingTrack *track        //    8 bytes, offset 112
    MovieTrackingMarker *marker      //    8 bytes, offset 120
    float      slide_scale[2]        //    8 bytes, offset 128
struct bActionModifier // 72 bytes [#462]
    bActionModifier *next            //    8 bytes, offset 0
    bActionModifier *prev            //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      flag                  //    2 bytes, offset 18
    char       channel[32]           //   32 bytes, offset 20
    float      noisesize             //    4 bytes, offset 52
    float      turbul                //    4 bytes, offset 56
    short      channels              //    2 bytes, offset 60
    short      no_rot_axis           //    2 bytes, offset 62
    Object     *ob                   //    8 bytes, offset 64
struct bActionStrip // 168 bytes [#463]
    bActionStrip *next               //    8 bytes, offset 0
    bActionStrip *prev               //    8 bytes, offset 8
    short      flag                  //    2 bytes, offset 16
    short      mode                  //    2 bytes, offset 18
    short      stride_axis           //    2 bytes, offset 20
    short      curmod                //    2 bytes, offset 22
    Ipo        *ipo                  //    8 bytes, offset 24
    bAction    *act                  //    8 bytes, offset 32
    Object     *object               //    8 bytes, offset 40
    float      start                 //    4 bytes, offset 48
    float      end                   //    4 bytes, offset 52
    float      actstart              //    4 bytes, offset 56
    float      actend                //    4 bytes, offset 60
    float      actoffs               //    4 bytes, offset 64
    float      stridelen             //    4 bytes, offset 68
    float      repeat                //    4 bytes, offset 72
    float      scale                 //    4 bytes, offset 76
    float      blendin               //    4 bytes, offset 80
    float      blendout              //    4 bytes, offset 84
    char       stridechannel[32]     //   32 bytes, offset 88
    char       offs_bone[32]         //   32 bytes, offset 120
    ListBase   modifiers             //   16 bytes, offset 152
struct bNodeTreeInterfaceItem // 8 bytes [#464]
    char       item_type             //    1 bytes, offset 0
    char       _pad[7]               //    7 bytes, offset 1
struct bNodeTreeInterfaceSocket // 72 bytes [#465]
    bNodeTreeInterfaceItem item      //    8 bytes, offset 0
    char       *name                 //    8 bytes, offset 8
    char       *description          //    8 bytes, offset 16
    char       *socket_type          //    8 bytes, offset 24
    int        flag                  //    4 bytes, offset 32
    short      attribute_domain      //    2 bytes, offset 36
    short      default_input         //    2 bytes, offset 38
    char       *default_attribute_name //    8 bytes, offset 40
    char       *identifier           //    8 bytes, offset 48
    void       *socket_data          //    8 bytes, offset 56
    IDProperty *properties           //    8 bytes, offset 64
struct bNodeTreeInterfacePanel // 48 bytes [#466]
    bNodeTreeInterfaceItem item      //    8 bytes, offset 0
    char       *name                 //    8 bytes, offset 8
    char       *description          //    8 bytes, offset 16
    int        flag                  //    4 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 28
    bNodeTreeInterfaceItem **items_array //    8 bytes, offset 32
    int        items_num             //    4 bytes, offset 40
    int        identifier            //    4 bytes, offset 44
struct bNodeTreeInterface // 64 bytes [#467]
    bNodeTreeInterfacePanel root_panel //   48 bytes, offset 0
    int        active_index          //    4 bytes, offset 48
    int        next_uid              //    4 bytes, offset 52
    bNodeTreeInterfaceRuntimeHandle *runtime //    8 bytes, offset 56
struct bNodeStack // 48 bytes [#468]
    float      vec[4]                //   16 bytes, offset 0
    float      min                   //    4 bytes, offset 16
    float      max                   //    4 bytes, offset 20
    void       *data                 //    8 bytes, offset 24
    short      hasinput              //    2 bytes, offset 32
    short      hasoutput             //    2 bytes, offset 34
    short      datatype              //    2 bytes, offset 36
    short      sockettype            //    2 bytes, offset 38
    short      is_copy               //    2 bytes, offset 40
    short      external              //    2 bytes, offset 42
    char       _pad[4]               //    4 bytes, offset 44
struct bNodeSocket // 528 bytes [#469]
    bNodeSocket *next                //    8 bytes, offset 0
    bNodeSocket *prev                //    8 bytes, offset 8
    IDProperty *prop                 //    8 bytes, offset 16
    char       identifier[64]        //   64 bytes, offset 24
    char       name[64]              //   64 bytes, offset 88
    void       *storage              //    8 bytes, offset 152
    short      type                  //    2 bytes, offset 160
    short      flag                  //    2 bytes, offset 162
    short      limit                 //    2 bytes, offset 164
    short      in_out                //    2 bytes, offset 166
    bNodeSocketTypeHandle *typeinfo  //    8 bytes, offset 168
    char       idname[64]            //   64 bytes, offset 176
    void       *default_value        //    8 bytes, offset 240
    short      stack_index           //    2 bytes, offset 248
    char       display_shape         //    1 bytes, offset 250
    char       attribute_domain      //    1 bytes, offset 251
    char       _pad[4]               //    4 bytes, offset 252
    char       label[64]             //   64 bytes, offset 256
    char       short_label[64]       //   64 bytes, offset 320
    char       description[64]       //   64 bytes, offset 384
    char       *default_attribute_name //    8 bytes, offset 448
    int        own_index             //    4 bytes, offset 456
    int        to_index              //    4 bytes, offset 460
    bNodeLink  *link                 //    8 bytes, offset 464
    bNodeStack ns                    //   48 bytes, offset 472
    bNodeSocketRuntimeHandle *runtime //    8 bytes, offset 520
struct bNodePanelState // 8 bytes [#470]
    int        identifier            //    4 bytes, offset 0
    char       flag                  //    1 bytes, offset 4
    char       _pad[3]               //    3 bytes, offset 5
struct bNode // 376 bytes [#471]
    bNode      *next                 //    8 bytes, offset 0
    bNode      *prev                 //    8 bytes, offset 8
    ListBase   inputs                //   16 bytes, offset 16
    ListBase   outputs               //   16 bytes, offset 32
    char       name[64]              //   64 bytes, offset 48
    int        identifier            //    4 bytes, offset 112
    int        flag                  //    4 bytes, offset 116
    char       idname[64]            //   64 bytes, offset 120
    bNodeTypeHandle *typeinfo        //    8 bytes, offset 184
    short      type                  //    2 bytes, offset 192
    short      ui_order              //    2 bytes, offset 194
    short      custom1               //    2 bytes, offset 196
    short      custom2               //    2 bytes, offset 198
    float      custom3               //    4 bytes, offset 200
    float      custom4               //    4 bytes, offset 204
    int8_t     warning_propagation   //    1 bytes, offset 208
    char       _pad[7]               //    7 bytes, offset 209
    ID         *id                   //    8 bytes, offset 216
    void       *storage              //    8 bytes, offset 224
    IDProperty *prop                 //    8 bytes, offset 232
    bNode      *parent               //    8 bytes, offset 240
    float      location[2]           //    8 bytes, offset 248
    float      width                 //    4 bytes, offset 256
    float      height                //    4 bytes, offset 260
    float      locx                  //    4 bytes, offset 264
    float      locy                  //    4 bytes, offset 268
    float      offsetx               //    4 bytes, offset 272
    float      offsety               //    4 bytes, offset 276
    char       label[64]             //   64 bytes, offset 280
    float      color[3]              //   12 bytes, offset 344
    int        num_panel_states      //    4 bytes, offset 356
    bNodePanelState *panel_states_array //    8 bytes, offset 360
    bNodeRuntimeHandle *runtime      //    8 bytes, offset 368
struct bNodeInstanceKey // 4 bytes [#472]
    int        value                 //    4 bytes, offset 0
struct bNodeLink // 56 bytes [#473]
    bNodeLink  *next                 //    8 bytes, offset 0
    bNodeLink  *prev                 //    8 bytes, offset 8
    bNode      *fromnode             //    8 bytes, offset 16
    bNode      *tonode               //    8 bytes, offset 24
    bNodeSocket *fromsock            //    8 bytes, offset 32
    bNodeSocket *tosock              //    8 bytes, offset 40
    int        flag                  //    4 bytes, offset 48
    int        multi_input_socket_index //    4 bytes, offset 52
struct bNestedNodePath // 8 bytes [#474]
    int        node_id               //    4 bytes, offset 0
    int        id_in_node            //    4 bytes, offset 4
struct bNestedNodeRef // 16 bytes, is ID [#475]
    int        id                    //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
    bNestedNodePath path             //    8 bytes, offset 8
struct bNodeTree // 544 bytes, is ID [#476]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    ID         *owner_id             //    8 bytes, offset 216
    bNodeTreeTypeHandle *typeinfo    //    8 bytes, offset 224
    char       idname[64]            //   64 bytes, offset 232
    char       *description          //    8 bytes, offset 296
    bGPdata    *gpd                  //    8 bytes, offset 304
    float      view_center[2]        //    8 bytes, offset 312
    ListBase   nodes                 //   16 bytes, offset 320
    ListBase   links                 //   16 bytes, offset 336
    int        type                  //    4 bytes, offset 352
    int        cur_index             //    4 bytes, offset 356
    int        flag                  //    4 bytes, offset 360
    int        chunksize             //    4 bytes, offset 364
    int        execution_mode        //    4 bytes, offset 368
    int        precision             //    4 bytes, offset 372
    int        color_tag             //    4 bytes, offset 376
    int        default_group_node_width //    4 bytes, offset 380
    rctf       viewer_border         //   16 bytes, offset 384
    ListBase   inputs                //   16 bytes, offset 400
    ListBase   outputs               //   16 bytes, offset 416
    bNodeTreeInterface tree_interface //   64 bytes, offset 432
    NodeInstanceHashHandle *previews //    8 bytes, offset 496
    bNodeInstanceKey active_viewer_key //    4 bytes, offset 504
    int        nested_node_refs_num  //    4 bytes, offset 508
    bNestedNodeRef *nested_node_refs //    8 bytes, offset 512
    GeometryNodeAssetTraits *geometry_node_asset_traits //    8 bytes, offset 520
    PreviewImage *preview            //    8 bytes, offset 528
    bNodeTreeRuntimeHandle *runtime  //    8 bytes, offset 536
struct bNodeSocketValueInt // 16 bytes [#477]
    int        subtype               //    4 bytes, offset 0
    int        value                 //    4 bytes, offset 4
    int        min                   //    4 bytes, offset 8
    int        max                   //    4 bytes, offset 12
struct bNodeSocketValueFloat // 16 bytes [#478]
    int        subtype               //    4 bytes, offset 0
    float      value                 //    4 bytes, offset 4
    float      min                   //    4 bytes, offset 8
    float      max                   //    4 bytes, offset 12
struct bNodeSocketValueBoolean // 1 bytes [#479]
    char       value                 //    1 bytes, offset 0
struct bNodeSocketValueVector // 24 bytes [#480]
    int        subtype               //    4 bytes, offset 0
    float      value[3]              //   12 bytes, offset 4
    float      min                   //    4 bytes, offset 16
    float      max                   //    4 bytes, offset 20
struct bNodeSocketValueRotation // 12 bytes [#481]
    float      value_euler[3]        //   12 bytes, offset 0
struct bNodeSocketValueRGBA // 16 bytes [#482]
    float      value[4]              //   16 bytes, offset 0
struct bNodeSocketValueString // 1032 bytes [#483]
    int        subtype               //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
    char       value[1024]           // 1024 bytes, offset 8
struct bNodeSocketValueObject // 8 bytes [#484]
    Object     *value                //    8 bytes, offset 0
struct bNodeSocketValueImage // 8 bytes [#485]
    Image      *value                //    8 bytes, offset 0
struct bNodeSocketValueCollection // 8 bytes [#486]
    Collection *value                //    8 bytes, offset 0
struct bNodeSocketValueTexture // 8 bytes [#487]
    Tex        *value                //    8 bytes, offset 0
struct bNodeSocketValueMaterial // 8 bytes [#488]
    Material   *value                //    8 bytes, offset 0
struct bNodeSocketValueMenu // 16 bytes [#489]
    int        value                 //    4 bytes, offset 0
    int        runtime_flag          //    4 bytes, offset 4
    RuntimeNodeEnumItemsHandle *enum_items //    8 bytes, offset 8
struct GeometryNodeAssetTraits // 4 bytes [#490]
    int        flag                  //    4 bytes, offset 0
struct NodeFrame // 4 bytes [#491]
    short      flag                  //    2 bytes, offset 0
    short      label_size            //    2 bytes, offset 2
struct NodeReroute // 64 bytes [#492]
    char       type_idname[64]       //   64 bytes, offset 0
struct NodeImageAnim // 16 bytes [#493]
    int        frames                //    4 bytes, offset 0
    int        sfra                  //    4 bytes, offset 4
    int        nr                    //    4 bytes, offset 8
    char       cyclic                //    1 bytes, offset 12
    char       movie                 //    1 bytes, offset 13
    char       _pad[2]               //    2 bytes, offset 14
struct ColorCorrectionData // 24 bytes [#494]
    float      saturation            //    4 bytes, offset 0
    float      contrast              //    4 bytes, offset 4
    float      gamma                 //    4 bytes, offset 8
    float      gain                  //    4 bytes, offset 12
    float      lift                  //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeColorCorrection // 104 bytes [#495]
    ColorCorrectionData master       //   24 bytes, offset 0
    ColorCorrectionData shadows      //   24 bytes, offset 24
    ColorCorrectionData midtones     //   24 bytes, offset 48
    ColorCorrectionData highlights   //   24 bytes, offset 72
    float      startmidtones         //    4 bytes, offset 96
    float      endmidtones           //    4 bytes, offset 100
struct NodeBokehImage // 20 bytes [#496]
    float      angle                 //    4 bytes, offset 0
    int        flaps                 //    4 bytes, offset 4
    float      rounding              //    4 bytes, offset 8
    float      catadioptric          //    4 bytes, offset 12
    float      lensshift             //    4 bytes, offset 16
struct NodeBoxMask // 24 bytes [#497]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    float      rotation              //    4 bytes, offset 8
    float      height                //    4 bytes, offset 12
    float      width                 //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeEllipseMask // 24 bytes [#498]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    float      rotation              //    4 bytes, offset 8
    float      height                //    4 bytes, offset 12
    float      width                 //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeImageLayer // 68 bytes [#499]
    int        pass_index            //    4 bytes, offset 0
    char       pass_name[64]         //   64 bytes, offset 4
struct NodeBlurData // 40 bytes [#500]
    short      sizex                 //    2 bytes, offset 0
    short      sizey                 //    2 bytes, offset 2
    short      samples               //    2 bytes, offset 4
    short      maxspeed              //    2 bytes, offset 6
    short      minspeed              //    2 bytes, offset 8
    short      relative              //    2 bytes, offset 10
    short      aspect                //    2 bytes, offset 12
    short      curved                //    2 bytes, offset 14
    float      fac                   //    4 bytes, offset 16
    float      percentx              //    4 bytes, offset 20
    float      percenty              //    4 bytes, offset 24
    short      filtertype            //    2 bytes, offset 28
    char       bokeh                 //    1 bytes, offset 30
    char       gamma                 //    1 bytes, offset 31
    int        image_in_width        //    4 bytes, offset 32
    int        image_in_height       //    4 bytes, offset 36
struct NodeDBlurData // 28 bytes [#501]
    float      center_x              //    4 bytes, offset 0
    float      center_y              //    4 bytes, offset 4
    float      distance              //    4 bytes, offset 8
    float      angle                 //    4 bytes, offset 12
    float      spin                  //    4 bytes, offset 16
    float      zoom                  //    4 bytes, offset 20
    short      iter                  //    2 bytes, offset 24
    char       _pad[2]               //    2 bytes, offset 26
struct NodeBilateralBlurData // 12 bytes [#502]
    float      sigma_color           //    4 bytes, offset 0
    float      sigma_space           //    4 bytes, offset 4
    short      iter                  //    2 bytes, offset 8
    char       _pad[2]               //    2 bytes, offset 10
struct NodeKuwaharaData // 20 bytes [#503]
    short      size                  //    2 bytes, offset 0
    short      variation             //    2 bytes, offset 2
    int        uniformity            //    4 bytes, offset 4
    float      sharpness             //    4 bytes, offset 8
    float      eccentricity          //    4 bytes, offset 12
    char       high_precision        //    1 bytes, offset 16
    char       _pad[3]               //    3 bytes, offset 17
struct NodeAntiAliasingData // 12 bytes [#504]
    float      threshold             //    4 bytes, offset 0
    float      contrast_limit        //    4 bytes, offset 4
    float      corner_rounding       //    4 bytes, offset 8
struct NodeHueSat // 12 bytes [#505]
    float      hue                   //    4 bytes, offset 0
    float      sat                   //    4 bytes, offset 4
    float      val                   //    4 bytes, offset 8
struct NodeImageFile // 1368 bytes [#506]
    char       name[1024]            // 1024 bytes, offset 0
    ImageFormatData im_format        //  336 bytes, offset 1024
    int        sfra                  //    4 bytes, offset 1360
    int        efra                  //    4 bytes, offset 1364
struct NodeImageMultiFile // 1376 bytes [#507]
    char       base_path[1024]       // 1024 bytes, offset 0
    ImageFormatData format           //  336 bytes, offset 1024
    int        sfra                  //    4 bytes, offset 1360
    int        efra                  //    4 bytes, offset 1364
    int        active_input          //    4 bytes, offset 1368
    char       save_as_render        //    1 bytes, offset 1372
    char       _pad[3]               //    3 bytes, offset 1373
struct NodeImageMultiFileSocket // 1400 bytes [#508]
    short      use_render_format     //    2 bytes, offset 0
    short      use_node_format       //    2 bytes, offset 2
    char       save_as_render        //    1 bytes, offset 4
    char       _pad1[3]              //    3 bytes, offset 5
    char       path[1024]            // 1024 bytes, offset 8
    ImageFormatData format           //  336 bytes, offset 1032
    char       layer[30]             //   30 bytes, offset 1368
    char       _pad2[2]              //    2 bytes, offset 1398
struct NodeChroma // 44 bytes [#509]
    float      t1                    //    4 bytes, offset 0
    float      t2                    //    4 bytes, offset 4
    float      t3                    //    4 bytes, offset 8
    float      fsize                 //    4 bytes, offset 12
    float      fstrength             //    4 bytes, offset 16
    float      falpha                //    4 bytes, offset 20
    float      key[4]                //   16 bytes, offset 24
    short      algorithm             //    2 bytes, offset 40
    short      channel               //    2 bytes, offset 42
struct NodeTwoXYs // 24 bytes [#510]
    short      x1                    //    2 bytes, offset 0
    short      x2                    //    2 bytes, offset 2
    short      y1                    //    2 bytes, offset 4
    short      y2                    //    2 bytes, offset 6
    float      fac_x1                //    4 bytes, offset 8
    float      fac_x2                //    4 bytes, offset 12
    float      fac_y1                //    4 bytes, offset 16
    float      fac_y2                //    4 bytes, offset 20
struct NodeTwoFloats // 8 bytes [#511]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
struct NodeVertexCol // 64 bytes [#512]
    char       name[64]              //   64 bytes, offset 0
struct NodeCMPCombSepColor // 2 bytes [#513]
    uchar      mode                  //    1 bytes, offset 0
    uchar      ycc_mode              //    1 bytes, offset 1
struct NodeDefocus // 32 bytes [#514]
    char       bktype                //    1 bytes, offset 0
    char       _pad0                 //    1 bytes, offset 1
    char       preview               //    1 bytes, offset 2
    char       gamco                 //    1 bytes, offset 3
    short      samples               //    2 bytes, offset 4
    short      no_zbuf               //    2 bytes, offset 6
    float      fstop                 //    4 bytes, offset 8
    float      maxblur               //    4 bytes, offset 12
    float      bthresh               //    4 bytes, offset 16
    float      scale                 //    4 bytes, offset 20
    float      rotation              //    4 bytes, offset 24
    char       _pad1[4]              //    4 bytes, offset 28
struct NodeScriptDict // 16 bytes [#515]
    void       *dict                 //    8 bytes, offset 0
    void       *node                 //    8 bytes, offset 8
struct NodeGlare // 32 bytes [#516]
    char       type                  //    1 bytes, offset 0
    char       quality               //    1 bytes, offset 1
    char       iter                  //    1 bytes, offset 2
    char       angle                 //    1 bytes, offset 3
    char       _pad0                 //    1 bytes, offset 4
    char       size                  //    1 bytes, offset 5
    char       star_45               //    1 bytes, offset 6
    char       streaks               //    1 bytes, offset 7
    float      colmod                //    4 bytes, offset 8
    float      mix                   //    4 bytes, offset 12
    float      threshold             //    4 bytes, offset 16
    float      fade                  //    4 bytes, offset 20
    float      angle_ofs             //    4 bytes, offset 24
    char       _pad1[4]              //    4 bytes, offset 28
struct NodeTonemap // 32 bytes [#517]
    float      key                   //    4 bytes, offset 0
    float      offset                //    4 bytes, offset 4
    float      gamma                 //    4 bytes, offset 8
    float      f                     //    4 bytes, offset 12
    float      m                     //    4 bytes, offset 16
    float      a                     //    4 bytes, offset 20
    float      c                     //    4 bytes, offset 24
    int        type                  //    4 bytes, offset 28
struct NodeLensDist // 8 bytes [#518]
    short      jit                   //    2 bytes, offset 0
    short      proj                  //    2 bytes, offset 2
    short      fit                   //    2 bytes, offset 4
    char       _pad[2]               //    2 bytes, offset 6
struct NodeColorBalance // 96 bytes [#519]
    float      slope[3]              //   12 bytes, offset 0
    float      offset[3]             //   12 bytes, offset 12
    float      power[3]              //   12 bytes, offset 24
    float      offset_basis          //    4 bytes, offset 36
    char       _pad[4]               //    4 bytes, offset 40
    float      lift[3]               //   12 bytes, offset 44
    float      gamma[3]              //   12 bytes, offset 56
    float      gain[3]               //   12 bytes, offset 68
    float      input_temperature     //    4 bytes, offset 80
    float      input_tint            //    4 bytes, offset 84
    float      output_temperature    //    4 bytes, offset 88
    float      output_tint           //    4 bytes, offset 92
struct NodeColorspill // 20 bytes [#520]
    short      limchan               //    2 bytes, offset 0
    short      unspill               //    2 bytes, offset 2
    float      limscale              //    4 bytes, offset 4
    float      uspillr               //    4 bytes, offset 8
    float      uspillg               //    4 bytes, offset 12
    float      uspillb               //    4 bytes, offset 16
struct NodeConvertColorSpace // 128 bytes [#521]
    char       from_color_space[64]  //   64 bytes, offset 0
    char       to_color_space[64]    //   64 bytes, offset 64
struct NodeDilateErode // 1 bytes [#522]
    char       falloff               //    1 bytes, offset 0
struct NodeMask // 8 bytes [#523]
    int        size_x                //    4 bytes, offset 0
    int        size_y                //    4 bytes, offset 4
struct NodeSetAlpha // 1 bytes [#524]
    char       mode                  //    1 bytes, offset 0
struct NodeTexBase // 960 bytes [#525]
    TexMapping tex_mapping           //  144 bytes, offset 0
    ColorMapping color_mapping       //  816 bytes, offset 144
struct NodeTexSky // 1024 bytes [#526]
    NodeTexBase base                 //  960 bytes, offset 0
    int        sky_model             //    4 bytes, offset 960
    float      sun_direction[3]      //   12 bytes, offset 964
    float      turbidity             //    4 bytes, offset 976
    float      ground_albedo         //    4 bytes, offset 980
    float      sun_size              //    4 bytes, offset 984
    float      sun_intensity         //    4 bytes, offset 988
    float      sun_elevation         //    4 bytes, offset 992
    float      sun_rotation          //    4 bytes, offset 996
    float      altitude              //    4 bytes, offset 1000
    float      air_density           //    4 bytes, offset 1004
    float      dust_density          //    4 bytes, offset 1008
    float      ozone_density         //    4 bytes, offset 1012
    char       sun_disc              //    1 bytes, offset 1016
    char       _pad[7]               //    7 bytes, offset 1017
struct NodeTexImage // 1024 bytes [#527]
    NodeTexBase base                 //  960 bytes, offset 0
    ImageUser  iuser                 //   40 bytes, offset 960
    int        color_space           //    4 bytes, offset 1000
    int        projection            //    4 bytes, offset 1004
    float      projection_blend      //    4 bytes, offset 1008
    int        interpolation         //    4 bytes, offset 1012
    int        extension             //    4 bytes, offset 1016
    char       _pad[4]               //    4 bytes, offset 1020
struct NodeTexChecker // 960 bytes [#528]
    NodeTexBase base                 //  960 bytes, offset 0
struct NodeTexBrick // 976 bytes [#529]
    NodeTexBase base                 //  960 bytes, offset 0
    int        offset_freq           //    4 bytes, offset 960
    int        squash_freq           //    4 bytes, offset 964
    float      offset                //    4 bytes, offset 968
    float      squash                //    4 bytes, offset 972
struct NodeTexEnvironment // 1016 bytes [#530]
    NodeTexBase base                 //  960 bytes, offset 0
    ImageUser  iuser                 //   40 bytes, offset 960
    int        color_space           //    4 bytes, offset 1000
    int        projection            //    4 bytes, offset 1004
    int        interpolation         //    4 bytes, offset 1008
    char       _pad[4]               //    4 bytes, offset 1012
struct NodeTexGabor // 968 bytes [#531]
    NodeTexBase base                 //  960 bytes, offset 0
    char       type                  //    1 bytes, offset 960
    char       _pad[7]               //    7 bytes, offset 961
struct NodeTexGradient // 968 bytes [#532]
    NodeTexBase base                 //  960 bytes, offset 0
    int        gradient_type         //    4 bytes, offset 960
    char       _pad[4]               //    4 bytes, offset 964
struct NodeTexNoise // 968 bytes [#533]
    NodeTexBase base                 //  960 bytes, offset 0
    int        dimensions            //    4 bytes, offset 960
    uchar      type                  //    1 bytes, offset 964
    uchar      normalize             //    1 bytes, offset 965
    char       _pad[2]               //    2 bytes, offset 966
struct NodeTexVoronoi // 984 bytes [#534]
    NodeTexBase base                 //  960 bytes, offset 0
    int        dimensions            //    4 bytes, offset 960
    int        feature               //    4 bytes, offset 964
    int        distance              //    4 bytes, offset 968
    int        normalize             //    4 bytes, offset 972
    int        coloring              //    4 bytes, offset 976
    char       _pad[4]               //    4 bytes, offset 980
struct NodeTexMusgrave // 968 bytes [#535]
    NodeTexBase base                 //  960 bytes, offset 0
    int        musgrave_type         //    4 bytes, offset 960
    int        dimensions            //    4 bytes, offset 964
struct NodeTexWave // 976 bytes [#536]
    NodeTexBase base                 //  960 bytes, offset 0
    int        wave_type             //    4 bytes, offset 960
    int        bands_direction       //    4 bytes, offset 964
    int        rings_direction       //    4 bytes, offset 968
    int        wave_profile          //    4 bytes, offset 972
struct NodeTexMagic // 968 bytes [#537]
    NodeTexBase base                 //  960 bytes, offset 0
    int        depth                 //    4 bytes, offset 960
    char       _pad[4]               //    4 bytes, offset 964
struct NodeShaderAttribute // 264 bytes [#538]
    char       name[256]             //  256 bytes, offset 0
    int        type                  //    4 bytes, offset 256
    char       _pad[4]               //    4 bytes, offset 260
struct NodeShaderVectTransform // 16 bytes [#539]
    int        type                  //    4 bytes, offset 0
    int        convert_from          //    4 bytes, offset 4
    int        convert_to            //    4 bytes, offset 8
    char       _pad[4]               //    4 bytes, offset 12
struct NodeShaderTexPointDensity // 1232 bytes [#540]
    NodeTexBase base                 //  960 bytes, offset 0
    short      point_source          //    2 bytes, offset 960
    char       _pad[2]               //    2 bytes, offset 962
    int        particle_system       //    4 bytes, offset 964
    float      radius                //    4 bytes, offset 968
    int        resolution            //    4 bytes, offset 972
    short      space                 //    2 bytes, offset 976
    short      interpolation         //    2 bytes, offset 978
    short      color_source          //    2 bytes, offset 980
    short      ob_color_source       //    2 bytes, offset 982
    PointDensity pd                  //  176 bytes, offset 984
    int        cached_resolution     //    4 bytes, offset 1160
    char       vertex_attribute_name[68] //   68 bytes, offset 1164
struct NodeShaderPrincipled // 4 bytes [#541]
    char       use_subsurface_auto_radius //    1 bytes, offset 0
    char       _pad[3]               //    3 bytes, offset 1
struct NodeShaderHairPrincipled // 8 bytes [#542]
    short      model                 //    2 bytes, offset 0
    short      parametrization       //    2 bytes, offset 2
    char       _pad[4]               //    4 bytes, offset 4
struct TexNodeOutput // 64 bytes [#543]
    char       name[64]              //   64 bytes, offset 0
struct NodeKeyingScreenData // 68 bytes [#544]
    char       tracking_object[64]   //   64 bytes, offset 0
    float      smoothness            //    4 bytes, offset 64
struct NodeKeyingData // 48 bytes [#545]
    float      screen_balance        //    4 bytes, offset 0
    float      despill_factor        //    4 bytes, offset 4
    float      despill_balance       //    4 bytes, offset 8
    int        edge_kernel_radius    //    4 bytes, offset 12
    float      edge_kernel_tolerance //    4 bytes, offset 16
    float      clip_black            //    4 bytes, offset 20
    float      clip_white            //    4 bytes, offset 24
    int        dilate_distance       //    4 bytes, offset 28
    int        feather_distance      //    4 bytes, offset 32
    int        feather_falloff       //    4 bytes, offset 36
    int        blur_pre              //    4 bytes, offset 40
    int        blur_post             //    4 bytes, offset 44
struct NodeTrackPosData // 128 bytes [#546]
    char       tracking_object[64]   //   64 bytes, offset 0
    char       track_name[64]        //   64 bytes, offset 64
struct NodeTranslateData // 4 bytes [#547]
    char       wrap_axis             //    1 bytes, offset 0
    char       relative              //    1 bytes, offset 1
    short      interpolation         //    2 bytes, offset 2
struct NodePlaneTrackDeformData // 136 bytes [#548]
    char       tracking_object[64]   //   64 bytes, offset 0
    char       plane_track_name[64]  //   64 bytes, offset 64
    char       flag                  //    1 bytes, offset 128
    char       motion_blur_samples   //    1 bytes, offset 129
    char       _pad[2]               //    2 bytes, offset 130
    float      motion_blur_shutter   //    4 bytes, offset 132
struct NodeShaderScript // 1104 bytes [#549]
    int        mode                  //    4 bytes, offset 0
    int        flag                  //    4 bytes, offset 4
    char       filepath[1024]        // 1024 bytes, offset 8
    char       bytecode_hash[64]     //   64 bytes, offset 1032
    char       *bytecode             //    8 bytes, offset 1096
struct NodeShaderTangent // 72 bytes [#550]
    int        direction_type        //    4 bytes, offset 0
    int        axis                  //    4 bytes, offset 4
    char       uv_map[64]            //   64 bytes, offset 8
struct NodeShaderNormalMap // 68 bytes [#551]
    int        space                 //    4 bytes, offset 0
    char       uv_map[64]            //   64 bytes, offset 4
struct NodeShaderUVMap // 64 bytes [#552]
    char       uv_map[64]            //   64 bytes, offset 0
struct NodeShaderVertexColor // 64 bytes [#553]
    char       layer_name[64]        //   64 bytes, offset 0
struct NodeShaderTexIES // 1028 bytes [#554]
    int        mode                  //    4 bytes, offset 0
    char       filepath[1024]        // 1024 bytes, offset 4
struct NodeShaderOutputAOV // 64 bytes [#555]
    char       name[64]              //   64 bytes, offset 0
struct NodeSunBeams // 12 bytes [#556]
    float      source[2]             //    8 bytes, offset 0
    float      ray_length            //    4 bytes, offset 8
struct CryptomatteEntry // 88 bytes [#557]
    CryptomatteEntry *next           //    8 bytes, offset 0
    CryptomatteEntry *prev           //    8 bytes, offset 8
    float      encoded_hash          //    4 bytes, offset 16
    char       name[64]              //   64 bytes, offset 20
    char       _pad[4]               //    4 bytes, offset 84
struct CryptomatteLayer // 80 bytes [#558]
    CryptomatteEntry *next           //    8 bytes, offset 0
    CryptomatteEntry *prev           //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
struct NodeCryptomatte_Runtime // 40 bytes [#559]
    ListBase   layers                //   16 bytes, offset 0
    float      add[3]                //   12 bytes, offset 16
    float      remove[3]             //   12 bytes, offset 28
struct NodeCryptomatte // 176 bytes [#560]
    ImageUser  iuser                 //   40 bytes, offset 0
    ListBase   entries               //   16 bytes, offset 40
    char       layer_name[64]        //   64 bytes, offset 56
    char       *matte_id             //    8 bytes, offset 120
    int        num_inputs            //    4 bytes, offset 128
    char       _pad[4]               //    4 bytes, offset 132
    NodeCryptomatte_Runtime runtime  //   40 bytes, offset 136
struct NodeDenoise // 4 bytes [#561]
    char       hdr                   //    1 bytes, offset 0
    char       prefilter             //    1 bytes, offset 1
    char       quality               //    1 bytes, offset 2
    char       _pad[1]               //    1 bytes, offset 3
struct NodeMapRange // 8 bytes [#562]
    uchar      data_type             //    1 bytes, offset 0
    uchar      interpolation_type    //    1 bytes, offset 1
    uchar      clamp                 //    1 bytes, offset 2
    char       _pad[5]               //    5 bytes, offset 3
struct NodeRandomValue // 1 bytes [#563]
    uchar      data_type             //    1 bytes, offset 0
struct NodeAccumulateField // 2 bytes [#564]
    uchar      data_type             //    1 bytes, offset 0
    uchar      domain                //    1 bytes, offset 1
struct NodeInputBool // 1 bytes [#565]
    uchar      boolean               //    1 bytes, offset 0
struct NodeInputInt // 4 bytes [#566]
    int        integer               //    4 bytes, offset 0
struct NodeInputRotation // 12 bytes [#567]
    float      rotation_euler[3]     //   12 bytes, offset 0
struct NodeInputVector // 12 bytes [#568]
    float      vector[3]             //   12 bytes, offset 0
struct NodeInputColor // 16 bytes [#569]
    float      color[4]              //   16 bytes, offset 0
struct NodeInputString // 8 bytes [#570]
    char       *string               //    8 bytes, offset 0
struct NodeGeometryExtrudeMesh // 1 bytes [#571]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryObjectInfo // 1 bytes [#572]
    uchar      transform_space       //    1 bytes, offset 0
struct NodeGeometryPointsToVolume // 2 bytes [#573]
    uchar      resolution_mode       //    1 bytes, offset 0
    uchar      input_type_radius     //    1 bytes, offset 1
struct NodeGeometryCollectionInfo // 1 bytes [#574]
    uchar      transform_space       //    1 bytes, offset 0
struct NodeGeometryProximity // 1 bytes [#575]
    uchar      target_element        //    1 bytes, offset 0
struct NodeGeometryVolumeToMesh // 1 bytes [#576]
    uchar      resolution_mode       //    1 bytes, offset 0
struct NodeGeometryMeshToVolume // 1 bytes [#577]
    uchar      resolution_mode       //    1 bytes, offset 0
struct NodeGeometrySubdivisionSurface // 2 bytes [#578]
    uchar      uv_smooth             //    1 bytes, offset 0
    uchar      boundary_smooth       //    1 bytes, offset 1
struct NodeGeometryMeshCircle // 1 bytes [#579]
    uchar      fill_type             //    1 bytes, offset 0
struct NodeGeometryMeshCylinder // 1 bytes [#580]
    uchar      fill_type             //    1 bytes, offset 0
struct NodeGeometryMeshCone // 1 bytes [#581]
    uchar      fill_type             //    1 bytes, offset 0
struct NodeGeometryMergeByDistance // 1 bytes [#582]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryMeshLine // 2 bytes [#583]
    uchar      mode                  //    1 bytes, offset 0
    uchar      count_mode            //    1 bytes, offset 1
struct NodeSwitch // 1 bytes [#584]
    uchar      input_type            //    1 bytes, offset 0
struct NodeEnumItem // 24 bytes [#585]
    char       *name                 //    8 bytes, offset 0
    char       *description          //    8 bytes, offset 8
    int        identifier            //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeEnumDefinition // 24 bytes [#586]
    NodeEnumItem *items_array        //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        active_index          //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeMenuSwitch // 32 bytes [#587]
    NodeEnumDefinition enum_definition //   24 bytes, offset 0
    uchar      data_type             //    1 bytes, offset 24
    char       _pad[7]               //    7 bytes, offset 25
struct NodeGeometryCurveSplineType // 1 bytes [#588]
    uchar      spline_type           //    1 bytes, offset 0
struct NodeGeometrySetCurveHandlePositions // 1 bytes [#589]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurveSetHandles // 2 bytes [#590]
    uchar      handle_type           //    1 bytes, offset 0
    uchar      mode                  //    1 bytes, offset 1
struct NodeGeometryCurveSelectHandles // 2 bytes [#591]
    uchar      handle_type           //    1 bytes, offset 0
    uchar      mode                  //    1 bytes, offset 1
struct NodeGeometryCurvePrimitiveArc // 1 bytes [#592]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurvePrimitiveLine // 1 bytes [#593]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurvePrimitiveBezierSegment // 1 bytes [#594]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurvePrimitiveCircle // 1 bytes [#595]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurvePrimitiveQuad // 1 bytes [#596]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurveResample // 2 bytes [#597]
    uchar      mode                  //    1 bytes, offset 0
    uchar      keep_last_segment     //    1 bytes, offset 1
struct NodeGeometryCurveFillet // 1 bytes [#598]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurveTrim // 1 bytes [#599]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurveToPoints // 1 bytes [#600]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryCurveSample // 4 bytes [#601]
    uchar      mode                  //    1 bytes, offset 0
    int8_t     use_all_curves        //    1 bytes, offset 1
    int8_t     data_type             //    1 bytes, offset 2
    char       _pad[1]               //    1 bytes, offset 3
struct NodeGeometryTransferAttribute // 4 bytes [#602]
    int8_t     data_type             //    1 bytes, offset 0
    int8_t     domain                //    1 bytes, offset 1
    uchar      mode                  //    1 bytes, offset 2
    char       _pad[1]               //    1 bytes, offset 3
struct NodeGeometrySampleIndex // 4 bytes [#603]
    int8_t     data_type             //    1 bytes, offset 0
    int8_t     domain                //    1 bytes, offset 1
    int8_t     clamp                 //    1 bytes, offset 2
    char       _pad[1]               //    1 bytes, offset 3
struct NodeGeometryRaycast // 2 bytes [#604]
    uchar      mapping               //    1 bytes, offset 0
    int8_t     data_type             //    1 bytes, offset 1
struct NodeGeometryCurveFill // 1 bytes [#605]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryMeshToPoints // 1 bytes [#606]
    uchar      mode                  //    1 bytes, offset 0
struct NodeGeometryAttributeCaptureItem // 16 bytes [#607]
    int8_t     data_type             //    1 bytes, offset 0
    char       _pad[3]               //    3 bytes, offset 1
    int        identifier            //    4 bytes, offset 4
    char       *name                 //    8 bytes, offset 8
struct NodeGeometryAttributeCapture // 24 bytes [#608]
    int8_t     data_type             //    1 bytes, offset 0
    int8_t     domain                //    1 bytes, offset 1
    char       _pad[2]               //    2 bytes, offset 2
    int        next_identifier       //    4 bytes, offset 4
    NodeGeometryAttributeCaptureItem *capture_items //    8 bytes, offset 8
    int        capture_items_num     //    4 bytes, offset 16
    int        active_index          //    4 bytes, offset 20
struct NodeGeometryStoreNamedAttribute // 2 bytes [#609]
    int8_t     data_type             //    1 bytes, offset 0
    int8_t     domain                //    1 bytes, offset 1
struct NodeGeometryInputNamedAttribute // 1 bytes [#610]
    int8_t     data_type             //    1 bytes, offset 0
struct NodeGeometryStringToCurves // 4 bytes [#611]
    uchar      overflow              //    1 bytes, offset 0
    uchar      align_x               //    1 bytes, offset 1
    uchar      align_y               //    1 bytes, offset 2
    uchar      pivot_mode            //    1 bytes, offset 3
struct NodeGeometryDeleteGeometry // 2 bytes [#612]
    int8_t     domain                //    1 bytes, offset 0
    int8_t     mode                  //    1 bytes, offset 1
struct NodeGeometryDuplicateElements // 1 bytes [#613]
    int8_t     domain                //    1 bytes, offset 0
struct NodeGeometryMergeLayers // 1 bytes [#614]
    int8_t     mode                  //    1 bytes, offset 0
struct NodeGeometrySeparateGeometry // 1 bytes [#615]
    int8_t     domain                //    1 bytes, offset 0
struct NodeGeometryImageTexture // 2 bytes [#616]
    int8_t     interpolation         //    1 bytes, offset 0
    int8_t     extension             //    1 bytes, offset 1
struct NodeGeometryViewer // 2 bytes [#617]
    int8_t     data_type             //    1 bytes, offset 0
    int8_t     domain                //    1 bytes, offset 1
struct NodeGeometryUVUnwrap // 1 bytes [#618]
    uchar      method                //    1 bytes, offset 0
struct NodeSimulationItem // 16 bytes [#619]
    char       *name                 //    8 bytes, offset 0
    short      socket_type           //    2 bytes, offset 8
    short      attribute_domain      //    2 bytes, offset 10
    int        identifier            //    4 bytes, offset 12
struct NodeGeometrySimulationInput // 4 bytes [#620]
    int        output_node_id        //    4 bytes, offset 0
struct NodeGeometrySimulationOutput // 24 bytes [#621]
    NodeSimulationItem *items        //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        active_index          //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    int        _pad                  //    4 bytes, offset 20
struct NodeRepeatItem // 16 bytes [#622]
    char       *name                 //    8 bytes, offset 0
    short      socket_type           //    2 bytes, offset 8
    char       _pad[2]               //    2 bytes, offset 10
    int        identifier            //    4 bytes, offset 12
struct NodeGeometryRepeatInput // 4 bytes [#623]
    int        output_node_id        //    4 bytes, offset 0
struct NodeGeometryRepeatOutput // 24 bytes [#624]
    NodeRepeatItem *items            //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        active_index          //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    int        inspection_index      //    4 bytes, offset 20
struct NodeGeometryForeachGeometryElementInput // 4 bytes [#625]
    int        output_node_id        //    4 bytes, offset 0
struct NodeForeachGeometryElementInputItem // 16 bytes [#626]
    char       *name                 //    8 bytes, offset 0
    short      socket_type           //    2 bytes, offset 8
    char       _pad[2]               //    2 bytes, offset 10
    int        identifier            //    4 bytes, offset 12
struct NodeForeachGeometryElementMainItem // 16 bytes [#627]
    char       *name                 //    8 bytes, offset 0
    short      socket_type           //    2 bytes, offset 8
    char       _pad[2]               //    2 bytes, offset 10
    int        identifier            //    4 bytes, offset 12
struct NodeForeachGeometryElementGenerationItem // 16 bytes [#628]
    char       *name                 //    8 bytes, offset 0
    short      socket_type           //    2 bytes, offset 8
    uchar      domain                //    1 bytes, offset 10
    char       _pad[1]               //    1 bytes, offset 11
    int        identifier            //    4 bytes, offset 12
struct NodeForeachGeometryElementInputItems // 24 bytes [#629]
    NodeForeachGeometryElementInputItem *items //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        active_index          //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeForeachGeometryElementMainItems // 24 bytes [#630]
    NodeForeachGeometryElementMainItem *items //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        active_index          //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeForeachGeometryElementGenerationItems // 24 bytes [#631]
    NodeForeachGeometryElementGenerationItem *items //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        active_index          //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeGeometryForeachGeometryElementOutput // 80 bytes [#632]
    NodeForeachGeometryElementInputItems input_items //   24 bytes, offset 0
    NodeForeachGeometryElementMainItems main_items //   24 bytes, offset 24
    NodeForeachGeometryElementGenerationItems generation_items //   24 bytes, offset 48
    int        inspection_index      //    4 bytes, offset 72
    uchar      domain                //    1 bytes, offset 76
    char       _pad[3]               //    3 bytes, offset 77
struct IndexSwitchItem // 4 bytes [#633]
    int        identifier            //    4 bytes, offset 0
struct NodeIndexSwitch // 24 bytes [#634]
    IndexSwitchItem *items           //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        data_type             //    4 bytes, offset 12
    int        next_identifier       //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeGeometryDistributePointsInVolume // 1 bytes [#635]
    uchar      mode                  //    1 bytes, offset 0
struct NodeFunctionCompare // 4 bytes [#636]
    int8_t     operation             //    1 bytes, offset 0
    int8_t     data_type             //    1 bytes, offset 1
    int8_t     mode                  //    1 bytes, offset 2
    char       _pad[1]               //    1 bytes, offset 3
struct NodeCombSepColor // 1 bytes [#637]
    int8_t     mode                  //    1 bytes, offset 0
struct NodeShaderMix // 8 bytes [#638]
    int8_t     data_type             //    1 bytes, offset 0
    int8_t     factor_mode           //    1 bytes, offset 1
    int8_t     clamp_factor          //    1 bytes, offset 2
    int8_t     clamp_result          //    1 bytes, offset 3
    int8_t     blend_type            //    1 bytes, offset 4
    char       _pad[3]               //    3 bytes, offset 5
struct NodeGeometryLinearGizmo // 8 bytes [#639]
    int        color_id              //    4 bytes, offset 0
    int        draw_style            //    4 bytes, offset 4
struct NodeGeometryDialGizmo // 4 bytes [#640]
    int        color_id              //    4 bytes, offset 0
struct NodeGeometryTransformGizmo // 4 bytes [#641]
    int        flag                  //    4 bytes, offset 0
struct NodeGeometryBakeItem // 24 bytes [#642]
    char       *name                 //    8 bytes, offset 0
    short      socket_type           //    2 bytes, offset 8
    short      attribute_domain      //    2 bytes, offset 10
    int        identifier            //    4 bytes, offset 12
    int        flag                  //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct NodeGeometryBake // 24 bytes [#643]
    NodeGeometryBakeItem *items      //    8 bytes, offset 0
    int        items_num             //    4 bytes, offset 8
    int        next_identifier       //    4 bytes, offset 12
    int        active_index          //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
struct FluidVertexVelocity // 12 bytes [#644]
    float      vel[3]                //   12 bytes, offset 0
struct FluidsimSettings // 1240 bytes [#645]
    FluidsimModifierData *fmd        //    8 bytes, offset 0
    int        threads               //    4 bytes, offset 8
    char       _pad1[4]              //    4 bytes, offset 12
    short      type                  //    2 bytes, offset 16
    short      show_advancedoptions  //    2 bytes, offset 18
    short      resolutionxyz         //    2 bytes, offset 20
    short      previewresxyz         //    2 bytes, offset 22
    float      realsize              //    4 bytes, offset 24
    short      guiDisplayMode        //    2 bytes, offset 28
    short      renderDisplayMode     //    2 bytes, offset 30
    float      viscosityValue        //    4 bytes, offset 32
    short      viscosityMode         //    2 bytes, offset 36
    short      viscosityExponent     //    2 bytes, offset 38
    float      grav[3]               //   12 bytes, offset 40
    float      animStart             //    4 bytes, offset 52
    float      animEnd               //    4 bytes, offset 56
    int        bakeStart             //    4 bytes, offset 60
    int        bakeEnd               //    4 bytes, offset 64
    int        frameOffset           //    4 bytes, offset 68
    char       _pad2[4]              //    4 bytes, offset 72
    float      gstar                 //    4 bytes, offset 76
    int        maxRefine             //    4 bytes, offset 80
    float      iniVelx               //    4 bytes, offset 84
    float      iniVely               //    4 bytes, offset 88
    float      iniVelz               //    4 bytes, offset 92
    char       surfdataPath[1024]    // 1024 bytes, offset 96
    float      bbStart[3]            //   12 bytes, offset 1120
    float      bbSize[3]             //   12 bytes, offset 1132
    Ipo        *ipo                  //    8 bytes, offset 1144
    short      typeFlags             //    2 bytes, offset 1152
    char       domainNovecgen        //    1 bytes, offset 1154
    char       volumeInitType        //    1 bytes, offset 1155
    float      partSlipValue         //    4 bytes, offset 1156
    int        generateTracers       //    4 bytes, offset 1160
    float      generateParticles     //    4 bytes, offset 1164
    float      surfaceSmoothing      //    4 bytes, offset 1168
    int        surfaceSubdivs        //    4 bytes, offset 1172
    int        flag                  //    4 bytes, offset 1176
    float      particleInfSize       //    4 bytes, offset 1180
    float      particleInfAlpha      //    4 bytes, offset 1184
    float      farFieldSize          //    4 bytes, offset 1188
    FluidVertexVelocity *meshVelocities //    8 bytes, offset 1192
    int        totvert               //    4 bytes, offset 1200
    float      cpsTimeStart          //    4 bytes, offset 1204
    float      cpsTimeEnd            //    4 bytes, offset 1208
    float      cpsQuality            //    4 bytes, offset 1212
    float      attractforceStrength  //    4 bytes, offset 1216
    float      attractforceRadius    //    4 bytes, offset 1220
    float      velocityforceStrength //    4 bytes, offset 1224
    float      velocityforceRadius   //    4 bytes, offset 1228
    int        lastgoodframe         //    4 bytes, offset 1232
    float      animRate              //    4 bytes, offset 1236
struct PartDeflect // 232 bytes [#646]
    int        flag                  //    4 bytes, offset 0
    short      deflect               //    2 bytes, offset 4
    short      forcefield            //    2 bytes, offset 6
    short      falloff               //    2 bytes, offset 8
    short      shape                 //    2 bytes, offset 10
    short      tex_mode              //    2 bytes, offset 12
    short      kink                  //    2 bytes, offset 14
    short      kink_axis             //    2 bytes, offset 16
    short      zdir                  //    2 bytes, offset 18
    float      f_strength            //    4 bytes, offset 20
    float      f_damp                //    4 bytes, offset 24
    float      f_flow                //    4 bytes, offset 28
    float      f_wind_factor         //    4 bytes, offset 32
    char       _pad0[4]              //    4 bytes, offset 36
    float      f_size                //    4 bytes, offset 40
    float      f_power               //    4 bytes, offset 44
    float      maxdist               //    4 bytes, offset 48
    float      mindist               //    4 bytes, offset 52
    float      f_power_r             //    4 bytes, offset 56
    float      maxrad                //    4 bytes, offset 60
    float      minrad                //    4 bytes, offset 64
    float      pdef_damp             //    4 bytes, offset 68
    float      pdef_rdamp            //    4 bytes, offset 72
    float      pdef_perm             //    4 bytes, offset 76
    float      pdef_frict            //    4 bytes, offset 80
    float      pdef_rfrict           //    4 bytes, offset 84
    float      pdef_stickness        //    4 bytes, offset 88
    float      absorption            //    4 bytes, offset 92
    float      pdef_sbdamp           //    4 bytes, offset 96
    float      pdef_sbift            //    4 bytes, offset 100
    float      pdef_sboft            //    4 bytes, offset 104
    float      clump_fac             //    4 bytes, offset 108
    float      clump_pow             //    4 bytes, offset 112
    float      kink_freq             //    4 bytes, offset 116
    float      kink_shape            //    4 bytes, offset 120
    float      kink_amp              //    4 bytes, offset 124
    float      free_end              //    4 bytes, offset 128
    float      tex_nabla             //    4 bytes, offset 132
    Tex        *tex                  //    8 bytes, offset 136
    float      f_noise               //    4 bytes, offset 144
    int        seed                  //    4 bytes, offset 148
    float      drawvec1[4]           //   16 bytes, offset 152
    float      drawvec2[4]           //   16 bytes, offset 168
    float      drawvec_falloff_min[3] //   12 bytes, offset 184
    char       _pad1[4]              //    4 bytes, offset 196
    float      drawvec_falloff_max[3] //   12 bytes, offset 200
    char       _pad2[4]              //    4 bytes, offset 212
    Object     *f_source             //    8 bytes, offset 216
    float      pdef_cfrict           //    4 bytes, offset 224
    char       _pad[4]               //    4 bytes, offset 228
struct EffectorWeights // 72 bytes [#647]
    Collection *group                //    8 bytes, offset 0
    float      weight[14]            //   56 bytes, offset 8
    float      global_gravity        //    4 bytes, offset 64
    short      flag                  //    2 bytes, offset 68
    char       _pad[2]               //    2 bytes, offset 70
struct SBVertex // 16 bytes [#648]
    float      vec[4]                //   16 bytes, offset 0
struct SoftBody_Shared // 24 bytes [#649]
    PointCache *pointcache           //    8 bytes, offset 0
    ListBase   ptcaches              //   16 bytes, offset 8
struct SoftBody // 480 bytes [#650]
    int        totpoint              //    4 bytes, offset 0
    int        totspring             //    4 bytes, offset 4
    BodyPoint  *bpoint               //    8 bytes, offset 8
    BodySpring *bspring              //    8 bytes, offset 16
    char       _pad                  //    1 bytes, offset 24
    char       msg_lock              //    1 bytes, offset 25
    short      msg_value             //    2 bytes, offset 26
    float      nodemass              //    4 bytes, offset 28
    char       namedVG_Mass[64]      //   64 bytes, offset 32
    float      grav                  //    4 bytes, offset 96
    float      mediafrict            //    4 bytes, offset 100
    float      rklimit               //    4 bytes, offset 104
    float      physics_speed         //    4 bytes, offset 108
    float      goalspring            //    4 bytes, offset 112
    float      goalfrict             //    4 bytes, offset 116
    float      mingoal               //    4 bytes, offset 120
    float      maxgoal               //    4 bytes, offset 124
    float      defgoal               //    4 bytes, offset 128
    short      vertgroup             //    2 bytes, offset 132
    char       namedVG_Softgoal[64]  //   64 bytes, offset 134
    short      fuzzyness             //    2 bytes, offset 198
    float      inspring              //    4 bytes, offset 200
    float      infrict               //    4 bytes, offset 204
    char       namedVG_Spring_K[64]  //   64 bytes, offset 208
    char       _pad1[6]              //    6 bytes, offset 272
    char       local                 //    1 bytes, offset 278
    char       solverflags           //    1 bytes, offset 279
    SBVertex   **keys                //    8 bytes, offset 280
    int        totpointkey           //    4 bytes, offset 288
    int        totkey                //    4 bytes, offset 292
    float      secondspring          //    4 bytes, offset 296
    float      colball               //    4 bytes, offset 300
    float      balldamp              //    4 bytes, offset 304
    float      ballstiff             //    4 bytes, offset 308
    short      sbc_mode              //    2 bytes, offset 312
    short      aeroedge              //    2 bytes, offset 314
    short      minloops              //    2 bytes, offset 316
    short      maxloops              //    2 bytes, offset 318
    short      choke                 //    2 bytes, offset 320
    short      solver_ID             //    2 bytes, offset 322
    short      plastic               //    2 bytes, offset 324
    short      springpreload         //    2 bytes, offset 326
    SBScratch  *scratch              //    8 bytes, offset 328
    float      shearstiff            //    4 bytes, offset 336
    float      inpush                //    4 bytes, offset 340
    SoftBody_Shared *shared          //    8 bytes, offset 344
    PointCache *pointcache           //    8 bytes, offset 352
    ListBase   ptcaches              //   16 bytes, offset 360
    Collection *collision_group      //    8 bytes, offset 376
    EffectorWeights *effector_weights //    8 bytes, offset 384
    float      lcom[3]               //   12 bytes, offset 392
    float      lrot[3][3]            //   36 bytes, offset 404
    float      lscale[3][3]          //   36 bytes, offset 440
    int        last_frame            //    4 bytes, offset 476
struct bDeformGroup // 88 bytes [#651]
    bDeformGroup *next               //    8 bytes, offset 0
    bDeformGroup *prev               //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       flag                  //    1 bytes, offset 80
    char       _pad0[7]              //    7 bytes, offset 81
struct bFaceMap // 88 bytes [#652]
    bFaceMap   *next                 //    8 bytes, offset 0
    bFaceMap   *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       flag                  //    1 bytes, offset 80
    char       _pad0[7]              //    7 bytes, offset 81
struct BoundBox // 96 bytes [#653]
    float      vec[8][3]             //   96 bytes, offset 0
struct ObjectLineArt // 16 bytes [#654]
    short      usage                 //    2 bytes, offset 0
    short      flags                 //    2 bytes, offset 2
    float      crease_threshold      //    4 bytes, offset 4
    char       intersection_priority //    1 bytes, offset 8
    char       _pad[7]               //    7 bytes, offset 9
struct LightLinkingRuntime // 24 bytes [#655]
    uint64_t   light_set_membership  //    8 bytes, offset 0
    uint64_t   shadow_set_membership //    8 bytes, offset 8
    uchar      receiver_light_set    //    1 bytes, offset 16
    uchar      blocker_shadow_set    //    1 bytes, offset 17
    uchar      _pad[6]               //    6 bytes, offset 18
struct LightLinking // 40 bytes [#656]
    Collection *receiver_collection  //    8 bytes, offset 0
    Collection *blocker_collection   //    8 bytes, offset 8
    LightLinkingRuntime runtime      //   24 bytes, offset 16
struct Object // 1160 bytes, is ID [#657]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    SculptSession *sculpt            //    8 bytes, offset 232
    short      type                  //    2 bytes, offset 240
    short      partype               //    2 bytes, offset 242
    int        par1                  //    4 bytes, offset 244
    int        par2                  //    4 bytes, offset 248
    int        par3                  //    4 bytes, offset 252
    char       parsubstr[64]         //   64 bytes, offset 256
    Object     *parent               //    8 bytes, offset 320
    Object     *track                //    8 bytes, offset 328
    Object     *proxy                //    8 bytes, offset 336
    Object     *proxy_group          //    8 bytes, offset 344
    Object     *proxy_from           //    8 bytes, offset 352
    Ipo        *ipo                  //    8 bytes, offset 360
    bAction    *action               //    8 bytes, offset 368
    bAction    *poselib              //    8 bytes, offset 376
    bPose      *pose                 //    8 bytes, offset 384
    void       *data                 //    8 bytes, offset 392
    bGPdata    *gpd                  //    8 bytes, offset 400
    bAnimVizSettings avs             //   32 bytes, offset 408
    bMotionPath *mpath               //    8 bytes, offset 440
    void       *_pad0                //    8 bytes, offset 448
    ListBase   constraintChannels    //   16 bytes, offset 456
    ListBase   effect                //   16 bytes, offset 472
    ListBase   defbase               //   16 bytes, offset 488
    ListBase   fmaps                 //   16 bytes, offset 504
    ListBase   modifiers             //   16 bytes, offset 520
    ListBase   greasepencil_modifiers //   16 bytes, offset 536
    ListBase   shader_fx             //   16 bytes, offset 552
    int        mode                  //    4 bytes, offset 568
    int        restore_mode          //    4 bytes, offset 572
    Material   **mat                 //    8 bytes, offset 576
    char       *matbits              //    8 bytes, offset 584
    int        totcol                //    4 bytes, offset 592
    int        actcol                //    4 bytes, offset 596
    float      loc[3]                //   12 bytes, offset 600
    float      dloc[3]               //   12 bytes, offset 612
    float      size[3]               //   12 bytes, offset 624
    float      dsize[3]              //   12 bytes, offset 636
    float      dscale[3]             //   12 bytes, offset 648
    float      rot[3]                //   12 bytes, offset 660
    float      drot[3]               //   12 bytes, offset 672
    float      quat[4]               //   16 bytes, offset 684
    float      dquat[4]              //   16 bytes, offset 700
    float      rotAxis[3]            //   12 bytes, offset 716
    float      drotAxis[3]           //   12 bytes, offset 728
    float      rotAngle              //    4 bytes, offset 740
    float      drotAngle             //    4 bytes, offset 744
    float      parentinv[4][4]       //   64 bytes, offset 748
    float      constinv[4][4]        //   64 bytes, offset 812
    int        lay                   //    4 bytes, offset 876
    short      flag                  //    2 bytes, offset 880
    short      colbits               //    2 bytes, offset 882
    short      transflag             //    2 bytes, offset 884
    short      protectflag           //    2 bytes, offset 886
    short      trackflag             //    2 bytes, offset 888
    short      upflag                //    2 bytes, offset 890
    short      nlaflag               //    2 bytes, offset 892
    char       _pad1                 //    1 bytes, offset 894
    char       duplicator_visibility_flag //    1 bytes, offset 895
    short      base_flag             //    2 bytes, offset 896
    short      base_local_view_bits  //    2 bytes, offset 898
    short      col_group             //    2 bytes, offset 900
    short      col_mask              //    2 bytes, offset 902
    short      rotmode               //    2 bytes, offset 904
    char       boundtype             //    1 bytes, offset 906
    char       collision_boundtype   //    1 bytes, offset 907
    short      dtx                   //    2 bytes, offset 908
    char       dt                    //    1 bytes, offset 910
    char       empty_drawtype        //    1 bytes, offset 911
    float      empty_drawsize        //    4 bytes, offset 912
    float      dupfacesca            //    4 bytes, offset 916
    short      index                 //    2 bytes, offset 920
    short      actdef                //    2 bytes, offset 922
    char       _pad2[4]              //    4 bytes, offset 924
    float      col[4]                //   16 bytes, offset 928
    short      softflag              //    2 bytes, offset 944
    short      restrictflag          //    2 bytes, offset 946
    short      shapenr               //    2 bytes, offset 948
    char       shapeflag             //    1 bytes, offset 950
    char       _pad3[1]              //    1 bytes, offset 951
    ListBase   constraints           //   16 bytes, offset 952
    ListBase   nlastrips             //   16 bytes, offset 968
    ListBase   hooks                 //   16 bytes, offset 984
    ListBase   particlesystem        //   16 bytes, offset 1000
    PartDeflect *pd                  //    8 bytes, offset 1016
    SoftBody   *soft                 //    8 bytes, offset 1024
    Collection *dup_group            //    8 bytes, offset 1032
    FluidsimSettings *fluidsimSettings //    8 bytes, offset 1040
    ListBase   pc_ids                //   16 bytes, offset 1048
    RigidBodyOb *rigidbody_object    //    8 bytes, offset 1064
    RigidBodyCon *rigidbody_constraint //    8 bytes, offset 1072
    float      ima_ofs[2]            //    8 bytes, offset 1080
    ImageUser  *iuser                //    8 bytes, offset 1088
    char       empty_image_visibility_flag //    1 bytes, offset 1096
    char       empty_image_depth     //    1 bytes, offset 1097
    char       empty_image_flag      //    1 bytes, offset 1098
    uchar      modifier_flag         //    1 bytes, offset 1099
    char       _pad8[4]              //    4 bytes, offset 1100
    PreviewImage *preview            //    8 bytes, offset 1104
    ObjectLineArt lineart            //   16 bytes, offset 1112
    LightgroupMembership *lightgroup //    8 bytes, offset 1128
    LightLinking *light_linking      //    8 bytes, offset 1136
    LightProbeObjectCache *lightprobe_cache //    8 bytes, offset 1144
    ObjectRuntimeHandle *runtime     //    8 bytes, offset 1152
struct ObHook // 256 bytes [#658]
    ObHook     *next                 //    8 bytes, offset 0
    ObHook     *prev                 //    8 bytes, offset 8
    Object     *parent               //    8 bytes, offset 16
    float      parentinv[4][4]       //   64 bytes, offset 24
    float      mat[4][4]             //   64 bytes, offset 88
    float      cent[3]               //   12 bytes, offset 152
    float      falloff               //    4 bytes, offset 164
    char       name[64]              //   64 bytes, offset 168
    int        *indexar              //    8 bytes, offset 232
    int        totindex              //    4 bytes, offset 240
    int        curindex              //    4 bytes, offset 244
    short      type                  //    2 bytes, offset 248
    short      active                //    2 bytes, offset 250
    float      force                 //    4 bytes, offset 252
struct TreeStoreElem // 16 bytes [#659]
    short      type                  //    2 bytes, offset 0
    short      nr                    //    2 bytes, offset 2
    short      flag                  //    2 bytes, offset 4
    short      used                  //    2 bytes, offset 6
    ID         *id                   //    8 bytes, offset 8
struct TreeStore // 16 bytes [#660]
    int        totelem               //    4 bytes, offset 0
    int        usedelem              //    4 bytes, offset 4
    TreeStoreElem *data              //    8 bytes, offset 8
struct PackedFile // 24 bytes [#661]
    int        size                  //    4 bytes, offset 0
    int        seek                  //    4 bytes, offset 4
    void       *data                 //    8 bytes, offset 8
    ImplicitSharingInfoHandle *sharing_info //    8 bytes, offset 16
struct HairKey // 36 bytes [#662]
    float      co[3]                 //   12 bytes, offset 0
    float      time                  //    4 bytes, offset 12
    float      weight                //    4 bytes, offset 16
    short      editflag              //    2 bytes, offset 20
    char       _pad[2]               //    2 bytes, offset 22
    float      world_co[3]           //   12 bytes, offset 24
struct ParticleKey // 56 bytes [#663]
    float      co[3]                 //   12 bytes, offset 0
    float      vel[3]                //   12 bytes, offset 12
    float      rot[4]                //   16 bytes, offset 24
    float      ave[3]                //   12 bytes, offset 40
    float      time                  //    4 bytes, offset 52
struct BoidParticle // 56 bytes [#664]
    Object     *ground               //    8 bytes, offset 0
    BoidData   data                  //   20 bytes, offset 8
    float      gravity[3]            //   12 bytes, offset 28
    float      wander[3]             //   12 bytes, offset 40
    char       _pad0[4]              //    4 bytes, offset 52
struct ParticleSpring // 16 bytes [#665]
    float      rest_length           //    4 bytes, offset 0
    int        particle_index[2]     //    8 bytes, offset 4
    int        delete_flag           //    4 bytes, offset 12
struct ChildParticle // 64 bytes [#666]
    int        num                   //    4 bytes, offset 0
    int        parent                //    4 bytes, offset 4
    int        pa[4]                 //   16 bytes, offset 8
    float      w[4]                  //   16 bytes, offset 24
    float      fuv[4]                //   16 bytes, offset 40
    float      foffset               //    4 bytes, offset 56
    char       _pad0[4]              //    4 bytes, offset 60
struct ParticleTarget // 40 bytes [#667]
    ParticleTarget *next             //    8 bytes, offset 0
    ParticleTarget *prev             //    8 bytes, offset 8
    Object     *ob                   //    8 bytes, offset 16
    int        psys                  //    4 bytes, offset 24
    short      flag                  //    2 bytes, offset 28
    short      mode                  //    2 bytes, offset 30
    float      time                  //    4 bytes, offset 32
    float      duration              //    4 bytes, offset 36
struct ParticleDupliWeight // 32 bytes [#668]
    ParticleDupliWeight *next        //    8 bytes, offset 0
    ParticleDupliWeight *prev        //    8 bytes, offset 8
    Object     *ob                   //    8 bytes, offset 16
    short      count                 //    2 bytes, offset 24
    short      flag                  //    2 bytes, offset 26
    short      index                 //    2 bytes, offset 28
    char       _pad0[2]              //    2 bytes, offset 30
struct ParticleData // 200 bytes [#669]
    ParticleKey state                //   56 bytes, offset 0
    ParticleKey prev_state           //   56 bytes, offset 56
    HairKey    *hair                 //    8 bytes, offset 112
    ParticleKey *keys                //    8 bytes, offset 120
    BoidParticle *boid               //    8 bytes, offset 128
    int        totkey                //    4 bytes, offset 136
    float      time                  //    4 bytes, offset 140
    float      lifetime              //    4 bytes, offset 144
    float      dietime               //    4 bytes, offset 148
    int        num                   //    4 bytes, offset 152
    int        num_dmcache           //    4 bytes, offset 156
    float      fuv[4]                //   16 bytes, offset 160
    float      foffset               //    4 bytes, offset 176
    float      size                  //    4 bytes, offset 180
    float      sphdensity            //    4 bytes, offset 184
    char       _pad[4]               //    4 bytes, offset 188
    int        hair_index            //    4 bytes, offset 192
    short      flag                  //    2 bytes, offset 196
    short      alive                 //    2 bytes, offset 198
struct SPHFluidSettings // 68 bytes [#670]
    float      radius                //    4 bytes, offset 0
    float      spring_k              //    4 bytes, offset 4
    float      rest_length           //    4 bytes, offset 8
    float      plasticity_constant   //    4 bytes, offset 12
    float      yield_ratio           //    4 bytes, offset 16
    float      plasticity_balance    //    4 bytes, offset 20
    float      yield_balance         //    4 bytes, offset 24
    float      viscosity_omega       //    4 bytes, offset 28
    float      viscosity_beta        //    4 bytes, offset 32
    float      stiffness_k           //    4 bytes, offset 36
    float      stiffness_knear       //    4 bytes, offset 40
    float      rest_density          //    4 bytes, offset 44
    float      buoyancy              //    4 bytes, offset 48
    int        flag                  //    4 bytes, offset 52
    int        spring_frames         //    4 bytes, offset 56
    short      solver                //    2 bytes, offset 60
    char       _pad[6]               //    6 bytes, offset 62
struct ParticleSettings // 968 bytes, is ID [#671]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    BoidSettings *boids              //    8 bytes, offset 216
    SPHFluidSettings *fluid          //    8 bytes, offset 224
    EffectorWeights *effector_weights //    8 bytes, offset 232
    Collection *collision_group      //    8 bytes, offset 240
    int        flag                  //    4 bytes, offset 248
    char       _pad1[4]              //    4 bytes, offset 252
    short      type                  //    2 bytes, offset 256
    short      from                  //    2 bytes, offset 258
    short      distr                 //    2 bytes, offset 260
    short      texact                //    2 bytes, offset 262
    short      phystype              //    2 bytes, offset 264
    short      rotmode               //    2 bytes, offset 266
    short      avemode               //    2 bytes, offset 268
    short      reactevent            //    2 bytes, offset 270
    int        draw                  //    4 bytes, offset 272
    float      draw_size             //    4 bytes, offset 276
    short      draw_as               //    2 bytes, offset 280
    short      childtype             //    2 bytes, offset 282
    char       _pad2[4]              //    4 bytes, offset 284
    short      ren_as                //    2 bytes, offset 288
    short      subframes             //    2 bytes, offset 290
    short      draw_col              //    2 bytes, offset 292
    short      draw_step             //    2 bytes, offset 294
    short      ren_step              //    2 bytes, offset 296
    short      hair_step             //    2 bytes, offset 298
    short      keys_step             //    2 bytes, offset 300
    short      adapt_angle           //    2 bytes, offset 302
    short      adapt_pix             //    2 bytes, offset 304
    short      disp                  //    2 bytes, offset 306
    short      omat                  //    2 bytes, offset 308
    short      interpolation         //    2 bytes, offset 310
    short      integrator            //    2 bytes, offset 312
    short      rotfrom               //    2 bytes, offset 314
    short      kink                  //    2 bytes, offset 316
    short      kink_axis             //    2 bytes, offset 318
    short      bb_align              //    2 bytes, offset 320
    short      bb_uv_split           //    2 bytes, offset 322
    short      bb_anim               //    2 bytes, offset 324
    short      bb_split_offset       //    2 bytes, offset 326
    float      bb_tilt               //    4 bytes, offset 328
    float      bb_rand_tilt          //    4 bytes, offset 332
    float      bb_offset[2]          //    8 bytes, offset 336
    float      bb_size[2]            //    8 bytes, offset 344
    float      bb_vel_head           //    4 bytes, offset 352
    float      bb_vel_tail           //    4 bytes, offset 356
    float      color_vec_max         //    4 bytes, offset 360
    float      sta                   //    4 bytes, offset 364
    float      end                   //    4 bytes, offset 368
    float      lifetime              //    4 bytes, offset 372
    float      randlife              //    4 bytes, offset 376
    float      timetweak             //    4 bytes, offset 380
    float      courant_target        //    4 bytes, offset 384
    float      jitfac                //    4 bytes, offset 388
    float      eff_hair              //    4 bytes, offset 392
    float      grid_rand             //    4 bytes, offset 396
    float      ps_offset[1]          //    4 bytes, offset 400
    int        totpart               //    4 bytes, offset 404
    int        userjit               //    4 bytes, offset 408
    int        grid_res              //    4 bytes, offset 412
    int        effector_amount       //    4 bytes, offset 416
    short      time_flag             //    2 bytes, offset 420
    char       _pad0[6]              //    6 bytes, offset 422
    float      normfac               //    4 bytes, offset 428
    float      obfac                 //    4 bytes, offset 432
    float      randfac               //    4 bytes, offset 436
    float      partfac               //    4 bytes, offset 440
    float      tanfac                //    4 bytes, offset 444
    float      tanphase              //    4 bytes, offset 448
    float      reactfac              //    4 bytes, offset 452
    float      ob_vel[3]             //   12 bytes, offset 456
    float      avefac                //    4 bytes, offset 468
    float      phasefac              //    4 bytes, offset 472
    float      randrotfac            //    4 bytes, offset 476
    float      randphasefac          //    4 bytes, offset 480
    float      mass                  //    4 bytes, offset 484
    float      size                  //    4 bytes, offset 488
    float      randsize              //    4 bytes, offset 492
    float      acc[3]                //   12 bytes, offset 496
    float      dragfac               //    4 bytes, offset 508
    float      brownfac              //    4 bytes, offset 512
    float      dampfac               //    4 bytes, offset 516
    float      randlength            //    4 bytes, offset 520
    int        child_flag            //    4 bytes, offset 524
    char       _pad3[4]              //    4 bytes, offset 528
    int        child_nbr             //    4 bytes, offset 532
    int        ren_child_nbr         //    4 bytes, offset 536
    float      parents               //    4 bytes, offset 540
    float      childsize             //    4 bytes, offset 544
    float      childrandsize         //    4 bytes, offset 548
    float      childrad              //    4 bytes, offset 552
    float      childflat             //    4 bytes, offset 556
    float      clumpfac              //    4 bytes, offset 560
    float      clumppow              //    4 bytes, offset 564
    float      kink_amp              //    4 bytes, offset 568
    float      kink_freq             //    4 bytes, offset 572
    float      kink_shape            //    4 bytes, offset 576
    float      kink_flat             //    4 bytes, offset 580
    float      kink_amp_clump        //    4 bytes, offset 584
    int        kink_extra_steps      //    4 bytes, offset 588
    char       _pad4[4]              //    4 bytes, offset 592
    float      kink_axis_random      //    4 bytes, offset 596
    float      kink_amp_random       //    4 bytes, offset 600
    float      rough1                //    4 bytes, offset 604
    float      rough1_size           //    4 bytes, offset 608
    float      rough2                //    4 bytes, offset 612
    float      rough2_size           //    4 bytes, offset 616
    float      rough2_thres          //    4 bytes, offset 620
    float      rough_end             //    4 bytes, offset 624
    float      rough_end_shape       //    4 bytes, offset 628
    float      clength               //    4 bytes, offset 632
    float      clength_thres         //    4 bytes, offset 636
    float      parting_fac           //    4 bytes, offset 640
    float      parting_min           //    4 bytes, offset 644
    float      parting_max           //    4 bytes, offset 648
    float      branch_thres          //    4 bytes, offset 652
    float      draw_line[2]          //    8 bytes, offset 656
    float      path_start            //    4 bytes, offset 664
    float      path_end              //    4 bytes, offset 668
    int        trail_count           //    4 bytes, offset 672
    int        keyed_loops           //    4 bytes, offset 676
    CurveMapping *clumpcurve         //    8 bytes, offset 680
    CurveMapping *roughcurve         //    8 bytes, offset 688
    float      clump_noise_size      //    4 bytes, offset 696
    float      bending_random        //    4 bytes, offset 700
    MTex       *mtex[18]             //  144 bytes, offset 704
    Collection *dup_group            //    8 bytes, offset 848
    ListBase   dupliweights          //   16 bytes, offset 856
    Collection *force_group          //    8 bytes, offset 872
    Object     *dup_ob               //    8 bytes, offset 880
    Object     *bb_ob                //    8 bytes, offset 888
    Ipo        *ipo                  //    8 bytes, offset 896
    PartDeflect *pd                  //    8 bytes, offset 904
    PartDeflect *pd2                 //    8 bytes, offset 912
    short      use_modifier_stack    //    2 bytes, offset 920
    char       _pad5[2]              //    2 bytes, offset 922
    short      shape_flag            //    2 bytes, offset 924
    char       _pad6[2]              //    2 bytes, offset 926
    float      twist                 //    4 bytes, offset 928
    char       _pad8[4]              //    4 bytes, offset 932
    float      shape                 //    4 bytes, offset 936
    float      rad_root              //    4 bytes, offset 940
    float      rad_tip               //    4 bytes, offset 944
    float      rad_scale             //    4 bytes, offset 948
    CurveMapping *twistcurve         //    8 bytes, offset 952
    void       *_pad7                //    8 bytes, offset 960
struct ParticleSystem // 696 bytes [#672]
    ParticleSystem *next             //    8 bytes, offset 0
    ParticleSystem *prev             //    8 bytes, offset 8
    ParticleSettings *part           //    8 bytes, offset 16
    ParticleData *particles          //    8 bytes, offset 24
    ChildParticle *child             //    8 bytes, offset 32
    PTCacheEdit *edit                //    8 bytes, offset 40
    void       (*free_edit)()        //    8 bytes, offset 48
    ParticleCacheKey **pathcache     //    8 bytes, offset 56
    ParticleCacheKey **childcache    //    8 bytes, offset 64
    ListBase   pathcachebufs         //   16 bytes, offset 72
    ListBase   childcachebufs        //   16 bytes, offset 88
    ClothModifierData *clmd          //    8 bytes, offset 104
    Mesh       *hair_in_mesh         //    8 bytes, offset 112
    Mesh       *hair_out_mesh        //    8 bytes, offset 120
    Object     *target_ob            //    8 bytes, offset 128
    LatticeDeformData *lattice_deform_data //    8 bytes, offset 136
    Object     *parent               //    8 bytes, offset 144
    ListBase   targets               //   16 bytes, offset 152
    char       name[64]              //   64 bytes, offset 168
    float      imat[4][4]            //   64 bytes, offset 232
    float      cfra                  //    4 bytes, offset 296
    float      tree_frame            //    4 bytes, offset 300
    float      bvhtree_frame         //    4 bytes, offset 304
    int        seed                  //    4 bytes, offset 308
    int        child_seed            //    4 bytes, offset 312
    int        flag                  //    4 bytes, offset 316
    int        totpart               //    4 bytes, offset 320
    int        totunexist            //    4 bytes, offset 324
    int        totchild              //    4 bytes, offset 328
    int        totcached             //    4 bytes, offset 332
    int        totchildcache         //    4 bytes, offset 336
    int        recalc                //    4 bytes, offset 340
    short      target_psys           //    2 bytes, offset 344
    short      totkeyed              //    2 bytes, offset 346
    short      bakespace             //    2 bytes, offset 348
    char       _pad1[6]              //    6 bytes, offset 350
    char       bb_uvname[3][68]      //  204 bytes, offset 356
    char       _pad2[4]              //    4 bytes, offset 560
    short      vgroup[13]            //   26 bytes, offset 564
    short      vg_neg                //    2 bytes, offset 590
    short      rt3                   //    2 bytes, offset 592
    char       _pad3[6]              //    6 bytes, offset 594
    PointCache *pointcache           //    8 bytes, offset 600
    ListBase   ptcaches              //   16 bytes, offset 608
    ListBase   *effectors            //    8 bytes, offset 624
    ParticleSpring *fluid_springs    //    8 bytes, offset 632
    int        tot_fluidsprings      //    4 bytes, offset 640
    int        alloc_fluidsprings    //    4 bytes, offset 644
    KDTree_3d  *tree                 //    8 bytes, offset 648
    BVHTree    *bvhtree              //    8 bytes, offset 656
    ParticleDrawData *pdd            //    8 bytes, offset 664
    float      dt_frac               //    4 bytes, offset 672
    float      lattice_strength      //    4 bytes, offset 676
    void       *batch_cache          //    8 bytes, offset 680
    ParticleSystem *orig_psys        //    8 bytes, offset 688
struct PTCacheExtra // 32 bytes [#673]
    PTCacheExtra *next               //    8 bytes, offset 0
    PTCacheExtra *prev               //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    int        totdata               //    4 bytes, offset 20
    void       *data                 //    8 bytes, offset 24
struct PTCacheMem // 112 bytes [#674]
    PTCacheMem *next                 //    8 bytes, offset 0
    PTCacheMem *prev                 //    8 bytes, offset 8
    int        frame                 //    4 bytes, offset 16
    int        totpoint              //    4 bytes, offset 20
    int        data_types            //    4 bytes, offset 24
    int        flag                  //    4 bytes, offset 28
    void       *data[8]              //   64 bytes, offset 32
    ListBase   extradata             //   16 bytes, offset 96
struct PointCache // 1392 bytes [#675]
    PointCache *next                 //    8 bytes, offset 0
    PointCache *prev                 //    8 bytes, offset 8
    int        flag                  //    4 bytes, offset 16
    int        step                  //    4 bytes, offset 20
    int        simframe              //    4 bytes, offset 24
    int        startframe            //    4 bytes, offset 28
    int        endframe              //    4 bytes, offset 32
    int        editframe             //    4 bytes, offset 36
    int        last_exact            //    4 bytes, offset 40
    int        last_valid            //    4 bytes, offset 44
    char       _pad[4]               //    4 bytes, offset 48
    int        totpoint              //    4 bytes, offset 52
    int        index                 //    4 bytes, offset 56
    short      compression           //    2 bytes, offset 60
    char       _pad0[2]              //    2 bytes, offset 62
    char       name[64]              //   64 bytes, offset 64
    char       prev_name[64]         //   64 bytes, offset 128
    char       info[128]             //  128 bytes, offset 192
    char       path[1024]            // 1024 bytes, offset 320
    char       *cached_frames        //    8 bytes, offset 1344
    int        cached_frames_len     //    4 bytes, offset 1352
    char       _pad1[4]              //    4 bytes, offset 1356
    ListBase   mem_cache             //   16 bytes, offset 1360
    PTCacheEdit *edit                //    8 bytes, offset 1376
    void       (*free_edit)()        //    8 bytes, offset 1384
struct PointCloud // 512 bytes, is ID [#676]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    int        flag                  //    4 bytes, offset 216
    int        totpoint              //    4 bytes, offset 220
    CustomData pdata                 //  248 bytes, offset 224
    int        attributes_active_index //    4 bytes, offset 472
    int        _pad4                 //    4 bytes, offset 476
    Material   **mat                 //    8 bytes, offset 480
    short      totcol                //    2 bytes, offset 488
    short      _pad3[3]              //    6 bytes, offset 490
    PointCloudRuntimeHandle *runtime //    8 bytes, offset 496
    void       *batch_cache          //    8 bytes, offset 504
struct RigidBodyWorld_Shared // 32 bytes [#677]
    PointCache *pointcache           //    8 bytes, offset 0
    ListBase   ptcaches              //   16 bytes, offset 8
    RigidBodyWorld_Runtime *runtime  //    8 bytes, offset 24
struct RigidBodyWorld // 88 bytes [#678]
    EffectorWeights *effector_weights //    8 bytes, offset 0
    Collection *group                //    8 bytes, offset 8
    Object     **objects             //    8 bytes, offset 16
    Collection *constraints          //    8 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 32
    float      ltime                 //    4 bytes, offset 36
    RigidBodyWorld_Shared *shared    //    8 bytes, offset 40
    PointCache *pointcache           //    8 bytes, offset 48
    ListBase   ptcaches              //   16 bytes, offset 56
    int        numbodies             //    4 bytes, offset 72
    short      steps_per_second      //    2 bytes, offset 76
    short      num_solver_iterations //    2 bytes, offset 78
    int        flag                  //    4 bytes, offset 80
    float      time_scale            //    4 bytes, offset 84
struct RigidBodyOb // 88 bytes [#679]
    short      type                  //    2 bytes, offset 0
    short      shape                 //    2 bytes, offset 2
    int        flag                  //    4 bytes, offset 4
    int        col_groups            //    4 bytes, offset 8
    short      mesh_source           //    2 bytes, offset 12
    char       _pad[2]               //    2 bytes, offset 14
    float      mass                  //    4 bytes, offset 16
    float      friction              //    4 bytes, offset 20
    float      restitution           //    4 bytes, offset 24
    float      margin                //    4 bytes, offset 28
    float      lin_damping           //    4 bytes, offset 32
    float      ang_damping           //    4 bytes, offset 36
    float      lin_sleep_thresh      //    4 bytes, offset 40
    float      ang_sleep_thresh      //    4 bytes, offset 44
    float      orn[4]                //   16 bytes, offset 48
    float      pos[3]                //   12 bytes, offset 64
    char       _pad1[4]              //    4 bytes, offset 76
    RigidBodyOb_Shared *shared       //    8 bytes, offset 80
struct RigidBodyCon // 152 bytes [#680]
    Object     *ob1                  //    8 bytes, offset 0
    Object     *ob2                  //    8 bytes, offset 8
    short      type                  //    2 bytes, offset 16
    short      num_solver_iterations //    2 bytes, offset 18
    int        flag                  //    4 bytes, offset 20
    float      breaking_threshold    //    4 bytes, offset 24
    char       spring_type           //    1 bytes, offset 28
    char       _pad[3]               //    3 bytes, offset 29
    float      limit_lin_x_lower     //    4 bytes, offset 32
    float      limit_lin_x_upper     //    4 bytes, offset 36
    float      limit_lin_y_lower     //    4 bytes, offset 40
    float      limit_lin_y_upper     //    4 bytes, offset 44
    float      limit_lin_z_lower     //    4 bytes, offset 48
    float      limit_lin_z_upper     //    4 bytes, offset 52
    float      limit_ang_x_lower     //    4 bytes, offset 56
    float      limit_ang_x_upper     //    4 bytes, offset 60
    float      limit_ang_y_lower     //    4 bytes, offset 64
    float      limit_ang_y_upper     //    4 bytes, offset 68
    float      limit_ang_z_lower     //    4 bytes, offset 72
    float      limit_ang_z_upper     //    4 bytes, offset 76
    float      spring_stiffness_x    //    4 bytes, offset 80
    float      spring_stiffness_y    //    4 bytes, offset 84
    float      spring_stiffness_z    //    4 bytes, offset 88
    float      spring_stiffness_ang_x //    4 bytes, offset 92
    float      spring_stiffness_ang_y //    4 bytes, offset 96
    float      spring_stiffness_ang_z //    4 bytes, offset 100
    float      spring_damping_x      //    4 bytes, offset 104
    float      spring_damping_y      //    4 bytes, offset 108
    float      spring_damping_z      //    4 bytes, offset 112
    float      spring_damping_ang_x  //    4 bytes, offset 116
    float      spring_damping_ang_y  //    4 bytes, offset 120
    float      spring_damping_ang_z  //    4 bytes, offset 124
    float      motor_lin_target_velocity //    4 bytes, offset 128
    float      motor_ang_target_velocity //    4 bytes, offset 132
    float      motor_lin_max_impulse //    4 bytes, offset 136
    float      motor_ang_max_impulse //    4 bytes, offset 140
    void       *physics_constraint   //    8 bytes, offset 144
struct FFMpegCodecData // 80 bytes [#681]
    int        type                  //    4 bytes, offset 0
    int        codec                 //    4 bytes, offset 4
    int        audio_codec           //    4 bytes, offset 8
    int        video_bitrate         //    4 bytes, offset 12
    int        audio_bitrate         //    4 bytes, offset 16
    int        audio_mixrate         //    4 bytes, offset 20
    int        audio_channels        //    4 bytes, offset 24
    float      audio_volume          //    4 bytes, offset 28
    int        gop_size              //    4 bytes, offset 32
    int        max_b_frames          //    4 bytes, offset 36
    int        flags                 //    4 bytes, offset 40
    int        constant_rate_factor  //    4 bytes, offset 44
    int        ffmpeg_preset         //    4 bytes, offset 48
    int        rc_min_rate           //    4 bytes, offset 52
    int        rc_max_rate           //    4 bytes, offset 56
    int        rc_buffer_size        //    4 bytes, offset 60
    int        mux_packet_size       //    4 bytes, offset 64
    int        mux_rate              //    4 bytes, offset 68
    void       *_pad1                //    8 bytes, offset 72
struct AudioData // 32 bytes [#682]
    int        mixrate               //    4 bytes, offset 0
    float      main                  //    4 bytes, offset 4
    float      speed_of_sound        //    4 bytes, offset 8
    float      doppler_factor        //    4 bytes, offset 12
    int        distance_model        //    4 bytes, offset 16
    short      flag                  //    2 bytes, offset 20
    char       _pad[2]               //    2 bytes, offset 22
    float      volume                //    4 bytes, offset 24
    char       _pad2[4]              //    4 bytes, offset 28
struct SceneRenderLayer // 192 bytes [#683]
    SceneRenderLayer *next           //    8 bytes, offset 0
    SceneRenderLayer *prev           //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    Material   *mat_override         //    8 bytes, offset 80
    World      *world_override       //    8 bytes, offset 88
    int        lay                   //    4 bytes, offset 96
    int        lay_zmask             //    4 bytes, offset 100
    int        lay_exclude           //    4 bytes, offset 104
    int        layflag               //    4 bytes, offset 108
    int        passflag              //    4 bytes, offset 112
    int        pass_xor              //    4 bytes, offset 116
    int        samples               //    4 bytes, offset 120
    float      pass_alpha_threshold  //    4 bytes, offset 124
    IDProperty *prop                 //    8 bytes, offset 128
    FreestyleConfig freestyleConfig  //   56 bytes, offset 136
struct SceneRenderView // 152 bytes [#684]
    SceneRenderView *next            //    8 bytes, offset 0
    SceneRenderView *prev            //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       suffix[64]            //   64 bytes, offset 80
    int        viewflag              //    4 bytes, offset 144
    char       _pad2[4]              //    4 bytes, offset 148
struct Stereo3dFormat // 8 bytes [#685]
    short      flag                  //    2 bytes, offset 0
    char       display_mode          //    1 bytes, offset 2
    char       anaglyph_type         //    1 bytes, offset 3
    char       interlace_type        //    1 bytes, offset 4
    char       _pad[3]               //    3 bytes, offset 5
struct ImageFormatData // 336 bytes [#686]
    char       imtype                //    1 bytes, offset 0
    char       depth                 //    1 bytes, offset 1
    char       planes                //    1 bytes, offset 2
    char       flag                  //    1 bytes, offset 3
    char       quality               //    1 bytes, offset 4
    char       compress              //    1 bytes, offset 5
    char       exr_codec             //    1 bytes, offset 6
    char       cineon_flag           //    1 bytes, offset 7
    short      cineon_white          //    2 bytes, offset 8
    short      cineon_black          //    2 bytes, offset 10
    float      cineon_gamma          //    4 bytes, offset 12
    char       jp2_flag              //    1 bytes, offset 16
    char       jp2_codec             //    1 bytes, offset 17
    char       tiff_codec            //    1 bytes, offset 18
    char       _pad[4]               //    4 bytes, offset 19
    char       views_format          //    1 bytes, offset 23
    Stereo3dFormat stereo3d_format   //    8 bytes, offset 24
    char       color_management      //    1 bytes, offset 32
    char       _pad1[7]              //    7 bytes, offset 33
    ColorManagedViewSettings view_settings //  168 bytes, offset 40
    ColorManagedDisplaySettings display_settings //   64 bytes, offset 208
    ColorManagedColorspaceSettings linear_colorspace_settings //   64 bytes, offset 272
struct BakeData // 1400 bytes [#687]
    ImageFormatData im_format        //  336 bytes, offset 0
    char       filepath[1024]        // 1024 bytes, offset 336
    short      width                 //    2 bytes, offset 1360
    short      height                //    2 bytes, offset 1362
    short      margin                //    2 bytes, offset 1364
    short      flag                  //    2 bytes, offset 1366
    float      cage_extrusion        //    4 bytes, offset 1368
    float      max_ray_distance      //    4 bytes, offset 1372
    int        pass_filter           //    4 bytes, offset 1376
    char       normal_swizzle[3]     //    3 bytes, offset 1380
    char       normal_space          //    1 bytes, offset 1383
    char       target                //    1 bytes, offset 1384
    char       save_mode             //    1 bytes, offset 1385
    char       margin_type           //    1 bytes, offset 1386
    char       view_from             //    1 bytes, offset 1387
    char       _pad[4]               //    4 bytes, offset 1388
    Object     *cage_object          //    8 bytes, offset 1392
struct RenderData // 4376 bytes [#688]
    ImageFormatData im_format        //  336 bytes, offset 0
    void       *_pad                 //    8 bytes, offset 336
    FFMpegCodecData ffcodecdata      //   80 bytes, offset 344
    int        cfra                  //    4 bytes, offset 424
    int        sfra                  //    4 bytes, offset 428
    int        efra                  //    4 bytes, offset 432
    float      subframe              //    4 bytes, offset 436
    int        psfra                 //    4 bytes, offset 440
    int        pefra                 //    4 bytes, offset 444
    int        images                //    4 bytes, offset 448
    int        framapto              //    4 bytes, offset 452
    short      flag                  //    2 bytes, offset 456
    short      threads               //    2 bytes, offset 458
    float      framelen              //    4 bytes, offset 460
    int        frame_step            //    4 bytes, offset 464
    short      dimensionspreset      //    2 bytes, offset 468
    short      size                  //    2 bytes, offset 470
    int        xsch                  //    4 bytes, offset 472
    int        ysch                  //    4 bytes, offset 476
    int        tilex                 //    4 bytes, offset 480
    int        tiley                 //    4 bytes, offset 484
    short      planes                //    2 bytes, offset 488
    short      imtype                //    2 bytes, offset 490
    short      subimtype             //    2 bytes, offset 492
    short      quality               //    2 bytes, offset 494
    char       use_lock_interface    //    1 bytes, offset 496
    char       _pad7[3]              //    3 bytes, offset 497
    int        scemode               //    4 bytes, offset 500
    int        mode                  //    4 bytes, offset 504
    short      frs_sec               //    2 bytes, offset 508
    char       alphamode             //    1 bytes, offset 510
    char       _pad0[1]              //    1 bytes, offset 511
    rctf       border                //   16 bytes, offset 512
    ListBase   layers                //   16 bytes, offset 528
    short      actlay                //    2 bytes, offset 544
    char       _pad1[2]              //    2 bytes, offset 546
    float      xasp                  //    4 bytes, offset 548
    float      yasp                  //    4 bytes, offset 552
    float      frs_sec_base          //    4 bytes, offset 556
    float      gauss                 //    4 bytes, offset 560
    int        color_mgt_flag        //    4 bytes, offset 564
    float      dither_intensity      //    4 bytes, offset 568
    short      bake_mode             //    2 bytes, offset 572
    short      bake_flag             //    2 bytes, offset 574
    short      bake_filter           //    2 bytes, offset 576
    short      bake_samples          //    2 bytes, offset 578
    short      bake_margin_type      //    2 bytes, offset 580
    char       _pad9[6]              //    6 bytes, offset 582
    float      bake_biasdist         //    4 bytes, offset 588
    float      bake_user_scale       //    4 bytes, offset 592
    char       pic[1024]             // 1024 bytes, offset 596
    int        stamp                 //    4 bytes, offset 1620
    short      stamp_font_id         //    2 bytes, offset 1624
    char       _pad3[2]              //    2 bytes, offset 1626
    char       stamp_udata[768]      //  768 bytes, offset 1628
    float      fg_stamp[4]           //   16 bytes, offset 2396
    float      bg_stamp[4]           //   16 bytes, offset 2412
    char       seq_prev_type         //    1 bytes, offset 2428
    char       seq_rend_type         //    1 bytes, offset 2429
    char       seq_flag              //    1 bytes, offset 2430
    char       _pad5[3]              //    3 bytes, offset 2431
    short      simplify_subsurf      //    2 bytes, offset 2434
    short      simplify_subsurf_render //    2 bytes, offset 2436
    short      simplify_gpencil      //    2 bytes, offset 2438
    float      simplify_particles    //    4 bytes, offset 2440
    float      simplify_particles_render //    4 bytes, offset 2444
    float      simplify_volumes      //    4 bytes, offset 2448
    int        line_thickness_mode   //    4 bytes, offset 2452
    float      unit_line_thickness   //    4 bytes, offset 2456
    char       engine[32]            //   32 bytes, offset 2460
    char       _pad2[2]              //    2 bytes, offset 2492
    short      perf_flag             //    2 bytes, offset 2494
    BakeData   bake                  // 1400 bytes, offset 2496
    int        _pad8                 //    4 bytes, offset 3896
    short      preview_pixel_size    //    2 bytes, offset 3900
    short      _pad4                 //    2 bytes, offset 3902
    ListBase   views                 //   16 bytes, offset 3904
    short      actview               //    2 bytes, offset 3920
    short      views_format          //    2 bytes, offset 3922
    short      hair_type             //    2 bytes, offset 3924
    short      hair_subdiv           //    2 bytes, offset 3926
    float      blurfac               //    4 bytes, offset 3928
    int        motion_blur_position  //    4 bytes, offset 3932
    CurveMapping mblur_shutter_curve //  424 bytes, offset 3936
    int        compositor_device     //    4 bytes, offset 4360
    int        compositor_precision  //    4 bytes, offset 4364
    int        compositor_denoise_preview_quality //    4 bytes, offset 4368
    int        compositor_denoise_final_quality //    4 bytes, offset 4372
struct TimeMarker // 104 bytes [#689]
    TimeMarker *next                 //    8 bytes, offset 0
    TimeMarker *prev                 //    8 bytes, offset 8
    int        frame                 //    4 bytes, offset 16
    char       name[64]              //   64 bytes, offset 20
    int        flag                  //    4 bytes, offset 84
    Object     *camera               //    8 bytes, offset 88
    IDProperty *prop                 //    8 bytes, offset 96
struct Paint_Runtime // 8 bytes [#690]
    int        initialized           //    4 bytes, offset 0
    short      ob_mode               //    2 bytes, offset 4
    char       _pad[2]               //    2 bytes, offset 6
struct NamedBrushAssetReference // 32 bytes [#691]
    NamedBrushAssetReference *next   //    8 bytes, offset 0
    NamedBrushAssetReference *prev   //    8 bytes, offset 8
    char       *name                 //    8 bytes, offset 16
    AssetWeakReference *brush_asset_reference //    8 bytes, offset 24
struct ToolSystemBrushBindings // 24 bytes [#692]
    AssetWeakReference *main_brush_asset_reference //    8 bytes, offset 0
    ListBase   active_brush_per_brush_type //   16 bytes, offset 8
struct Paint // 120 bytes [#693]
    Brush      *brush                //    8 bytes, offset 0
    AssetWeakReference *brush_asset_reference //    8 bytes, offset 8
    Brush      *eraser_brush         //    8 bytes, offset 16
    AssetWeakReference *eraser_brush_asset_reference //    8 bytes, offset 24
    ToolSystemBrushBindings tool_brush_bindings //   24 bytes, offset 32
    Palette    *palette              //    8 bytes, offset 56
    CurveMapping *cavity_curve       //    8 bytes, offset 64
    void       *paint_cursor         //    8 bytes, offset 72
    char       paint_cursor_col[4]   //    4 bytes, offset 80
    int        flags                 //    4 bytes, offset 84
    int        num_input_samples     //    4 bytes, offset 88
    int        symmetry_flags        //    4 bytes, offset 92
    float      tile_offset[3]        //   12 bytes, offset 96
    char       _pad2[4]              //    4 bytes, offset 108
    Paint_Runtime runtime            //    8 bytes, offset 112
struct ImagePaintSettings // 200 bytes [#694]
    Paint      paint                 //  120 bytes, offset 0
    short      flag                  //    2 bytes, offset 120
    short      missing_data          //    2 bytes, offset 122
    short      seam_bleed            //    2 bytes, offset 124
    short      normal_angle          //    2 bytes, offset 126
    short      screen_grab_size[2]   //    4 bytes, offset 128
    int        mode                  //    4 bytes, offset 132
    Image      *stencil              //    8 bytes, offset 136
    Image      *clone                //    8 bytes, offset 144
    Image      *canvas               //    8 bytes, offset 152
    float      stencil_col[3]        //   12 bytes, offset 160
    float      dither                //    4 bytes, offset 172
    int        interp                //    4 bytes, offset 176
    char       _pad[4]               //    4 bytes, offset 180
    float      clone_offset[2]       //    8 bytes, offset 184
    float      clone_alpha           //    4 bytes, offset 192
    char       _pad2[4]              //    4 bytes, offset 196
struct PaintModeSettings // 56 bytes [#695]
    char       canvas_source         //    1 bytes, offset 0
    char       _pad[7]               //    7 bytes, offset 1
    Image      *canvas_image         //    8 bytes, offset 8
    ImageUser  image_user            //   40 bytes, offset 16
struct ParticleBrushData // 16 bytes [#696]
    short      size                  //    2 bytes, offset 0
    short      step                  //    2 bytes, offset 2
    short      invert                //    2 bytes, offset 4
    short      count                 //    2 bytes, offset 6
    int        flag                  //    4 bytes, offset 8
    float      strength              //    4 bytes, offset 12
struct ParticleEditSettings // 176 bytes [#697]
    short      flag                  //    2 bytes, offset 0
    short      totrekey              //    2 bytes, offset 2
    short      totaddkey             //    2 bytes, offset 4
    short      brushtype             //    2 bytes, offset 6
    ParticleBrushData brush[7]       //  112 bytes, offset 8
    void       *paintcursor          //    8 bytes, offset 120
    float      emitterdist           //    4 bytes, offset 128
    char       _pad0[4]              //    4 bytes, offset 132
    int        selectmode            //    4 bytes, offset 136
    int        edittype              //    4 bytes, offset 140
    int        draw_step             //    4 bytes, offset 144
    int        fade_frames           //    4 bytes, offset 148
    Scene      *scene                //    8 bytes, offset 152
    Object     *object               //    8 bytes, offset 160
    Object     *shape_object         //    8 bytes, offset 168
struct Sculpt // 216 bytes [#698]
    Paint      paint                 //  120 bytes, offset 0
    int        flags                 //    4 bytes, offset 120
    int        transform_mode        //    4 bytes, offset 124
    int        automasking_flags     //    4 bytes, offset 128
    int        radial_symm[3]        //   12 bytes, offset 132
    float      detail_size           //    4 bytes, offset 144
    int        symmetrize_direction  //    4 bytes, offset 148
    float      gravity_factor        //    4 bytes, offset 152
    float      constant_detail       //    4 bytes, offset 156
    float      detail_percent        //    4 bytes, offset 160
    int        automasking_boundary_edges_propagation_steps //    4 bytes, offset 164
    int        automasking_cavity_blur_steps //    4 bytes, offset 168
    float      automasking_cavity_factor //    4 bytes, offset 172
    float      automasking_start_normal_limit //    4 bytes, offset 176
    float      automasking_start_normal_falloff //    4 bytes, offset 180
    float      automasking_view_normal_limit //    4 bytes, offset 184
    float      automasking_view_normal_falloff //    4 bytes, offset 188
    CurveMapping *automasking_cavity_curve //    8 bytes, offset 192
    CurveMapping *automasking_cavity_curve_op //    8 bytes, offset 200
    Object     *gravity_object       //    8 bytes, offset 208
struct CurvesSculpt // 120 bytes [#699]
    Paint      paint                 //  120 bytes, offset 0
struct UvSculpt // 24 bytes [#700]
    CurveMapping *strength_curve     //    8 bytes, offset 0
    int        size                  //    4 bytes, offset 8
    float      strength              //    4 bytes, offset 12
    int8_t     curve_preset          //    1 bytes, offset 16
    char       _pad[7]               //    7 bytes, offset 17
struct GpPaint // 128 bytes [#701]
    Paint      paint                 //  120 bytes, offset 0
    int        flag                  //    4 bytes, offset 120
    int        mode                  //    4 bytes, offset 124
struct GpVertexPaint // 128 bytes [#702]
    Paint      paint                 //  120 bytes, offset 0
    int        flag                  //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
struct GpSculptPaint // 128 bytes [#703]
    Paint      paint                 //  120 bytes, offset 0
    int        flag                  //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
struct GpWeightPaint // 128 bytes [#704]
    Paint      paint                 //  120 bytes, offset 0
    int        flag                  //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
struct VPaint // 136 bytes [#705]
    Paint      paint                 //  120 bytes, offset 0
    char       flag                  //    1 bytes, offset 120
    char       _pad[3]               //    3 bytes, offset 121
    int        radial_symm[3]        //   12 bytes, offset 124
struct GP_Sculpt_Guide // 40 bytes [#706]
    char       use_guide             //    1 bytes, offset 0
    char       use_snapping          //    1 bytes, offset 1
    char       reference_point       //    1 bytes, offset 2
    char       type                  //    1 bytes, offset 3
    char       _pad2[4]              //    4 bytes, offset 4
    float      angle                 //    4 bytes, offset 8
    float      angle_snap            //    4 bytes, offset 12
    float      spacing               //    4 bytes, offset 16
    float      location[3]           //   12 bytes, offset 20
    Object     *reference_object     //    8 bytes, offset 32
struct GP_Sculpt_Settings // 80 bytes [#707]
    void       *paintcursor          //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    int        lock_axis             //    4 bytes, offset 12
    float      isect_threshold       //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
    CurveMapping *cur_falloff        //    8 bytes, offset 24
    CurveMapping *cur_primitive      //    8 bytes, offset 32
    GP_Sculpt_Guide guide            //   40 bytes, offset 40
struct GP_Interpolate_Settings // 8 bytes [#708]
    CurveMapping *custom_ipo         //    8 bytes, offset 0
struct UnifiedPaintSettings // 168 bytes [#709]
    int        size                  //    4 bytes, offset 0
    float      unprojected_radius    //    4 bytes, offset 4
    float      alpha                 //    4 bytes, offset 8
    float      weight                //    4 bytes, offset 12
    float      rgb[3]                //   12 bytes, offset 16
    float      secondary_rgb[3]      //   12 bytes, offset 28
    int        input_samples         //    4 bytes, offset 40
    int        flag                  //    4 bytes, offset 44
    char       _pad[4]               //    4 bytes, offset 48
    float      last_rake[2]          //    8 bytes, offset 52
    float      last_rake_angle       //    4 bytes, offset 60
    int        last_stroke_valid     //    4 bytes, offset 64
    float      average_stroke_accum[3] //   12 bytes, offset 68
    int        average_stroke_counter //    4 bytes, offset 80
    float      brush_rotation        //    4 bytes, offset 84
    float      brush_rotation_sec    //    4 bytes, offset 88
    int        anchored_size         //    4 bytes, offset 92
    float      overlap_factor        //    4 bytes, offset 96
    char       draw_inverted         //    1 bytes, offset 100
    char       stroke_active         //    1 bytes, offset 101
    char       draw_anchored         //    1 bytes, offset 102
    char       do_linear_conversion  //    1 bytes, offset 103
    float      last_location[3]      //   12 bytes, offset 104
    int        last_hit              //    4 bytes, offset 116
    float      anchored_initial_mouse[2] //    8 bytes, offset 120
    float      pixel_radius          //    4 bytes, offset 128
    float      initial_pixel_radius  //    4 bytes, offset 132
    float      start_pixel_radius    //    4 bytes, offset 136
    float      size_pressure_value   //    4 bytes, offset 140
    float      tex_mouse[2]          //    8 bytes, offset 144
    float      mask_tex_mouse[2]     //    8 bytes, offset 152
    ColorSpace *colorspace           //    8 bytes, offset 160
struct CurvePaintSettings // 32 bytes [#710]
    char       curve_type            //    1 bytes, offset 0
    char       flag                  //    1 bytes, offset 1
    char       depth_mode            //    1 bytes, offset 2
    char       surface_plane         //    1 bytes, offset 3
    char       fit_method            //    1 bytes, offset 4
    char       _pad                  //    1 bytes, offset 5
    short      error_threshold       //    2 bytes, offset 6
    float      radius_min            //    4 bytes, offset 8
    float      radius_max            //    4 bytes, offset 12
    float      radius_taper_start    //    4 bytes, offset 16
    float      radius_taper_end      //    4 bytes, offset 20
    float      surface_offset        //    4 bytes, offset 24
    float      corner_angle          //    4 bytes, offset 28
struct MeshStatVis // 40 bytes [#711]
    char       type                  //    1 bytes, offset 0
    char       _pad1[2]              //    2 bytes, offset 1
    char       overhang_axis         //    1 bytes, offset 3
    float      overhang_min          //    4 bytes, offset 4
    float      overhang_max          //    4 bytes, offset 8
    float      thickness_min         //    4 bytes, offset 12
    float      thickness_max         //    4 bytes, offset 16
    char       thickness_samples     //    1 bytes, offset 20
    char       _pad2[3]              //    3 bytes, offset 21
    float      distort_min           //    4 bytes, offset 24
    float      distort_max           //    4 bytes, offset 28
    float      sharp_min             //    4 bytes, offset 32
    float      sharp_max             //    4 bytes, offset 36
struct SequencerToolSettings // 20 bytes [#712]
    int        fit_method            //    4 bytes, offset 0
    short      snap_mode             //    2 bytes, offset 4
    short      snap_flag             //    2 bytes, offset 6
    int        overlap_mode          //    4 bytes, offset 8
    int        snap_distance         //    4 bytes, offset 12
    int        pivot_point           //    4 bytes, offset 16
struct ToolSettings // 1088 bytes [#713]
    VPaint     *vpaint               //    8 bytes, offset 0
    VPaint     *wpaint               //    8 bytes, offset 8
    Sculpt     *sculpt               //    8 bytes, offset 16
    UvSculpt   uvsculpt              //   24 bytes, offset 24
    GpPaint    *gp_paint             //    8 bytes, offset 48
    GpVertexPaint *gp_vertexpaint    //    8 bytes, offset 56
    GpSculptPaint *gp_sculptpaint    //    8 bytes, offset 64
    GpWeightPaint *gp_weightpaint    //    8 bytes, offset 72
    CurvesSculpt *curves_sculpt      //    8 bytes, offset 80
    float      vgroup_weight         //    4 bytes, offset 88
    float      doublimit             //    4 bytes, offset 92
    char       automerge             //    1 bytes, offset 96
    char       object_flag           //    1 bytes, offset 97
    char       selectmode            //    1 bytes, offset 98
    char       unwrapper             //    1 bytes, offset 99
    char       uvcalc_flag           //    1 bytes, offset 100
    char       uv_flag               //    1 bytes, offset 101
    char       uv_selectmode         //    1 bytes, offset 102
    char       uv_sticky             //    1 bytes, offset 103
    float      uvcalc_margin         //    4 bytes, offset 104
    int        uvcalc_iterations     //    4 bytes, offset 108
    float      uvcalc_weight_factor  //    4 bytes, offset 112
    char       uvcalc_weight_group[64] //   64 bytes, offset 116
    short      autoik_chainlen       //    2 bytes, offset 180
    char       gpencil_flags         //    1 bytes, offset 182
    char       gpencil_v3d_align     //    1 bytes, offset 183
    char       gpencil_v2d_align     //    1 bytes, offset 184
    char       annotate_v3d_align    //    1 bytes, offset 185
    short      annotate_thickness    //    2 bytes, offset 186
    float      gpencil_surface_offset //    4 bytes, offset 188
    char       gpencil_selectmode_edit //    1 bytes, offset 192
    char       gpencil_selectmode_sculpt //    1 bytes, offset 193
    char       _pad0[6]              //    6 bytes, offset 194
    GP_Sculpt_Settings gp_sculpt     //   80 bytes, offset 200
    GP_Interpolate_Settings gp_interpolate //    8 bytes, offset 280
    ImagePaintSettings imapaint      //  200 bytes, offset 288
    PaintModeSettings paint_mode     //   56 bytes, offset 488
    ParticleEditSettings particle    //  176 bytes, offset 544
    float      proportional_size     //    4 bytes, offset 720
    float      select_thresh         //    4 bytes, offset 724
    short      keying_flag           //    2 bytes, offset 728
    char       autokey_mode          //    1 bytes, offset 730
    char       keyframe_type         //    1 bytes, offset 731
    char       multires_subdiv_type  //    1 bytes, offset 732
    char       edge_mode             //    1 bytes, offset 733
    char       edge_mode_live_unwrap //    1 bytes, offset 734
    char       transform_pivot_point //    1 bytes, offset 735
    char       transform_flag        //    1 bytes, offset 736
    char       snap_node_mode        //    1 bytes, offset 737
    short      snap_mode             //    2 bytes, offset 738
    short      snap_uv_mode          //    2 bytes, offset 740
    short      snap_anim_mode        //    2 bytes, offset 742
    short      snap_flag             //    2 bytes, offset 744
    short      snap_flag_node        //    2 bytes, offset 746
    short      snap_flag_seq         //    2 bytes, offset 748
    short      snap_flag_anim        //    2 bytes, offset 750
    short      snap_uv_flag          //    2 bytes, offset 752
    char       _pad[4]               //    4 bytes, offset 754
    char       snap_target           //    1 bytes, offset 758
    char       snap_transform_mode_flag //    1 bytes, offset 759
    short      snap_face_nearest_steps //    2 bytes, offset 760
    char       proportional_edit     //    1 bytes, offset 762
    char       prop_mode             //    1 bytes, offset 763
    char       proportional_objects  //    1 bytes, offset 764
    char       proportional_mask     //    1 bytes, offset 765
    char       proportional_action   //    1 bytes, offset 766
    char       proportional_fcurve   //    1 bytes, offset 767
    char       lock_markers          //    1 bytes, offset 768
    char       auto_normalize        //    1 bytes, offset 769
    char       wpaint_lock_relative  //    1 bytes, offset 770
    char       multipaint            //    1 bytes, offset 771
    char       weightuser            //    1 bytes, offset 772
    char       vgroupsubset          //    1 bytes, offset 773
    char       gpencil_selectmode_vertex //    1 bytes, offset 774
    char       uv_sculpt_settings    //    1 bytes, offset 775
    char       workspace_tool_type   //    1 bytes, offset 776
    char       _pad5[1]              //    1 bytes, offset 777
    short      sculpt_paint_settings //    2 bytes, offset 778
    int        sculpt_paint_unified_size //    4 bytes, offset 780
    float      sculpt_paint_unified_unprojected_radius //    4 bytes, offset 784
    float      sculpt_paint_unified_alpha //    4 bytes, offset 788
    UnifiedPaintSettings unified_paint_settings //  168 bytes, offset 792
    CurvePaintSettings curve_paint_settings //   32 bytes, offset 960
    MeshStatVis statvis              //   40 bytes, offset 992
    float      normal_vector[3]      //   12 bytes, offset 1032
    char       _pad6[4]              //    4 bytes, offset 1044
    CurveProfile *custom_bevel_profile_preset //    8 bytes, offset 1048
    SequencerToolSettings *sequencer_tool_settings //    8 bytes, offset 1056
    short      snap_mode_tools       //    2 bytes, offset 1064
    char       plane_axis            //    1 bytes, offset 1066
    char       plane_depth           //    1 bytes, offset 1067
    char       plane_orient          //    1 bytes, offset 1068
    char       use_plane_axis_auto   //    1 bytes, offset 1069
    char       _pad7[2]              //    2 bytes, offset 1070
    float      snap_angle_increment_2d //    4 bytes, offset 1072
    float      snap_angle_increment_2d_precision //    4 bytes, offset 1076
    float      snap_angle_increment_3d //    4 bytes, offset 1080
    float      snap_angle_increment_3d_precision //    4 bytes, offset 1084
struct UnitSettings // 16 bytes [#714]
    float      scale_length          //    4 bytes, offset 0
    char       system                //    1 bytes, offset 4
    char       system_rotation       //    1 bytes, offset 5
    short      flag                  //    2 bytes, offset 6
    char       length_unit           //    1 bytes, offset 8
    char       mass_unit             //    1 bytes, offset 9
    char       time_unit             //    1 bytes, offset 10
    char       temperature_unit      //    1 bytes, offset 11
    char       _pad[4]               //    4 bytes, offset 12
struct PhysicsSettings // 24 bytes [#715]
    float      gravity[3]            //   12 bytes, offset 0
    int        flag                  //    4 bytes, offset 12
    int        quick_cache_step      //    4 bytes, offset 16
    char       _pad0[4]              //    4 bytes, offset 20
struct DisplaySafeAreas // 32 bytes [#716]
    float      title[2]              //    8 bytes, offset 0
    float      action[2]             //    8 bytes, offset 8
    float      title_center[2]       //    8 bytes, offset 16
    float      action_center[2]      //    8 bytes, offset 24
struct SceneDisplay // 984 bytes [#717]
    float      light_direction[3]    //   12 bytes, offset 0
    float      shadow_shift          //    4 bytes, offset 12
    float      shadow_focus          //    4 bytes, offset 16
    float      matcap_ssao_distance  //    4 bytes, offset 20
    float      matcap_ssao_attenuation //    4 bytes, offset 24
    int        matcap_ssao_samples   //    4 bytes, offset 28
    char       viewport_aa           //    1 bytes, offset 32
    char       render_aa             //    1 bytes, offset 33
    char       _pad[6]               //    6 bytes, offset 34
    View3DShading shading            //  944 bytes, offset 40
struct RaytraceEEVEE // 24 bytes [#718]
    float      screen_trace_quality  //    4 bytes, offset 0
    float      screen_trace_thickness //    4 bytes, offset 4
    float      trace_max_roughness   //    4 bytes, offset 8
    int        resolution_scale      //    4 bytes, offset 12
    int        flag                  //    4 bytes, offset 16
    int        denoise_stages        //    4 bytes, offset 20
struct SceneEEVEE // 224 bytes [#719]
    int        flag                  //    4 bytes, offset 0
    int        gi_diffuse_bounces    //    4 bytes, offset 4
    int        gi_cubemap_resolution //    4 bytes, offset 8
    int        gi_visibility_resolution //    4 bytes, offset 12
    float      gi_glossy_clamp       //    4 bytes, offset 16
    int        gi_irradiance_pool_size //    4 bytes, offset 20
    char       _pad0[4]              //    4 bytes, offset 24
    int        taa_samples           //    4 bytes, offset 28
    int        taa_render_samples    //    4 bytes, offset 32
    float      volumetric_start      //    4 bytes, offset 36
    float      volumetric_end        //    4 bytes, offset 40
    int        volumetric_tile_size  //    4 bytes, offset 44
    int        volumetric_samples    //    4 bytes, offset 48
    float      volumetric_sample_distribution //    4 bytes, offset 52
    float      volumetric_light_clamp //    4 bytes, offset 56
    int        volumetric_shadow_samples //    4 bytes, offset 60
    int        volumetric_ray_depth  //    4 bytes, offset 64
    float      gtao_distance         //    4 bytes, offset 68
    float      gtao_thickness        //    4 bytes, offset 72
    float      gtao_focus            //    4 bytes, offset 76
    int        gtao_resolution       //    4 bytes, offset 80
    int        fast_gi_step_count    //    4 bytes, offset 84
    int        fast_gi_ray_count     //    4 bytes, offset 88
    float      gtao_quality          //    4 bytes, offset 92
    float      fast_gi_distance      //    4 bytes, offset 96
    float      fast_gi_thickness_near //    4 bytes, offset 100
    float      fast_gi_thickness_far //    4 bytes, offset 104
    char       fast_gi_method        //    1 bytes, offset 108
    char       _pad1[3]              //    3 bytes, offset 109
    float      bokeh_overblur        //    4 bytes, offset 112
    float      bokeh_max_size        //    4 bytes, offset 116
    float      bokeh_threshold       //    4 bytes, offset 120
    float      bokeh_neighbor_max    //    4 bytes, offset 124
    int        motion_blur_samples   //    4 bytes, offset 128
    int        motion_blur_max       //    4 bytes, offset 132
    int        motion_blur_steps     //    4 bytes, offset 136
    int        motion_blur_position  //    4 bytes, offset 140
    float      motion_blur_shutter   //    4 bytes, offset 144
    float      motion_blur_depth_scale //    4 bytes, offset 148
    int        shadow_cube_size      //    4 bytes, offset 152
    int        shadow_pool_size      //    4 bytes, offset 156
    int        shadow_ray_count      //    4 bytes, offset 160
    int        shadow_step_count     //    4 bytes, offset 164
    float      shadow_resolution_scale //    4 bytes, offset 168
    float      clamp_surface_direct  //    4 bytes, offset 172
    float      clamp_surface_indirect //    4 bytes, offset 176
    float      clamp_volume_direct   //    4 bytes, offset 180
    float      clamp_volume_indirect //    4 bytes, offset 184
    int        ray_tracing_method    //    4 bytes, offset 188
    RaytraceEEVEE ray_tracing_options //   24 bytes, offset 192
    float      overscan              //    4 bytes, offset 216
    float      light_threshold       //    4 bytes, offset 220
struct SceneGpencil // 8 bytes [#720]
    float      smaa_threshold        //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
struct SceneHydra // 8 bytes [#721]
    int        export_method         //    4 bytes, offset 0
    int        _pad0                 //    4 bytes, offset 4
struct TransformOrientationSlot // 16 bytes [#722]
    int        type                  //    4 bytes, offset 0
    int        index_custom          //    4 bytes, offset 4
    char       flag                  //    1 bytes, offset 8
    char       _pad0[7]              //    7 bytes, offset 9
struct Scene // 6744 bytes, is ID [#723]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    Object     *camera               //    8 bytes, offset 232
    World      *world                //    8 bytes, offset 240
    Scene      *set                  //    8 bytes, offset 248
    ListBase   base                  //   16 bytes, offset 256
    Base       *basact               //    8 bytes, offset 272
    void       *_pad1                //    8 bytes, offset 280
    View3DCursor cursor              //   64 bytes, offset 288
    int        lay                   //    4 bytes, offset 352
    int        layact                //    4 bytes, offset 356
    char       _pad2[4]              //    4 bytes, offset 360
    short      flag                  //    2 bytes, offset 364
    char       use_nodes             //    1 bytes, offset 366
    char       _pad3[1]              //    1 bytes, offset 367
    bNodeTree  *nodetree             //    8 bytes, offset 368
    Editing    *ed                   //    8 bytes, offset 376
    ToolSettings *toolsettings       //    8 bytes, offset 384
    void       *_pad4                //    8 bytes, offset 392
    DisplaySafeAreas safe_areas      //   32 bytes, offset 400
    RenderData r                     // 4376 bytes, offset 432
    AudioData  audio                 //   32 bytes, offset 4808
    ListBase   markers               //   16 bytes, offset 4840
    ListBase   transform_spaces      //   16 bytes, offset 4856
    TransformOrientationSlot orientation_slots[4] //   64 bytes, offset 4872
    void       *sound_scene          //    8 bytes, offset 4936
    void       *playback_handle      //    8 bytes, offset 4944
    void       *sound_scrub_handle   //    8 bytes, offset 4952
    void       *speaker_handles      //    8 bytes, offset 4960
    void       *fps_info             //    8 bytes, offset 4968
    GHash      *depsgraph_hash       //    8 bytes, offset 4976
    char       _pad7[4]              //    4 bytes, offset 4984
    int        active_keyingset      //    4 bytes, offset 4988
    ListBase   keyingsets            //   16 bytes, offset 4992
    UnitSettings unit                //   16 bytes, offset 5008
    bGPdata    *gpd                  //    8 bytes, offset 5024
    MovieClip  *clip                 //    8 bytes, offset 5032
    PhysicsSettings physics_settings //   24 bytes, offset 5040
    void       *_pad8                //    8 bytes, offset 5064
    CustomData_MeshMasks customdata_mask //   40 bytes, offset 5072
    CustomData_MeshMasks customdata_mask_modal //   40 bytes, offset 5112
    ColorManagedViewSettings view_settings //  168 bytes, offset 5152
    ColorManagedDisplaySettings display_settings //   64 bytes, offset 5320
    ColorManagedColorspaceSettings sequencer_colorspace_settings //   64 bytes, offset 5384
    RigidBodyWorld *rigidbody_world  //    8 bytes, offset 5448
    PreviewImage *preview            //    8 bytes, offset 5456
    ListBase   view_layers           //   16 bytes, offset 5464
    Collection *master_collection    //    8 bytes, offset 5480
    IDProperty *layer_properties     //    8 bytes, offset 5488
    int        simulation_frame_start //    4 bytes, offset 5496
    int        simulation_frame_end  //    4 bytes, offset 5500
    SceneDisplay display             //  984 bytes, offset 5504
    SceneEEVEE eevee                 //  224 bytes, offset 6488
    SceneGpencil grease_pencil_settings //    8 bytes, offset 6712
    SceneHydra hydra                 //    8 bytes, offset 6720
    SceneRuntimeHandle *runtime      //    8 bytes, offset 6728
    void       *_pad9                //    8 bytes, offset 6736
struct bScreen // 336 bytes, is ID [#724]
    ID         id                    //  208 bytes, offset 0
    ListBase   vertbase              //   16 bytes, offset 208
    ListBase   edgebase              //   16 bytes, offset 224
    ListBase   areabase              //   16 bytes, offset 240
    ListBase   regionbase            //   16 bytes, offset 256
    Scene      *scene                //    8 bytes, offset 272
    short      flag                  //    2 bytes, offset 280
    short      winid                 //    2 bytes, offset 282
    short      redraws_flag          //    2 bytes, offset 284
    char       temp                  //    1 bytes, offset 286
    char       state                 //    1 bytes, offset 287
    char       do_draw               //    1 bytes, offset 288
    char       do_refresh            //    1 bytes, offset 289
    char       do_draw_gesture       //    1 bytes, offset 290
    char       do_draw_paintcursor   //    1 bytes, offset 291
    char       do_draw_drag          //    1 bytes, offset 292
    char       skip_handling         //    1 bytes, offset 293
    char       scrubbing             //    1 bytes, offset 294
    char       _pad[1]               //    1 bytes, offset 295
    ARegion    *active_region        //    8 bytes, offset 296
    wmTimer    *animtimer            //    8 bytes, offset 304
    void       *context              //    8 bytes, offset 312
    wmTooltipState *tool_tip         //    8 bytes, offset 320
    PreviewImage *preview            //    8 bytes, offset 328
struct ScrVert // 32 bytes [#725]
    ScrVert    *next                 //    8 bytes, offset 0
    ScrVert    *prev                 //    8 bytes, offset 8
    ScrVert    *newv                 //    8 bytes, offset 16
    vec2s      vec                   //    4 bytes, offset 24
    short      flag                  //    2 bytes, offset 28
    short      editflag              //    2 bytes, offset 30
struct ScrEdge // 40 bytes [#726]
    ScrEdge    *next                 //    8 bytes, offset 0
    ScrEdge    *prev                 //    8 bytes, offset 8
    ScrVert    *v1                   //    8 bytes, offset 16
    ScrVert    *v2                   //    8 bytes, offset 24
    short      border                //    2 bytes, offset 32
    short      flag                  //    2 bytes, offset 34
    char       _pad[4]               //    4 bytes, offset 36
struct ScrAreaMap // 48 bytes [#727]
    ListBase   vertbase              //   16 bytes, offset 0
    ListBase   edgebase              //   16 bytes, offset 16
    ListBase   areabase              //   16 bytes, offset 32
struct LayoutPanelState // 32 bytes [#728]
    LayoutPanelState *next           //    8 bytes, offset 0
    LayoutPanelState *prev           //    8 bytes, offset 8
    char       *idname               //    8 bytes, offset 16
    uchar      flag                  //    1 bytes, offset 24
    char       _pad[7]               //    7 bytes, offset 25
struct Panel // 192 bytes [#729]
    Panel      *next                 //    8 bytes, offset 0
    Panel      *prev                 //    8 bytes, offset 8
    PanelType  *type                 //    8 bytes, offset 16
    uiLayout   *layout               //    8 bytes, offset 24
    char       panelname[64]         //   64 bytes, offset 32
    char       *drawname             //    8 bytes, offset 96
    int        ofsx                  //    4 bytes, offset 104
    int        ofsy                  //    4 bytes, offset 108
    int        sizex                 //    4 bytes, offset 112
    int        sizey                 //    4 bytes, offset 116
    int        blocksizex            //    4 bytes, offset 120
    int        blocksizey            //    4 bytes, offset 124
    short      labelofs              //    2 bytes, offset 128
    short      flag                  //    2 bytes, offset 130
    short      runtime_flag          //    2 bytes, offset 132
    char       _pad[6]               //    6 bytes, offset 134
    int        sortorder             //    4 bytes, offset 140
    void       *activedata           //    8 bytes, offset 144
    ListBase   children              //   16 bytes, offset 152
    ListBase   layout_panel_states   //   16 bytes, offset 168
    Panel_Runtime *runtime           //    8 bytes, offset 184
struct PanelCategoryStack // 80 bytes [#730]
    PanelCategoryStack *next         //    8 bytes, offset 0
    PanelCategoryStack *prev         //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
struct uiList // 328 bytes [#731]
    uiList     *next                 //    8 bytes, offset 0
    uiList     *prev                 //    8 bytes, offset 8
    uiListType *type                 //    8 bytes, offset 16
    char       list_id[128]          //  128 bytes, offset 24
    int        layout_type           //    4 bytes, offset 152
    int        flag                  //    4 bytes, offset 156
    int        list_scroll           //    4 bytes, offset 160
    int        list_grip             //    4 bytes, offset 164
    int        list_last_len         //    4 bytes, offset 168
    int        list_last_activei     //    4 bytes, offset 172
    char       filter_byname[128]    //  128 bytes, offset 176
    int        filter_flag           //    4 bytes, offset 304
    int        filter_sort_flag      //    4 bytes, offset 308
    IDProperty *properties           //    8 bytes, offset 312
    uiListDyn  *dyn_data             //    8 bytes, offset 320
struct uiViewState // 8 bytes [#732]
    int        custom_height         //    4 bytes, offset 0
    int        scroll_offset         //    4 bytes, offset 4
struct uiViewStateLink // 88 bytes [#733]
    uiViewStateLink *next            //    8 bytes, offset 0
    uiViewStateLink *prev            //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    uiViewState state                //    8 bytes, offset 80
struct TransformOrientation // 120 bytes [#734]
    TransformOrientation *next       //    8 bytes, offset 0
    TransformOrientation *prev       //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    float      mat[3][3]             //   36 bytes, offset 80
    char       _pad[4]               //    4 bytes, offset 116
struct uiPreview // 88 bytes [#735]
    uiPreview  *next                 //    8 bytes, offset 0
    uiPreview  *prev                 //    8 bytes, offset 8
    char       preview_id[64]        //   64 bytes, offset 16
    short      height                //    2 bytes, offset 80
    short      tag                   //    2 bytes, offset 82
    int        id_session_uid        //    4 bytes, offset 84
struct ScrGlobalAreaData // 12 bytes [#736]
    short      cur_fixed_height      //    2 bytes, offset 0
    short      size_min              //    2 bytes, offset 2
    short      size_max              //    2 bytes, offset 4
    short      align                 //    2 bytes, offset 6
    short      flag                  //    2 bytes, offset 8
    char       _pad[2]               //    2 bytes, offset 10
struct ScrArea_Runtime // 16 bytes [#737]
    bToolRef   *tool                 //    8 bytes, offset 0
    char       is_tool_set           //    1 bytes, offset 8
    char       _pad0[7]              //    7 bytes, offset 9
struct ScrArea // 184 bytes [#738]
    ScrArea    *next                 //    8 bytes, offset 0
    ScrArea    *prev                 //    8 bytes, offset 8
    ScrVert    *v1                   //    8 bytes, offset 16
    ScrVert    *v2                   //    8 bytes, offset 24
    ScrVert    *v3                   //    8 bytes, offset 32
    ScrVert    *v4                   //    8 bytes, offset 40
    bScreen    *full                 //    8 bytes, offset 48
    rcti       totrct                //   16 bytes, offset 56
    char       spacetype             //    1 bytes, offset 72
    char       butspacetype          //    1 bytes, offset 73
    short      butspacetype_subtype  //    2 bytes, offset 74
    short      winx                  //    2 bytes, offset 76
    short      winy                  //    2 bytes, offset 78
    char       headertype            //    1 bytes, offset 80
    char       do_refresh            //    1 bytes, offset 81
    short      flag                  //    2 bytes, offset 82
    short      region_active_win     //    2 bytes, offset 84
    char       _pad[2]               //    2 bytes, offset 86
    SpaceType  *type                 //    8 bytes, offset 88
    ScrGlobalAreaData *global        //    8 bytes, offset 96
    ListBase   spacedata             //   16 bytes, offset 104
    ListBase   regionbase            //   16 bytes, offset 120
    ListBase   handlers              //   16 bytes, offset 136
    ListBase   actionzones           //   16 bytes, offset 152
    ScrArea_Runtime runtime          //   16 bytes, offset 168
struct ARegion // 304 bytes [#739]
    ARegion    *next                 //    8 bytes, offset 0
    ARegion    *prev                 //    8 bytes, offset 8
    View2D     v2d                   //  152 bytes, offset 16
    rcti       winrct                //   16 bytes, offset 168
    short      winx                  //    2 bytes, offset 184
    short      winy                  //    2 bytes, offset 186
    int        category_scroll       //    4 bytes, offset 188
    short      regiontype            //    2 bytes, offset 192
    short      alignment             //    2 bytes, offset 194
    short      flag                  //    2 bytes, offset 196
    short      sizex                 //    2 bytes, offset 198
    short      sizey                 //    2 bytes, offset 200
    short      overlap               //    2 bytes, offset 202
    short      flagfullscreen        //    2 bytes, offset 204
    char       _pad[2]               //    2 bytes, offset 206
    ListBase   panels                //   16 bytes, offset 208
    ListBase   panels_category_active //   16 bytes, offset 224
    ListBase   ui_lists              //   16 bytes, offset 240
    ListBase   ui_previews           //   16 bytes, offset 256
    ListBase   view_states           //   16 bytes, offset 272
    void       *regiondata           //    8 bytes, offset 288
    ARegionRuntimeHandle *runtime    //    8 bytes, offset 296
struct AssetShelfSettings // 104 bytes [#740]
    AssetLibraryReference asset_library_reference //    8 bytes, offset 0
    ListBase   enabled_catalog_paths //   16 bytes, offset 8
    char       *active_catalog_path  //    8 bytes, offset 24
    char       search_string[64]     //   64 bytes, offset 32
    short      preview_size          //    2 bytes, offset 96
    short      display_flag          //    2 bytes, offset 98
    char       _pad1[4]              //    4 bytes, offset 100
struct AssetShelf // 200 bytes [#741]
    AssetShelf *next                 //    8 bytes, offset 0
    AssetShelf *prev                 //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    AssetShelfType *type             //    8 bytes, offset 80
    AssetShelfSettings settings      //  104 bytes, offset 88
    short      preferred_row_count   //    2 bytes, offset 192
    short      instance_flag         //    2 bytes, offset 194
    char       _pad[4]               //    4 bytes, offset 196
struct RegionAssetShelf // 24 bytes [#742]
    ListBase   shelves               //   16 bytes, offset 0
    AssetShelf *active_shelf         //    8 bytes, offset 16
struct FileHandler // 8 bytes [#743]
    FileHandlerTypeHandle *type      //    8 bytes, offset 0
struct StripAnim // 24 bytes [#744]
    StripAnim  *next                 //    8 bytes, offset 0
    StripAnim  *prev                 //    8 bytes, offset 8
    MovieReader *anim                //    8 bytes, offset 16
struct StripElem // 268 bytes [#745]
    char       name[256]             //  256 bytes, offset 0
    int        orig_width            //    4 bytes, offset 256
    int        orig_height           //    4 bytes, offset 260
    float      orig_fps              //    4 bytes, offset 264
struct StripCrop // 16 bytes [#746]
    int        top                   //    4 bytes, offset 0
    int        bottom                //    4 bytes, offset 4
    int        left                  //    4 bytes, offset 8
    int        right                 //    4 bytes, offset 12
struct StripTransform // 32 bytes [#747]
    float      xofs                  //    4 bytes, offset 0
    float      yofs                  //    4 bytes, offset 4
    float      scale_x               //    4 bytes, offset 8
    float      scale_y               //    4 bytes, offset 12
    float      rotation              //    4 bytes, offset 16
    float      origin[2]             //    8 bytes, offset 20
    int        filter                //    4 bytes, offset 28
struct StripColorBalance // 84 bytes [#748]
    int        method                //    4 bytes, offset 0
    float      lift[3]               //   12 bytes, offset 4
    float      gamma[3]              //   12 bytes, offset 16
    float      gain[3]               //   12 bytes, offset 28
    float      slope[3]              //   12 bytes, offset 40
    float      offset[3]             //   12 bytes, offset 52
    float      power[3]              //   12 bytes, offset 64
    int        flag                  //    4 bytes, offset 76
    char       _pad[4]               //    4 bytes, offset 80
struct StripProxy // 1048 bytes [#749]
    char       dir[768]              //  768 bytes, offset 0
    char       file[256]             //  256 bytes, offset 768
    MovieReader *anim                //    8 bytes, offset 1024
    short      tc                    //    2 bytes, offset 1032
    short      quality               //    2 bytes, offset 1034
    short      build_size_flags      //    2 bytes, offset 1036
    short      build_tc_flags        //    2 bytes, offset 1038
    short      build_flags           //    2 bytes, offset 1040
    char       storage               //    1 bytes, offset 1042
    char       _pad[5]               //    5 bytes, offset 1043
struct Strip // 904 bytes [#750]
    Strip      *next                 //    8 bytes, offset 0
    Strip      *prev                 //    8 bytes, offset 8
    int        us                    //    4 bytes, offset 16
    int        done                  //    4 bytes, offset 20
    int        startstill            //    4 bytes, offset 24
    int        endstill              //    4 bytes, offset 28
    StripElem  *stripdata            //    8 bytes, offset 32
    char       dir[768]              //  768 bytes, offset 40
    StripProxy *proxy                //    8 bytes, offset 808
    StripCrop  *crop                 //    8 bytes, offset 816
    StripTransform *transform        //    8 bytes, offset 824
    StripColorBalance *color_balance //    8 bytes, offset 832
    ColorManagedColorspaceSettings colorspace_settings //   64 bytes, offset 840
struct SeqRetimingHandle // 40 bytes [#751]
    double     strip_frame_index     //    8 bytes, offset 0
    int        flag                  //    4 bytes, offset 8
    int        _pad0                 //    4 bytes, offset 12
    float      retiming_factor       //    4 bytes, offset 16
    char       _pad1[4]              //    4 bytes, offset 20
    double     original_strip_frame_index //    8 bytes, offset 24
    float      original_retiming_factor //    4 bytes, offset 32
    char       _pad2[4]              //    4 bytes, offset 36
struct StripRuntime // 8 bytes [#752]
    SessionUID session_uid           //    8 bytes, offset 0
struct Sequence // 464 bytes [#753]
    Sequence   *next                 //    8 bytes, offset 0
    Sequence   *prev                 //    8 bytes, offset 8
    void       *_pad                 //    8 bytes, offset 16
    void       *lib                  //    8 bytes, offset 24
    char       name[64]              //   64 bytes, offset 32
    int        flag                  //    4 bytes, offset 96
    int        type                  //    4 bytes, offset 100
    int        len                   //    4 bytes, offset 104
    float      start                 //    4 bytes, offset 108
    float      startofs              //    4 bytes, offset 112
    float      endofs                //    4 bytes, offset 116
    float      startstill            //    4 bytes, offset 120
    float      endstill              //    4 bytes, offset 124
    int        machine               //    4 bytes, offset 128
    int        startdisp             //    4 bytes, offset 132
    int        enddisp               //    4 bytes, offset 136
    float      sat                   //    4 bytes, offset 140
    float      mul                   //    4 bytes, offset 144
    short      streamindex           //    2 bytes, offset 148
    short      _pad1                 //    2 bytes, offset 150
    int        multicam_source       //    4 bytes, offset 152
    int        clip_flag             //    4 bytes, offset 156
    Strip      *strip                //    8 bytes, offset 160
    Ipo        *ipo                  //    8 bytes, offset 168
    Scene      *scene                //    8 bytes, offset 176
    Object     *scene_camera         //    8 bytes, offset 184
    MovieClip  *clip                 //    8 bytes, offset 192
    Mask       *mask                 //    8 bytes, offset 200
    ListBase   anims                 //   16 bytes, offset 208
    float      effect_fader          //    4 bytes, offset 224
    float      speed_fader           //    4 bytes, offset 228
    Sequence   *seq1                 //    8 bytes, offset 232
    Sequence   *seq2                 //    8 bytes, offset 240
    void       *_pad7                //    8 bytes, offset 248
    int        _pad8[2]              //    8 bytes, offset 256
    ListBase   seqbase               //   16 bytes, offset 264
    ListBase   channels              //   16 bytes, offset 280
    ListBase   connections           //   16 bytes, offset 296
    bSound     *sound                //    8 bytes, offset 312
    void       *scene_sound          //    8 bytes, offset 320
    float      volume                //    4 bytes, offset 328
    float      pitch                 //    4 bytes, offset 332
    float      pan                   //    4 bytes, offset 336
    float      strobe                //    4 bytes, offset 340
    float      sound_offset          //    4 bytes, offset 344
    char       _pad4[4]              //    4 bytes, offset 348
    void       *effectdata           //    8 bytes, offset 352
    int        anim_startofs         //    4 bytes, offset 360
    int        anim_endofs           //    4 bytes, offset 364
    int        blend_mode            //    4 bytes, offset 368
    float      blend_opacity         //    4 bytes, offset 372
    int8_t     color_tag             //    1 bytes, offset 376
    char       alpha_mode            //    1 bytes, offset 377
    char       _pad2[2]              //    2 bytes, offset 378
    int        cache_flag            //    4 bytes, offset 380
    int        sfra                  //    4 bytes, offset 384
    char       views_format          //    1 bytes, offset 388
    char       _pad3[3]              //    3 bytes, offset 389
    Stereo3dFormat *stereo3d_format  //    8 bytes, offset 392
    IDProperty *prop                 //    8 bytes, offset 400
    ListBase   modifiers             //   16 bytes, offset 408
    float      media_playback_rate   //    4 bytes, offset 424
    float      speed_factor          //    4 bytes, offset 428
    SeqRetimingHandle *retiming_handles //    8 bytes, offset 432
    void       *_pad5                //    8 bytes, offset 440
    int        retiming_handle_num   //    4 bytes, offset 448
    char       _pad6[4]              //    4 bytes, offset 452
    StripRuntime runtime             //    8 bytes, offset 456
struct MetaStack // 48 bytes [#754]
    MetaStack  *next                 //    8 bytes, offset 0
    MetaStack  *prev                 //    8 bytes, offset 8
    ListBase   *oldbasep             //    8 bytes, offset 16
    ListBase   *old_channels         //    8 bytes, offset 24
    Sequence   *parseq               //    8 bytes, offset 32
    int        disp_range[2]         //    8 bytes, offset 40
struct SeqTimelineChannel // 88 bytes [#755]
    SeqTimelineChannel *next         //    8 bytes, offset 0
    SeqTimelineChannel *prev         //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    int        index                 //    4 bytes, offset 80
    int        flag                  //    4 bytes, offset 84
struct SeqConnection // 24 bytes [#756]
    SeqConnection *next              //    8 bytes, offset 0
    SeqConnection *prev              //    8 bytes, offset 8
    Sequence   *seq_ref              //    8 bytes, offset 16
struct EditingRuntime // 32 bytes [#757]
    StripLookup *strip_lookup        //    8 bytes, offset 0
    MediaPresence *media_presence    //    8 bytes, offset 8
    ThumbnailCache *thumbnail_cache  //    8 bytes, offset 16
    void       *_pad                 //    8 bytes, offset 24
struct Editing // 3256 bytes [#758]
    ListBase   *seqbasep             //    8 bytes, offset 0
    ListBase   *displayed_channels   //    8 bytes, offset 8
    void       *_pad0                //    8 bytes, offset 16
    ListBase   seqbase               //   16 bytes, offset 24
    ListBase   metastack             //   16 bytes, offset 40
    ListBase   channels              //   16 bytes, offset 56
    Sequence   *act_seq              //    8 bytes, offset 72
    char       act_imagedir[1024]    // 1024 bytes, offset 80
    char       act_sounddir[1024]    // 1024 bytes, offset 1104
    char       proxy_dir[1024]       // 1024 bytes, offset 2128
    int        proxy_storage         //    4 bytes, offset 3152
    int        over_ofs              //    4 bytes, offset 3156
    int        over_cfra             //    4 bytes, offset 3160
    int        over_flag             //    4 bytes, offset 3164
    rctf       over_border           //   16 bytes, offset 3168
    int        show_missing_media_flag //    4 bytes, offset 3184
    int        _pad1                 //    4 bytes, offset 3188
    SeqCache   *cache                //    8 bytes, offset 3192
    float      recycle_max_cost      //    4 bytes, offset 3200
    int        cache_flag            //    4 bytes, offset 3204
    PrefetchJob *prefetch_job        //    8 bytes, offset 3208
    int64_t    disk_cache_timestamp  //    8 bytes, offset 3216
    EditingRuntime runtime           //   32 bytes, offset 3224
struct WipeVars // 12 bytes [#759]
    float      edgeWidth             //    4 bytes, offset 0
    float      angle                 //    4 bytes, offset 4
    short      forward               //    2 bytes, offset 8
    short      wipetype              //    2 bytes, offset 10
struct GlowVars // 24 bytes [#760]
    float      fMini                 //    4 bytes, offset 0
    float      fClamp                //    4 bytes, offset 4
    float      fBoost                //    4 bytes, offset 8
    float      dDist                 //    4 bytes, offset 12
    int        dQuality              //    4 bytes, offset 16
    int        bNoComp               //    4 bytes, offset 20
struct TransformVars // 32 bytes [#761]
    float      ScalexIni             //    4 bytes, offset 0
    float      ScaleyIni             //    4 bytes, offset 4
    float      xIni                  //    4 bytes, offset 8
    float      yIni                  //    4 bytes, offset 12
    float      rotIni                //    4 bytes, offset 16
    int        percent               //    4 bytes, offset 20
    int        interpolation         //    4 bytes, offset 24
    int        uniform_scale         //    4 bytes, offset 28
struct SolidColorVars // 16 bytes [#762]
    float      col[3]                //   12 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 12
struct SpeedControlVars // 32 bytes [#763]
    float      *frameMap             //    8 bytes, offset 0
    float      globalSpeed           //    4 bytes, offset 8
    int        flags                 //    4 bytes, offset 12
    int        speed_control_type    //    4 bytes, offset 16
    float      speed_fader           //    4 bytes, offset 20
    float      speed_fader_length    //    4 bytes, offset 24
    float      speed_fader_frame_number //    4 bytes, offset 28
struct GaussianBlurVars // 8 bytes [#764]
    float      size_x                //    4 bytes, offset 0
    float      size_y                //    4 bytes, offset 4
struct TextVars // 656 bytes [#765]
    char       text[512]             //  512 bytes, offset 0
    VFont      *text_font            //    8 bytes, offset 512
    int        text_blf_id           //    4 bytes, offset 520
    float      text_size             //    4 bytes, offset 524
    float      color[4]              //   16 bytes, offset 528
    float      shadow_color[4]       //   16 bytes, offset 544
    float      box_color[4]          //   16 bytes, offset 560
    float      outline_color[4]      //   16 bytes, offset 576
    float      loc[2]                //    8 bytes, offset 592
    float      wrap_width            //    4 bytes, offset 600
    float      box_margin            //    4 bytes, offset 604
    float      box_roundness         //    4 bytes, offset 608
    float      shadow_angle          //    4 bytes, offset 612
    float      shadow_offset         //    4 bytes, offset 616
    float      shadow_blur           //    4 bytes, offset 620
    float      outline_width         //    4 bytes, offset 624
    char       flag                  //    1 bytes, offset 628
    char       align                 //    1 bytes, offset 629
    char       _pad[2]               //    2 bytes, offset 630
    int        cursor_offset         //    4 bytes, offset 632
    int        selection_start_offset //    4 bytes, offset 636
    int        selection_end_offset  //    4 bytes, offset 640
    char       align_y               //    1 bytes, offset 644
    char       anchor_x              //    1 bytes, offset 645
    char       anchor_y              //    1 bytes, offset 646
    char       _pad1                 //    1 bytes, offset 647
    TextVarsRuntime *runtime         //    8 bytes, offset 648
struct ColorMixVars // 8 bytes [#766]
    int        blend_effect          //    4 bytes, offset 0
    float      factor                //    4 bytes, offset 4
struct SequenceModifierData // 112 bytes [#767]
    SequenceModifierData *next       //    8 bytes, offset 0
    SequenceModifierData *prev       //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    int        flag                  //    4 bytes, offset 20
    char       name[64]              //   64 bytes, offset 24
    int        mask_input_type       //    4 bytes, offset 88
    int        mask_time             //    4 bytes, offset 92
    Sequence   *mask_sequence        //    8 bytes, offset 96
    Mask       *mask_id              //    8 bytes, offset 104
struct ColorBalanceModifierData // 200 bytes [#768]
    SequenceModifierData modifier    //  112 bytes, offset 0
    StripColorBalance color_balance  //   84 bytes, offset 112
    float      color_multiply        //    4 bytes, offset 196
struct CurvesModifierData // 536 bytes [#769]
    SequenceModifierData modifier    //  112 bytes, offset 0
    CurveMapping curve_mapping       //  424 bytes, offset 112
struct HueCorrectModifierData // 536 bytes [#770]
    SequenceModifierData modifier    //  112 bytes, offset 0
    CurveMapping curve_mapping       //  424 bytes, offset 112
struct BrightContrastModifierData // 120 bytes [#771]
    SequenceModifierData modifier    //  112 bytes, offset 0
    float      bright                //    4 bytes, offset 112
    float      contrast              //    4 bytes, offset 116
struct SequencerMaskModifierData // 112 bytes [#772]
    SequenceModifierData modifier    //  112 bytes, offset 0
struct WhiteBalanceModifierData // 128 bytes [#773]
    SequenceModifierData modifier    //  112 bytes, offset 0
    float      white_value[3]        //   12 bytes, offset 112
    char       _pad[4]               //    4 bytes, offset 124
struct SequencerTonemapModifierData // 144 bytes [#774]
    SequenceModifierData modifier    //  112 bytes, offset 0
    float      key                   //    4 bytes, offset 112
    float      offset                //    4 bytes, offset 116
    float      gamma                 //    4 bytes, offset 120
    float      intensity             //    4 bytes, offset 124
    float      contrast              //    4 bytes, offset 128
    float      adaptation            //    4 bytes, offset 132
    float      correction            //    4 bytes, offset 136
    int        type                  //    4 bytes, offset 140
struct EQCurveMappingData // 440 bytes [#775]
    EQCurveMappingData *next         //    8 bytes, offset 0
    EQCurveMappingData *prev         //    8 bytes, offset 8
    CurveMapping curve_mapping       //  424 bytes, offset 16
struct SoundEqualizerModifierData // 128 bytes [#776]
    SequenceModifierData modifier    //  112 bytes, offset 0
    ListBase   graphics              //   16 bytes, offset 112
struct SessionUID // 8 bytes [#777]
    uint64_t   uid_                  //    8 bytes, offset 0
struct ShaderFxData // 104 bytes [#778]
    ShaderFxData *next               //    8 bytes, offset 0
    ShaderFxData *prev               //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    int        mode                  //    4 bytes, offset 20
    char       _pad0[4]              //    4 bytes, offset 24
    short      flag                  //    2 bytes, offset 28
    short      ui_expand_flag        //    2 bytes, offset 30
    char       name[64]              //   64 bytes, offset 32
    char       *error                //    8 bytes, offset 96
struct ShaderFxData_Runtime // 40 bytes [#779]
    float      loc[3]                //   12 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 12
    DRWShadingGroup *fx_sh           //    8 bytes, offset 16
    DRWShadingGroup *fx_sh_b         //    8 bytes, offset 24
    DRWShadingGroup *fx_sh_c         //    8 bytes, offset 32
struct BlurShaderFxData // 168 bytes [#780]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    float      radius[2]             //    8 bytes, offset 104
    int        flag                  //    4 bytes, offset 112
    int        samples               //    4 bytes, offset 116
    float      rotation              //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
    ShaderFxData_Runtime runtime     //   40 bytes, offset 128
struct ColorizeShaderFxData // 192 bytes [#781]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    int        mode                  //    4 bytes, offset 104
    float      low_color[4]          //   16 bytes, offset 108
    float      high_color[4]         //   16 bytes, offset 124
    float      factor                //    4 bytes, offset 140
    int        flag                  //    4 bytes, offset 144
    char       _pad[4]               //    4 bytes, offset 148
    ShaderFxData_Runtime runtime     //   40 bytes, offset 152
struct FlipShaderFxData // 152 bytes [#782]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    int        flag                  //    4 bytes, offset 104
    int        flipmode              //    4 bytes, offset 108
    ShaderFxData_Runtime runtime     //   40 bytes, offset 112
struct GlowShaderFxData // 208 bytes [#783]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    float      glow_color[4]         //   16 bytes, offset 104
    float      select_color[3]       //   12 bytes, offset 120
    float      threshold             //    4 bytes, offset 132
    int        flag                  //    4 bytes, offset 136
    int        mode                  //    4 bytes, offset 140
    float      blur[2]               //    8 bytes, offset 144
    int        samples               //    4 bytes, offset 152
    float      rotation              //    4 bytes, offset 156
    int        blend_mode            //    4 bytes, offset 160
    char       _pad[4]               //    4 bytes, offset 164
    ShaderFxData_Runtime runtime     //   40 bytes, offset 168
struct PixelShaderFxData // 176 bytes [#784]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    int        size[3]               //   12 bytes, offset 104
    int        flag                  //    4 bytes, offset 116
    float      rgba[4]               //   16 bytes, offset 120
    ShaderFxData_Runtime runtime     //   40 bytes, offset 136
struct RimShaderFxData // 200 bytes [#785]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    int        offset[2]             //    8 bytes, offset 104
    int        flag                  //    4 bytes, offset 112
    float      rim_rgb[3]            //   12 bytes, offset 116
    float      mask_rgb[3]           //   12 bytes, offset 128
    int        mode                  //    4 bytes, offset 140
    int        blur[2]               //    8 bytes, offset 144
    int        samples               //    4 bytes, offset 152
    char       _pad[4]               //    4 bytes, offset 156
    ShaderFxData_Runtime runtime     //   40 bytes, offset 160
struct ShadowShaderFxData // 224 bytes [#786]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    int        offset[2]             //    8 bytes, offset 112
    int        flag                  //    4 bytes, offset 120
    float      shadow_rgba[4]        //   16 bytes, offset 124
    float      amplitude             //    4 bytes, offset 140
    float      period                //    4 bytes, offset 144
    float      phase                 //    4 bytes, offset 148
    int        orientation           //    4 bytes, offset 152
    float      scale[2]              //    8 bytes, offset 156
    float      rotation              //    4 bytes, offset 164
    int        blur[2]               //    8 bytes, offset 168
    int        samples               //    4 bytes, offset 176
    char       _pad[4]               //    4 bytes, offset 180
    ShaderFxData_Runtime runtime     //   40 bytes, offset 184
struct SwirlShaderFxData // 168 bytes [#787]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    Object     *object               //    8 bytes, offset 104
    int        flag                  //    4 bytes, offset 112
    int        radius                //    4 bytes, offset 116
    float      angle                 //    4 bytes, offset 120
    int        transparent           //    4 bytes, offset 124
    ShaderFxData_Runtime runtime     //   40 bytes, offset 128
struct WaveShaderFxData // 168 bytes [#788]
    ShaderFxData shaderfx            //  104 bytes, offset 0
    float      amplitude             //    4 bytes, offset 104
    float      period                //    4 bytes, offset 108
    float      phase                 //    4 bytes, offset 112
    int        orientation           //    4 bytes, offset 116
    int        flag                  //    4 bytes, offset 120
    char       _pad[4]               //    4 bytes, offset 124
    ShaderFxData_Runtime runtime     //   40 bytes, offset 128
struct bSound // 1344 bytes, is ID [#789]
    ID         id                    //  208 bytes, offset 0
    char       name[1024]            // 1024 bytes, offset 208
    PackedFile *packedfile           //    8 bytes, offset 1232
    void       *handle               //    8 bytes, offset 1240
    PackedFile *newpackedfile        //    8 bytes, offset 1248
    Ipo        *ipo                  //    8 bytes, offset 1256
    float      volume                //    4 bytes, offset 1264
    float      attenuation           //    4 bytes, offset 1268
    float      pitch                 //    4 bytes, offset 1272
    float      min_gain              //    4 bytes, offset 1276
    float      max_gain              //    4 bytes, offset 1280
    float      distance              //    4 bytes, offset 1284
    short      flags                 //    2 bytes, offset 1288
    short      tags                  //    2 bytes, offset 1290
    char       _pad[4]               //    4 bytes, offset 1292
    double     offset_time           //    8 bytes, offset 1296
    void       *cache                //    8 bytes, offset 1304
    void       *waveform             //    8 bytes, offset 1312
    void       *playback_handle      //    8 bytes, offset 1320
    void       *spinlock             //    8 bytes, offset 1328
    int        audio_channels        //    4 bytes, offset 1336
    int        samplerate            //    4 bytes, offset 1340
struct SpaceLink // 40 bytes [#790]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
struct SpaceInfo // 48 bytes [#791]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    char       rpt_mask              //    1 bytes, offset 40
    char       _pad[7]               //    7 bytes, offset 41
struct SpaceButs // 248 bytes [#792]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    View2D     v2d                   //  152 bytes, offset 40
    short      space_subtype         //    2 bytes, offset 192
    short      mainb                 //    2 bytes, offset 194
    short      mainbo                //    2 bytes, offset 196
    short      mainbuser             //    2 bytes, offset 198
    short      preview               //    2 bytes, offset 200
    char       _pad[4]               //    4 bytes, offset 202
    char       flag                  //    1 bytes, offset 206
    char       outliner_sync         //    1 bytes, offset 207
    void       *path                 //    8 bytes, offset 208
    int        pathflag              //    4 bytes, offset 216
    int        dataicon              //    4 bytes, offset 220
    ID         *pinid                //    8 bytes, offset 224
    void       *texuser              //    8 bytes, offset 232
    SpaceProperties_Runtime *runtime //    8 bytes, offset 240
struct SpaceOops // 312 bytes [#793]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    View2D     v2d                   //  152 bytes, offset 40
    ListBase   tree                  //   16 bytes, offset 192
    BLI_mempool *treestore           //    8 bytes, offset 208
    char       search_string[64]     //   64 bytes, offset 216
    short      flag                  //    2 bytes, offset 280
    short      outlinevis            //    2 bytes, offset 282
    short      lib_override_view_mode //    2 bytes, offset 284
    short      storeflag             //    2 bytes, offset 286
    char       search_flags          //    1 bytes, offset 288
    char       _pad[6]               //    6 bytes, offset 289
    char       sync_select_dirty     //    1 bytes, offset 295
    int        filter                //    4 bytes, offset 296
    char       filter_state          //    1 bytes, offset 300
    char       show_restrict_flags   //    1 bytes, offset 301
    short      filter_id_type        //    2 bytes, offset 302
    SpaceOutliner_Runtime *runtime   //    8 bytes, offset 304
struct SpaceGraph_Runtime // 24 bytes [#794]
    char       flag                  //    1 bytes, offset 0
    char       _pad[7]               //    7 bytes, offset 1
    ListBase   ghost_curves          //   16 bytes, offset 8
struct SpaceIpo // 248 bytes [#795]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    View2D     v2d                   //  152 bytes, offset 40
    bDopeSheet *ads                  //    8 bytes, offset 192
    short      mode                  //    2 bytes, offset 200
    short      autosnap              //    2 bytes, offset 202
    int        flag                  //    4 bytes, offset 204
    float      cursorTime            //    4 bytes, offset 208
    float      cursorVal             //    4 bytes, offset 212
    int        around                //    4 bytes, offset 216
    char       _pad[4]               //    4 bytes, offset 220
    SpaceGraph_Runtime runtime       //   24 bytes, offset 224
struct SpaceNla // 208 bytes [#796]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    short      autosnap              //    2 bytes, offset 40
    short      flag                  //    2 bytes, offset 42
    char       _pad[4]               //    4 bytes, offset 44
    bDopeSheet *ads                  //    8 bytes, offset 48
    View2D     v2d                   //  152 bytes, offset 56
struct SequencerPreviewOverlay // 8 bytes [#797]
    int        flag                  //    4 bytes, offset 0
    char       _pad0[4]              //    4 bytes, offset 4
struct SequencerTimelineOverlay // 8 bytes [#798]
    int        flag                  //    4 bytes, offset 0
    char       _pad0[4]              //    4 bytes, offset 4
struct SequencerCacheOverlay // 8 bytes [#799]
    int        flag                  //    4 bytes, offset 0
    char       _pad0[4]              //    4 bytes, offset 4
struct SpaceSeq // 280 bytes [#800]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    View2D     v2d                   //  152 bytes, offset 40
    float      xof                   //    4 bytes, offset 192
    float      yof                   //    4 bytes, offset 196
    short      mainb                 //    2 bytes, offset 200
    short      render_size           //    2 bytes, offset 202
    short      chanshown             //    2 bytes, offset 204
    short      zebra                 //    2 bytes, offset 206
    int        flag                  //    4 bytes, offset 208
    float      zoom                  //    4 bytes, offset 212
    char       view                  //    1 bytes, offset 216
    char       overlay_type          //    1 bytes, offset 217
    char       draw_flag             //    1 bytes, offset 218
    char       gizmo_flag            //    1 bytes, offset 219
    char       _pad[4]               //    4 bytes, offset 220
    float      cursor[2]             //    8 bytes, offset 224
    bGPdata    *gpd                  //    8 bytes, offset 232
    SequencerPreviewOverlay preview_overlay //    8 bytes, offset 240
    SequencerTimelineOverlay timeline_overlay //    8 bytes, offset 248
    SequencerCacheOverlay cache_overlay //    8 bytes, offset 256
    char       multiview_eye         //    1 bytes, offset 264
    char       _pad2[7]              //    7 bytes, offset 265
    SpaceSeq_Runtime *runtime        //    8 bytes, offset 272
struct MaskSpaceInfo // 16 bytes [#801]
    Mask       *mask                 //    8 bytes, offset 0
    char       draw_flag             //    1 bytes, offset 8
    char       draw_type             //    1 bytes, offset 9
    char       overlay_mode          //    1 bytes, offset 10
    char       _pad3[1]              //    1 bytes, offset 11
    float      blend_factor          //    4 bytes, offset 12
struct FileSelectParams // 2088 bytes [#802]
    char       title[96]             //   96 bytes, offset 0
    char       dir[1090]             // 1090 bytes, offset 96
    char       file[256]             //  256 bytes, offset 1186
    char       renamefile[256]       //  256 bytes, offset 1442
    short      rename_flag           //    2 bytes, offset 1698
    char       _pad[4]               //    4 bytes, offset 1700
    ID         *rename_id            //    8 bytes, offset 1704
    void       *_pad3                //    8 bytes, offset 1712
    char       filter_glob[256]      //  256 bytes, offset 1720
    char       filter_search[64]     //   64 bytes, offset 1976
    uint64_t   filter_id             //    8 bytes, offset 2040
    int        active_file           //    4 bytes, offset 2048
    int        highlight_file        //    4 bytes, offset 2052
    int        sel_first             //    4 bytes, offset 2056
    int        sel_last              //    4 bytes, offset 2060
    short      thumbnail_size        //    2 bytes, offset 2064
    char       _pad1[2]              //    2 bytes, offset 2066
    short      type                  //    2 bytes, offset 2068
    short      flag                  //    2 bytes, offset 2070
    short      sort                  //    2 bytes, offset 2072
    short      display               //    2 bytes, offset 2074
    char       details_flags         //    1 bytes, offset 2076
    char       _pad2[3]              //    3 bytes, offset 2077
    int        filter                //    4 bytes, offset 2080
    short      recursion_level       //    2 bytes, offset 2084
    char       _pad4[2]              //    2 bytes, offset 2086
struct FileAssetSelectParams // 2128 bytes [#803]
    FileSelectParams base_params     // 2088 bytes, offset 0
    AssetLibraryReference asset_library_ref //    8 bytes, offset 2088
    short      asset_catalog_visibility //    2 bytes, offset 2096
    char       _pad[6]               //    6 bytes, offset 2098
    bUUID      catalog_id            //   16 bytes, offset 2104
    short      import_type           //    2 bytes, offset 2120
    char       _pad2[6]              //    6 bytes, offset 2122
struct FileFolderHistory // 56 bytes [#804]
    FileFolderLists *next            //    8 bytes, offset 0
    FileFolderLists *prev            //    8 bytes, offset 8
    char       browse_mode           //    1 bytes, offset 16
    char       _pad[7]               //    7 bytes, offset 17
    ListBase   folders_prev          //   16 bytes, offset 24
    ListBase   folders_next          //   16 bytes, offset 40
struct SpaceFile // 160 bytes [#805]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    char       browse_mode           //    1 bytes, offset 40
    char       _pad1[1]              //    1 bytes, offset 41
    short      tags                  //    2 bytes, offset 42
    int        scroll_offset         //    4 bytes, offset 44
    FileSelectParams *params         //    8 bytes, offset 48
    FileAssetSelectParams *asset_params //    8 bytes, offset 56
    void       *_pad2                //    8 bytes, offset 64
    FileList   *files                //    8 bytes, offset 72
    ListBase   *folders_prev         //    8 bytes, offset 80
    ListBase   *folders_next         //    8 bytes, offset 88
    ListBase   folder_histories      //   16 bytes, offset 96
    wmOperator *op                   //    8 bytes, offset 112
    wmTimer    *smoothscroll_timer   //    8 bytes, offset 120
    wmTimer    *previews_timer       //    8 bytes, offset 128
    FileLayout *layout               //    8 bytes, offset 136
    short      recentnr              //    2 bytes, offset 144
    short      bookmarknr            //    2 bytes, offset 146
    short      systemnr              //    2 bytes, offset 148
    short      system_bookmarknr     //    2 bytes, offset 150
    SpaceFile_Runtime *runtime       //    8 bytes, offset 152
struct SpaceImageOverlay // 8 bytes [#806]
    int        flag                  //    4 bytes, offset 0
    char       _pad[4]               //    4 bytes, offset 4
struct SpaceImage // 10624 bytes [#807]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    Image      *image                //    8 bytes, offset 40
    ImageUser  iuser                 //   40 bytes, offset 48
    Scopes     scopes                // 5272 bytes, offset 88
    Histogram  sample_line_hist      // 5160 bytes, offset 5360
    bGPdata    *gpd                  //    8 bytes, offset 10520
    float      cursor[2]             //    8 bytes, offset 10528
    float      xof                   //    4 bytes, offset 10536
    float      yof                   //    4 bytes, offset 10540
    float      zoom                  //    4 bytes, offset 10544
    float      centx                 //    4 bytes, offset 10548
    float      centy                 //    4 bytes, offset 10552
    char       mode                  //    1 bytes, offset 10556
    char       mode_prev             //    1 bytes, offset 10557
    char       pin                   //    1 bytes, offset 10558
    char       pixel_snap_mode       //    1 bytes, offset 10559
    char       lock                  //    1 bytes, offset 10560
    char       dt_uv                 //    1 bytes, offset 10561
    char       dt_uvstretch          //    1 bytes, offset 10562
    char       around                //    1 bytes, offset 10563
    char       gizmo_flag            //    1 bytes, offset 10564
    char       grid_shape_source     //    1 bytes, offset 10565
    char       _pad1[6]              //    6 bytes, offset 10566
    int        flag                  //    4 bytes, offset 10572
    float      uv_opacity            //    4 bytes, offset 10576
    float      stretch_opacity       //    4 bytes, offset 10580
    int        tile_grid_shape[2]    //    8 bytes, offset 10584
    int        custom_grid_subdiv[2] //    8 bytes, offset 10592
    MaskSpaceInfo mask_info          //   16 bytes, offset 10600
    SpaceImageOverlay overlay        //    8 bytes, offset 10616
struct SpaceText // 600 bytes [#808]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    Text       *text                 //    8 bytes, offset 40
    int        top                   //    4 bytes, offset 48
    int        left                  //    4 bytes, offset 52
    char       _pad1[4]              //    4 bytes, offset 56
    short      flags                 //    2 bytes, offset 60
    short      lheight               //    2 bytes, offset 62
    int        tabnumber             //    4 bytes, offset 64
    char       wordwrap              //    1 bytes, offset 68
    char       doplugins             //    1 bytes, offset 69
    char       showlinenrs           //    1 bytes, offset 70
    char       showsyntax            //    1 bytes, offset 71
    char       line_hlight           //    1 bytes, offset 72
    char       overwrite             //    1 bytes, offset 73
    char       live_edit             //    1 bytes, offset 74
    char       _pad2[1]              //    1 bytes, offset 75
    char       findstr[256]          //  256 bytes, offset 76
    char       replacestr[256]       //  256 bytes, offset 332
    short      margin_column         //    2 bytes, offset 588
    char       _pad3[2]              //    2 bytes, offset 590
    SpaceText_Runtime *runtime       //    8 bytes, offset 592
struct Script // 1536 bytes, is ID [#809]
    ID         id                    //  208 bytes, offset 0
    void       *py_draw              //    8 bytes, offset 208
    void       *py_event             //    8 bytes, offset 216
    void       *py_button            //    8 bytes, offset 224
    void       *py_browsercallback   //    8 bytes, offset 232
    void       *py_globaldict        //    8 bytes, offset 240
    int        flags                 //    4 bytes, offset 248
    int        lastspace             //    4 bytes, offset 252
    char       scriptname[1024]      // 1024 bytes, offset 256
    char       scriptarg[256]        //  256 bytes, offset 1280
struct SpaceScript // 64 bytes [#810]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    Script     *script               //    8 bytes, offset 40
    short      flags                 //    2 bytes, offset 48
    short      menunr                //    2 bytes, offset 50
    char       _pad1[4]              //    4 bytes, offset 52
    void       *but_refs             //    8 bytes, offset 56
struct bNodeTreePath // 168 bytes [#811]
    bNodeTreePath *next              //    8 bytes, offset 0
    bNodeTreePath *prev              //    8 bytes, offset 8
    bNodeTree  *nodetree             //    8 bytes, offset 16
    bNodeInstanceKey parent_key      //    4 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 28
    float      view_center[2]        //    8 bytes, offset 32
    char       node_name[64]         //   64 bytes, offset 40
    char       display_name[64]      //   64 bytes, offset 104
struct SpaceNodeOverlay // 8 bytes [#812]
    int        flag                  //    4 bytes, offset 0
    int        preview_shape         //    4 bytes, offset 4
struct SpaceNode // 360 bytes [#813]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    View2D     v2d                   //  152 bytes, offset 40
    ID         *id                   //    8 bytes, offset 192
    ID         *from                 //    8 bytes, offset 200
    short      flag                  //    2 bytes, offset 208
    char       insert_ofs_dir        //    1 bytes, offset 210
    char       _pad1                 //    1 bytes, offset 211
    float      xof                   //    4 bytes, offset 212
    float      yof                   //    4 bytes, offset 216
    float      zoom                  //    4 bytes, offset 220
    ListBase   treepath              //   16 bytes, offset 224
    bNodeTree  *edittree             //    8 bytes, offset 240
    bNodeTree  *nodetree             //    8 bytes, offset 248
    char       tree_idname[64]       //   64 bytes, offset 256
    int        treetype              //    4 bytes, offset 320
    short      texfrom               //    2 bytes, offset 324
    char       shaderfrom            //    1 bytes, offset 326
    char       geometry_nodes_type   //    1 bytes, offset 327
    bNodeTree  *geometry_nodes_tool_tree //    8 bytes, offset 328
    bGPdata    *gpd                  //    8 bytes, offset 336
    SpaceNodeOverlay overlay         //    8 bytes, offset 344
    SpaceNode_Runtime *runtime       //    8 bytes, offset 352
struct ConsoleLine // 40 bytes [#814]
    ConsoleLine *next                //    8 bytes, offset 0
    ConsoleLine *prev                //    8 bytes, offset 8
    int        len_alloc             //    4 bytes, offset 16
    int        len                   //    4 bytes, offset 20
    char       *line                 //    8 bytes, offset 24
    int        cursor                //    4 bytes, offset 32
    int        type                  //    4 bytes, offset 36
struct SpaceConsole // 376 bytes [#815]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    ListBase   scrollback            //   16 bytes, offset 40
    ListBase   history               //   16 bytes, offset 56
    char       prompt[256]           //  256 bytes, offset 72
    char       language[32]          //   32 bytes, offset 328
    int        lheight               //    4 bytes, offset 360
    int        history_index         //    4 bytes, offset 364
    int        sel_start             //    4 bytes, offset 368
    int        sel_end               //    4 bytes, offset 372
struct SpaceUserPref // 112 bytes [#816]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    char       _pad1[7]              //    7 bytes, offset 40
    char       filter_type           //    1 bytes, offset 47
    char       filter[64]            //   64 bytes, offset 48
struct SpaceClip // 416 bytes [#817]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    char       gizmo_flag            //    1 bytes, offset 40
    char       _pad1[3]              //    3 bytes, offset 41
    float      xof                   //    4 bytes, offset 44
    float      yof                   //    4 bytes, offset 48
    float      xlockof               //    4 bytes, offset 52
    float      ylockof               //    4 bytes, offset 56
    float      zoom                  //    4 bytes, offset 60
    MovieClipUser user               //    8 bytes, offset 64
    MovieClip  *clip                 //    8 bytes, offset 72
    MovieClipScopes scopes           //  136 bytes, offset 80
    int        flag                  //    4 bytes, offset 216
    short      mode                  //    2 bytes, offset 220
    short      view                  //    2 bytes, offset 222
    int        path_length           //    4 bytes, offset 224
    float      loc[2]                //    8 bytes, offset 228
    float      scale                 //    4 bytes, offset 236
    float      angle                 //    4 bytes, offset 240
    char       _pad[4]               //    4 bytes, offset 244
    float      stabmat[4][4]         //   64 bytes, offset 248
    float      unistabmat[4][4]      //   64 bytes, offset 312
    int        postproc_flag         //    4 bytes, offset 376
    short      gpencil_src           //    2 bytes, offset 380
    char       _pad2[2]              //    2 bytes, offset 382
    int        around                //    4 bytes, offset 384
    char       _pad4[4]              //    4 bytes, offset 388
    float      cursor[2]             //    8 bytes, offset 392
    MaskSpaceInfo mask_info          //   16 bytes, offset 400
struct SpaceTopBar // 40 bytes [#818]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
struct SpaceStatusBar // 40 bytes [#819]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
struct SpreadsheetColumnID // 8 bytes [#820]
    char       *name                 //    8 bytes, offset 0
struct SpreadsheetColumn // 40 bytes [#821]
    SpreadsheetColumn *next          //    8 bytes, offset 0
    SpreadsheetColumn *prev          //    8 bytes, offset 8
    SpreadsheetColumnID *id          //    8 bytes, offset 16
    uchar      data_type             //    1 bytes, offset 24
    char       _pad0[7]              //    7 bytes, offset 25
    char       *display_name         //    8 bytes, offset 32
struct SpreadsheetInstanceID // 4 bytes [#822]
    int        reference_index       //    4 bytes, offset 0
struct SpaceSpreadsheet // 120 bytes [#823]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    ListBase   columns               //   16 bytes, offset 40
    ListBase   row_filters           //   16 bytes, offset 56
    ViewerPath viewer_path           //   16 bytes, offset 72
    SpreadsheetInstanceID *instance_ids //    8 bytes, offset 88
    int        instance_ids_num      //    4 bytes, offset 96
    uchar      filter_flag           //    1 bytes, offset 100
    uchar      geometry_component_type //    1 bytes, offset 101
    uchar      attribute_domain      //    1 bytes, offset 102
    uchar      object_eval_state     //    1 bytes, offset 103
    int        active_layer_index    //    4 bytes, offset 104
    int        flag                  //    4 bytes, offset 108
    SpaceSpreadsheet_Runtime *runtime //    8 bytes, offset 112
struct SpreadsheetRowFilter // 152 bytes [#824]
    SpreadsheetRowFilter *next       //    8 bytes, offset 0
    SpreadsheetRowFilter *prev       //    8 bytes, offset 8
    char       column_name[64]       //   64 bytes, offset 16
    uchar      operation             //    1 bytes, offset 80
    uchar      flag                  //    1 bytes, offset 81
    char       _pad0[2]              //    2 bytes, offset 82
    int        value_int             //    4 bytes, offset 84
    int        value_int2[2]         //    8 bytes, offset 88
    char       *value_string         //    8 bytes, offset 96
    float      value_float           //    4 bytes, offset 104
    float      threshold             //    4 bytes, offset 108
    float      value_float2[2]       //    8 bytes, offset 112
    float      value_float3[3]       //   12 bytes, offset 120
    float      value_color[4]        //   16 bytes, offset 132
    char       _pad1[4]              //    4 bytes, offset 148
struct Speaker // 272 bytes, is ID [#825]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    bSound     *sound                //    8 bytes, offset 216
    float      volume_max            //    4 bytes, offset 224
    float      volume_min            //    4 bytes, offset 228
    float      distance_max          //    4 bytes, offset 232
    float      distance_reference    //    4 bytes, offset 236
    float      attenuation           //    4 bytes, offset 240
    float      cone_angle_outer      //    4 bytes, offset 244
    float      cone_angle_inner      //    4 bytes, offset 248
    float      cone_volume_outer     //    4 bytes, offset 252
    float      volume                //    4 bytes, offset 256
    float      pitch                 //    4 bytes, offset 260
    short      flag                  //    2 bytes, offset 264
    char       _pad1[6]              //    6 bytes, offset 266
struct TextLine // 40 bytes [#826]
    TextLine   *next                 //    8 bytes, offset 0
    TextLine   *prev                 //    8 bytes, offset 8
    char       *line                 //    8 bytes, offset 16
    char       *format               //    8 bytes, offset 24
    int        len                   //    4 bytes, offset 32
    char       _pad0[4]              //    4 bytes, offset 36
struct Text // 280 bytes, is ID [#827]
    ID         id                    //  208 bytes, offset 0
    char       *name                 //    8 bytes, offset 208
    void       *compiled             //    8 bytes, offset 216
    int        flags                 //    4 bytes, offset 224
    char       _pad0[4]              //    4 bytes, offset 228
    ListBase   lines                 //   16 bytes, offset 232
    TextLine   *curl                 //    8 bytes, offset 248
    TextLine   *sell                 //    8 bytes, offset 256
    int        curc                  //    4 bytes, offset 264
    int        selc                  //    4 bytes, offset 268
    double     mtime                 //    8 bytes, offset 272
struct MTex // 216 bytes [#828]
    short      texco                 //    2 bytes, offset 0
    short      mapto                 //    2 bytes, offset 2
    short      blendtype             //    2 bytes, offset 4
    char       _pad2[2]              //    2 bytes, offset 6
    Object     *object               //    8 bytes, offset 8
    Tex        *tex                  //    8 bytes, offset 16
    char       uvname[68]            //   68 bytes, offset 24
    char       projx                 //    1 bytes, offset 92
    char       projy                 //    1 bytes, offset 93
    char       projz                 //    1 bytes, offset 94
    char       mapping               //    1 bytes, offset 95
    char       brush_map_mode        //    1 bytes, offset 96
    char       brush_angle_mode      //    1 bytes, offset 97
    short      which_output          //    2 bytes, offset 98
    float      ofs[3]                //   12 bytes, offset 100
    float      size[3]               //   12 bytes, offset 112
    float      rot                   //    4 bytes, offset 124
    float      random_angle          //    4 bytes, offset 128
    float      r                     //    4 bytes, offset 132
    float      g                     //    4 bytes, offset 136
    float      b                     //    4 bytes, offset 140
    float      k                     //    4 bytes, offset 144
    float      def_var               //    4 bytes, offset 148
    float      colfac                //    4 bytes, offset 152
    float      alphafac              //    4 bytes, offset 156
    float      timefac               //    4 bytes, offset 160
    float      lengthfac             //    4 bytes, offset 164
    float      clumpfac              //    4 bytes, offset 168
    float      dampfac               //    4 bytes, offset 172
    float      kinkfac               //    4 bytes, offset 176
    float      kinkampfac            //    4 bytes, offset 180
    float      roughfac              //    4 bytes, offset 184
    float      padensfac             //    4 bytes, offset 188
    float      gravityfac            //    4 bytes, offset 192
    float      lifefac               //    4 bytes, offset 196
    float      sizefac               //    4 bytes, offset 200
    float      ivelfac               //    4 bytes, offset 204
    float      fieldfac              //    4 bytes, offset 208
    float      twistfac              //    4 bytes, offset 212
struct CBData // 24 bytes [#829]
    float      r                     //    4 bytes, offset 0
    float      g                     //    4 bytes, offset 4
    float      b                     //    4 bytes, offset 8
    float      a                     //    4 bytes, offset 12
    float      pos                   //    4 bytes, offset 16
    int        cur                   //    4 bytes, offset 20
struct ColorBand // 776 bytes [#830]
    short      tot                   //    2 bytes, offset 0
    short      cur                   //    2 bytes, offset 2
    char       ipotype               //    1 bytes, offset 4
    char       ipotype_hue           //    1 bytes, offset 5
    char       color_mode            //    1 bytes, offset 6
    char       _pad[1]               //    1 bytes, offset 7
    CBData     data[32]              //  768 bytes, offset 8
struct PointDensity // 176 bytes [#831]
    short      flag                  //    2 bytes, offset 0
    short      falloff_type          //    2 bytes, offset 2
    float      falloff_softness      //    4 bytes, offset 4
    float      radius                //    4 bytes, offset 8
    short      source                //    2 bytes, offset 12
    char       _pad0[2]              //    2 bytes, offset 14
    short      color_source          //    2 bytes, offset 16
    short      ob_color_source       //    2 bytes, offset 18
    int        totpoints             //    4 bytes, offset 20
    Object     *object               //    8 bytes, offset 24
    int        psys                  //    4 bytes, offset 32
    short      psys_cache_space      //    2 bytes, offset 36
    short      ob_cache_space        //    2 bytes, offset 38
    char       vertex_attribute_name[68] //   68 bytes, offset 40
    char       _pad1[4]              //    4 bytes, offset 108
    void       *point_tree           //    8 bytes, offset 112
    float      *point_data           //    8 bytes, offset 120
    float      noise_size            //    4 bytes, offset 128
    short      noise_depth           //    2 bytes, offset 132
    short      noise_influence       //    2 bytes, offset 134
    short      noise_basis           //    2 bytes, offset 136
    char       _pad2[6]              //    6 bytes, offset 138
    float      noise_fac             //    4 bytes, offset 144
    float      speed_scale           //    4 bytes, offset 148
    float      falloff_speed_scale   //    4 bytes, offset 152
    char       _pad3[4]              //    4 bytes, offset 156
    ColorBand  *coba                 //    8 bytes, offset 160
    CurveMapping *falloff_curve      //    8 bytes, offset 168
struct Tex // 488 bytes, is ID [#832]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    float      noisesize             //    4 bytes, offset 232
    float      turbul                //    4 bytes, offset 236
    float      bright                //    4 bytes, offset 240
    float      contrast              //    4 bytes, offset 244
    float      saturation            //    4 bytes, offset 248
    float      rfac                  //    4 bytes, offset 252
    float      gfac                  //    4 bytes, offset 256
    float      bfac                  //    4 bytes, offset 260
    float      filtersize            //    4 bytes, offset 264
    char       _pad2[4]              //    4 bytes, offset 268
    float      mg_H                  //    4 bytes, offset 272
    float      mg_lacunarity         //    4 bytes, offset 276
    float      mg_octaves            //    4 bytes, offset 280
    float      mg_offset             //    4 bytes, offset 284
    float      mg_gain               //    4 bytes, offset 288
    float      dist_amount           //    4 bytes, offset 292
    float      ns_outscale           //    4 bytes, offset 296
    float      vn_w1                 //    4 bytes, offset 300
    float      vn_w2                 //    4 bytes, offset 304
    float      vn_w3                 //    4 bytes, offset 308
    float      vn_w4                 //    4 bytes, offset 312
    float      vn_mexp               //    4 bytes, offset 316
    short      vn_distm              //    2 bytes, offset 320
    short      vn_coltype            //    2 bytes, offset 322
    short      noisedepth            //    2 bytes, offset 324
    short      noisetype             //    2 bytes, offset 326
    short      noisebasis            //    2 bytes, offset 328
    short      noisebasis2           //    2 bytes, offset 330
    short      imaflag               //    2 bytes, offset 332
    short      flag                  //    2 bytes, offset 334
    short      type                  //    2 bytes, offset 336
    short      stype                 //    2 bytes, offset 338
    float      cropxmin              //    4 bytes, offset 340
    float      cropymin              //    4 bytes, offset 344
    float      cropxmax              //    4 bytes, offset 348
    float      cropymax              //    4 bytes, offset 352
    int        texfilter             //    4 bytes, offset 356
    int        afmax                 //    4 bytes, offset 360
    short      xrepeat               //    2 bytes, offset 364
    short      yrepeat               //    2 bytes, offset 366
    short      extend                //    2 bytes, offset 368
    short      _pad0                 //    2 bytes, offset 370
    int        len                   //    4 bytes, offset 372
    int        frames                //    4 bytes, offset 376
    int        offset                //    4 bytes, offset 380
    int        sfra                  //    4 bytes, offset 384
    float      checkerdist           //    4 bytes, offset 388
    float      nabla                 //    4 bytes, offset 392
    char       _pad1[4]              //    4 bytes, offset 396
    ImageUser  iuser                 //   40 bytes, offset 400
    bNodeTree  *nodetree             //    8 bytes, offset 440
    Ipo        *ipo                  //    8 bytes, offset 448
    Image      *ima                  //    8 bytes, offset 456
    ColorBand  *coba                 //    8 bytes, offset 464
    PreviewImage *preview            //    8 bytes, offset 472
    char       use_nodes             //    1 bytes, offset 480
    char       _pad[7]               //    7 bytes, offset 481
struct TexMapping // 144 bytes [#833]
    float      loc[3]                //   12 bytes, offset 0
    float      rot[3]                //   12 bytes, offset 12
    float      size[3]               //   12 bytes, offset 24
    int        flag                  //    4 bytes, offset 36
    char       projx                 //    1 bytes, offset 40
    char       projy                 //    1 bytes, offset 41
    char       projz                 //    1 bytes, offset 42
    char       mapping               //    1 bytes, offset 43
    int        type                  //    4 bytes, offset 44
    float      mat[4][4]             //   64 bytes, offset 48
    float      min[3]                //   12 bytes, offset 112
    float      max[3]                //   12 bytes, offset 124
    Object     *ob                   //    8 bytes, offset 136
struct ColorMapping // 816 bytes [#834]
    ColorBand  coba                  //  776 bytes, offset 0
    float      bright                //    4 bytes, offset 776
    float      contrast              //    4 bytes, offset 780
    float      saturation            //    4 bytes, offset 784
    int        flag                  //    4 bytes, offset 788
    float      blend_color[3]        //   12 bytes, offset 792
    float      blend_factor          //    4 bytes, offset 804
    int        blend_type            //    4 bytes, offset 808
    char       _pad[4]               //    4 bytes, offset 812
struct MovieReconstructedCamera // 72 bytes [#835]
    int        framenr               //    4 bytes, offset 0
    float      error                 //    4 bytes, offset 4
    float      mat[4][4]             //   64 bytes, offset 8
struct MovieTrackingCamera // 96 bytes [#836]
    void       *intrinsics           //    8 bytes, offset 0
    short      distortion_model      //    2 bytes, offset 8
    char       _pad[2]               //    2 bytes, offset 10
    float      sensor_width          //    4 bytes, offset 12
    float      pixel_aspect          //    4 bytes, offset 16
    float      focal                 //    4 bytes, offset 20
    short      units                 //    2 bytes, offset 24
    char       _pad1[2]              //    2 bytes, offset 26
    float      principal_point[2]    //    8 bytes, offset 28
    float      principal[2]          //    8 bytes, offset 36
    float      k1                    //    4 bytes, offset 44
    float      k2                    //    4 bytes, offset 48
    float      k3                    //    4 bytes, offset 52
    float      division_k1           //    4 bytes, offset 56
    float      division_k2           //    4 bytes, offset 60
    float      nuke_k1               //    4 bytes, offset 64
    float      nuke_k2               //    4 bytes, offset 68
    float      brown_k1              //    4 bytes, offset 72
    float      brown_k2              //    4 bytes, offset 76
    float      brown_k3              //    4 bytes, offset 80
    float      brown_k4              //    4 bytes, offset 84
    float      brown_p1              //    4 bytes, offset 88
    float      brown_p2              //    4 bytes, offset 92
struct MovieTrackingMarker // 64 bytes [#837]
    float      pos[2]                //    8 bytes, offset 0
    float      pattern_corners[4][2] //   32 bytes, offset 8
    float      search_min[2]         //    8 bytes, offset 40
    float      search_max[2]         //    8 bytes, offset 48
    int        framenr               //    4 bytes, offset 56
    int        flag                  //    4 bytes, offset 60
struct MovieTrackingTrack // 208 bytes [#838]
    MovieTrackingTrack *next         //    8 bytes, offset 0
    MovieTrackingTrack *prev         //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    float      pat_min[2]            //    8 bytes, offset 80
    float      pat_max[2]            //    8 bytes, offset 88
    float      search_min[2]         //    8 bytes, offset 96
    float      search_max[2]         //    8 bytes, offset 104
    float      offset[2]             //    8 bytes, offset 112
    int        markersnr             //    4 bytes, offset 120
    int        _pad                  //    4 bytes, offset 124
    MovieTrackingMarker *markers     //    8 bytes, offset 128
    float      bundle_pos[3]         //   12 bytes, offset 136
    float      error                 //    4 bytes, offset 148
    int        flag                  //    4 bytes, offset 152
    int        pat_flag              //    4 bytes, offset 156
    int        search_flag           //    4 bytes, offset 160
    float      color[3]              //   12 bytes, offset 164
    short      frames_limit          //    2 bytes, offset 176
    short      margin                //    2 bytes, offset 178
    short      pattern_match         //    2 bytes, offset 180
    short      motion_model          //    2 bytes, offset 182
    int        algorithm_flag        //    4 bytes, offset 184
    float      minimum_correlation   //    4 bytes, offset 188
    bGPdata    *gpd                  //    8 bytes, offset 192
    float      weight                //    4 bytes, offset 200
    float      weight_stab           //    4 bytes, offset 204
struct MovieTrackingPlaneMarker // 40 bytes [#839]
    float      corners[4][2]         //   32 bytes, offset 0
    int        framenr               //    4 bytes, offset 32
    int        flag                  //    4 bytes, offset 36
struct MovieTrackingPlaneTrack // 128 bytes [#840]
    MovieTrackingPlaneTrack *next    //    8 bytes, offset 0
    MovieTrackingPlaneTrack *prev    //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    MovieTrackingTrack **point_tracks //    8 bytes, offset 80
    int        point_tracksnr        //    4 bytes, offset 88
    char       _pad[4]               //    4 bytes, offset 92
    MovieTrackingPlaneMarker *markers //    8 bytes, offset 96
    int        markersnr             //    4 bytes, offset 104
    int        flag                  //    4 bytes, offset 108
    Image      *image                //    8 bytes, offset 112
    float      image_opacity         //    4 bytes, offset 120
    int        last_marker           //    4 bytes, offset 124
struct MovieTrackingSettings // 64 bytes [#841]
    short      default_motion_model  //    2 bytes, offset 0
    short      default_algorithm_flag //    2 bytes, offset 2
    float      default_minimum_correlation //    4 bytes, offset 4
    short      default_pattern_size  //    2 bytes, offset 8
    short      default_search_size   //    2 bytes, offset 10
    short      default_frames_limit  //    2 bytes, offset 12
    short      default_margin        //    2 bytes, offset 14
    short      default_pattern_match //    2 bytes, offset 16
    short      default_flag          //    2 bytes, offset 18
    float      default_weight        //    4 bytes, offset 20
    short      motion_flag           //    2 bytes, offset 24
    short      speed                 //    2 bytes, offset 26
    int        keyframe1             //    4 bytes, offset 28
    int        keyframe2             //    4 bytes, offset 32
    int        reconstruction_flag   //    4 bytes, offset 36
    int        refine_camera_intrinsics //    4 bytes, offset 40
    float      dist                  //    4 bytes, offset 44
    int        clean_frames          //    4 bytes, offset 48
    int        clean_action          //    4 bytes, offset 52
    float      clean_error           //    4 bytes, offset 56
    float      object_distance       //    4 bytes, offset 60
struct MovieTrackingStabilization // 72 bytes [#842]
    int        flag                  //    4 bytes, offset 0
    int        tot_track             //    4 bytes, offset 4
    int        act_track             //    4 bytes, offset 8
    int        tot_rot_track         //    4 bytes, offset 12
    int        act_rot_track         //    4 bytes, offset 16
    float      maxscale              //    4 bytes, offset 20
    MovieTrackingTrack *rot_track    //    8 bytes, offset 24
    int        anchor_frame          //    4 bytes, offset 32
    float      target_pos[2]         //    8 bytes, offset 36
    float      target_rot            //    4 bytes, offset 44
    float      scale                 //    4 bytes, offset 48
    float      locinf                //    4 bytes, offset 52
    float      scaleinf              //    4 bytes, offset 56
    float      rotinf                //    4 bytes, offset 60
    int        filter                //    4 bytes, offset 64
    int        _pad                  //    4 bytes, offset 68
struct MovieTrackingReconstruction // 24 bytes [#843]
    int        flag                  //    4 bytes, offset 0
    float      error                 //    4 bytes, offset 4
    int        last_camera           //    4 bytes, offset 8
    int        camnr                 //    4 bytes, offset 12
    MovieReconstructedCamera *cameras //    8 bytes, offset 16
struct MovieTrackingObject // 168 bytes [#844]
    MovieTrackingObject *next        //    8 bytes, offset 0
    MovieTrackingObject *prev        //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    int        flag                  //    4 bytes, offset 80
    float      scale                 //    4 bytes, offset 84
    ListBase   tracks                //   16 bytes, offset 88
    ListBase   plane_tracks          //   16 bytes, offset 104
    MovieTrackingTrack *active_track //    8 bytes, offset 120
    MovieTrackingPlaneTrack *active_plane_track //    8 bytes, offset 128
    MovieTrackingReconstruction reconstruction //   24 bytes, offset 136
    int        keyframe1             //    4 bytes, offset 160
    int        keyframe2             //    4 bytes, offset 164
struct MovieTrackingStats // 256 bytes [#845]
    char       message[256]          //  256 bytes, offset 0
struct MovieTrackingDopesheetChannel // 120 bytes [#846]
    MovieTrackingDopesheetChannel *next //    8 bytes, offset 0
    MovieTrackingDopesheetChannel *prev //    8 bytes, offset 8
    MovieTrackingTrack *track        //    8 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 24
    char       name[64]              //   64 bytes, offset 28
    int        tot_segment           //    4 bytes, offset 92
    int        *segments             //    8 bytes, offset 96
    int        max_segment           //    4 bytes, offset 104
    int        total_frames          //    4 bytes, offset 108
    int        first_not_disabled_marker_framenr //    4 bytes, offset 112
    int        last_not_disabled_marker_framenr //    4 bytes, offset 116
struct MovieTrackingDopesheetCoverageSegment // 32 bytes [#847]
    MovieTrackingDopesheetCoverageSegment *next //    8 bytes, offset 0
    MovieTrackingDopesheetCoverageSegment *prev //    8 bytes, offset 8
    int        coverage              //    4 bytes, offset 16
    int        start_frame           //    4 bytes, offset 20
    int        end_frame             //    4 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 28
struct MovieTrackingDopesheet // 48 bytes [#848]
    int        ok                    //    4 bytes, offset 0
    short      sort_method           //    2 bytes, offset 4
    short      flag                  //    2 bytes, offset 6
    ListBase   coverage_segments     //   16 bytes, offset 8
    ListBase   channels              //   16 bytes, offset 24
    int        tot_channel           //    4 bytes, offset 40
    char       _pad[4]               //    4 bytes, offset 44
struct MovieTracking // 384 bytes [#849]
    MovieTrackingSettings settings   //   64 bytes, offset 0
    MovieTrackingCamera camera       //   96 bytes, offset 64
    ListBase   tracks                //   16 bytes, offset 160
    ListBase   plane_tracks          //   16 bytes, offset 176
    MovieTrackingReconstruction reconstruction //   24 bytes, offset 192
    MovieTrackingStabilization stabilization //   72 bytes, offset 216
    MovieTrackingTrack *act_track    //    8 bytes, offset 288
    MovieTrackingPlaneTrack *act_plane_track //    8 bytes, offset 296
    ListBase   objects               //   16 bytes, offset 304
    int        objectnr              //    4 bytes, offset 320
    int        tot_object            //    4 bytes, offset 324
    MovieTrackingStats *stats        //    8 bytes, offset 328
    MovieTrackingDopesheet dopesheet //   48 bytes, offset 336
struct uiFontStyle // 32 bytes [#850]
    short      uifont_id             //    2 bytes, offset 0
    char       _pad1[2]              //    2 bytes, offset 2
    float      points                //    4 bytes, offset 4
    short      italic                //    2 bytes, offset 8
    short      bold                  //    2 bytes, offset 10
    short      shadow                //    2 bytes, offset 12
    short      shadx                 //    2 bytes, offset 14
    short      shady                 //    2 bytes, offset 16
    char       _pad0[2]              //    2 bytes, offset 18
    float      shadowalpha           //    4 bytes, offset 20
    float      shadowcolor           //    4 bytes, offset 24
    int        character_weight      //    4 bytes, offset 28
struct uiStyle // 232 bytes [#851]
    uiStyle    *next                 //    8 bytes, offset 0
    uiStyle    *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    uiFontStyle paneltitle           //   32 bytes, offset 80
    uiFontStyle grouplabel           //   32 bytes, offset 112
    uiFontStyle widget               //   32 bytes, offset 144
    uiFontStyle tooltip              //   32 bytes, offset 176
    float      panelzoom             //    4 bytes, offset 208
    short      minlabelchars         //    2 bytes, offset 212
    short      minwidgetchars        //    2 bytes, offset 214
    short      columnspace           //    2 bytes, offset 216
    short      templatespace         //    2 bytes, offset 218
    short      boxspace              //    2 bytes, offset 220
    short      buttonspacex          //    2 bytes, offset 222
    short      buttonspacey          //    2 bytes, offset 224
    short      panelspace            //    2 bytes, offset 226
    short      panelouter            //    2 bytes, offset 228
    char       _pad0[2]              //    2 bytes, offset 230
struct uiWidgetColors // 40 bytes [#852]
    char       outline[4]            //    4 bytes, offset 0
    char       inner[4]              //    4 bytes, offset 4
    char       inner_sel[4]          //    4 bytes, offset 8
    char       item[4]               //    4 bytes, offset 12
    char       text[4]               //    4 bytes, offset 16
    char       text_sel[4]           //    4 bytes, offset 20
    char       shaded                //    1 bytes, offset 24
    char       _pad0[7]              //    7 bytes, offset 25
    short      shadetop              //    2 bytes, offset 32
    short      shadedown             //    2 bytes, offset 34
    float      roundness             //    4 bytes, offset 36
struct uiWidgetStateColors // 48 bytes [#853]
    char       inner_anim[4]         //    4 bytes, offset 0
    char       inner_anim_sel[4]     //    4 bytes, offset 4
    char       inner_key[4]          //    4 bytes, offset 8
    char       inner_key_sel[4]      //    4 bytes, offset 12
    char       inner_driven[4]       //    4 bytes, offset 16
    char       inner_driven_sel[4]   //    4 bytes, offset 20
    char       inner_overridden[4]   //    4 bytes, offset 24
    char       inner_overridden_sel[4] //    4 bytes, offset 28
    char       inner_changed[4]      //    4 bytes, offset 32
    char       inner_changed_sel[4]  //    4 bytes, offset 36
    float      blend                 //    4 bytes, offset 40
    char       _pad0[4]              //    4 bytes, offset 44
struct uiPanelColors // 16 bytes [#854]
    char       header[4]             //    4 bytes, offset 0
    char       back[4]               //    4 bytes, offset 4
    char       sub_back[4]           //    4 bytes, offset 8
    char       _pad0[4]              //    4 bytes, offset 12
struct ThemeUI // 976 bytes [#855]
    uiWidgetColors wcol_regular      //   40 bytes, offset 0
    uiWidgetColors wcol_tool         //   40 bytes, offset 40
    uiWidgetColors wcol_toolbar_item //   40 bytes, offset 80
    uiWidgetColors wcol_text         //   40 bytes, offset 120
    uiWidgetColors wcol_radio        //   40 bytes, offset 160
    uiWidgetColors wcol_option       //   40 bytes, offset 200
    uiWidgetColors wcol_toggle       //   40 bytes, offset 240
    uiWidgetColors wcol_num          //   40 bytes, offset 280
    uiWidgetColors wcol_numslider    //   40 bytes, offset 320
    uiWidgetColors wcol_tab          //   40 bytes, offset 360
    uiWidgetColors wcol_menu         //   40 bytes, offset 400
    uiWidgetColors wcol_pulldown     //   40 bytes, offset 440
    uiWidgetColors wcol_menu_back    //   40 bytes, offset 480
    uiWidgetColors wcol_menu_item    //   40 bytes, offset 520
    uiWidgetColors wcol_tooltip      //   40 bytes, offset 560
    uiWidgetColors wcol_box          //   40 bytes, offset 600
    uiWidgetColors wcol_scroll       //   40 bytes, offset 640
    uiWidgetColors wcol_progress     //   40 bytes, offset 680
    uiWidgetColors wcol_list_item    //   40 bytes, offset 720
    uiWidgetColors wcol_pie_menu     //   40 bytes, offset 760
    uiWidgetStateColors wcol_state   //   48 bytes, offset 800
    char       widget_emboss[4]      //    4 bytes, offset 848
    float      menu_shadow_fac       //    4 bytes, offset 852
    short      menu_shadow_width     //    2 bytes, offset 856
    char       editor_border[4]      //    4 bytes, offset 858
    char       editor_outline[4]     //    4 bytes, offset 862
    char       editor_outline_active[4] //    4 bytes, offset 866
    char       transparent_checker_primary[4] //    4 bytes, offset 870
    char       transparent_checker_secondary[4] //    4 bytes, offset 874
    char       transparent_checker_size //    1 bytes, offset 878
    char       _pad1[1]              //    1 bytes, offset 879
    float      icon_alpha            //    4 bytes, offset 880
    float      icon_saturation       //    4 bytes, offset 884
    char       widget_text_cursor[4] //    4 bytes, offset 888
    char       xaxis[4]              //    4 bytes, offset 892
    char       yaxis[4]              //    4 bytes, offset 896
    char       zaxis[4]              //    4 bytes, offset 900
    char       gizmo_hi[4]           //    4 bytes, offset 904
    char       gizmo_primary[4]      //    4 bytes, offset 908
    char       gizmo_secondary[4]    //    4 bytes, offset 912
    char       gizmo_view_align[4]   //    4 bytes, offset 916
    char       gizmo_a[4]            //    4 bytes, offset 920
    char       gizmo_b[4]            //    4 bytes, offset 924
    char       icon_scene[4]         //    4 bytes, offset 928
    char       icon_collection[4]    //    4 bytes, offset 932
    char       icon_object[4]        //    4 bytes, offset 936
    char       icon_object_data[4]   //    4 bytes, offset 940
    char       icon_modifier[4]      //    4 bytes, offset 944
    char       icon_shading[4]       //    4 bytes, offset 948
    char       icon_folder[4]        //    4 bytes, offset 952
    char       icon_autokey[4]       //    4 bytes, offset 956
    char       _pad3[4]              //    4 bytes, offset 960
    float      icon_border_intensity //    4 bytes, offset 964
    float      panel_roundness       //    4 bytes, offset 968
    char       _pad2[4]              //    4 bytes, offset 972
struct ThemeAssetShelf // 8 bytes [#856]
    char       header_back[4]        //    4 bytes, offset 0
    char       back[4]               //    4 bytes, offset 4
struct ThemeSpace // 944 bytes [#857]
    char       back[4]               //    4 bytes, offset 0
    char       back_grad[4]          //    4 bytes, offset 4
    char       show_back_grad        //    1 bytes, offset 8
    char       _pad0[3]              //    3 bytes, offset 9
    char       title[4]              //    4 bytes, offset 12
    char       text[4]               //    4 bytes, offset 16
    char       text_hi[4]            //    4 bytes, offset 20
    char       header[4]             //    4 bytes, offset 24
    char       header_title[4]       //    4 bytes, offset 28
    char       header_text[4]        //    4 bytes, offset 32
    char       header_text_hi[4]     //    4 bytes, offset 36
    char       tab_active[4]         //    4 bytes, offset 40
    char       tab_inactive[4]       //    4 bytes, offset 44
    char       tab_back[4]           //    4 bytes, offset 48
    char       tab_outline[4]        //    4 bytes, offset 52
    char       button[4]             //    4 bytes, offset 56
    char       button_title[4]       //    4 bytes, offset 60
    char       button_text[4]        //    4 bytes, offset 64
    char       button_text_hi[4]     //    4 bytes, offset 68
    char       list[4]               //    4 bytes, offset 72
    char       list_title[4]         //    4 bytes, offset 76
    char       list_text[4]          //    4 bytes, offset 80
    char       list_text_hi[4]       //    4 bytes, offset 84
    char       navigation_bar[4]     //    4 bytes, offset 88
    char       execution_buts[4]     //    4 bytes, offset 92
    uiPanelColors panelcolors        //   16 bytes, offset 96
    ThemeAssetShelf asset_shelf      //    8 bytes, offset 112
    char       shade1[4]             //    4 bytes, offset 120
    char       shade2[4]             //    4 bytes, offset 124
    char       hilite[4]             //    4 bytes, offset 128
    char       grid[4]               //    4 bytes, offset 132
    char       view_overlay[4]       //    4 bytes, offset 136
    char       wire[4]               //    4 bytes, offset 140
    char       wire_edit[4]          //    4 bytes, offset 144
    char       select[4]             //    4 bytes, offset 148
    char       lamp[4]               //    4 bytes, offset 152
    char       speaker[4]            //    4 bytes, offset 156
    char       empty[4]              //    4 bytes, offset 160
    char       camera[4]             //    4 bytes, offset 164
    char       active[4]             //    4 bytes, offset 168
    char       group[4]              //    4 bytes, offset 172
    char       group_active[4]       //    4 bytes, offset 176
    char       transform[4]          //    4 bytes, offset 180
    char       vertex[4]             //    4 bytes, offset 184
    char       vertex_select[4]      //    4 bytes, offset 188
    char       vertex_active[4]      //    4 bytes, offset 192
    char       vertex_bevel[4]       //    4 bytes, offset 196
    char       vertex_unreferenced[4] //    4 bytes, offset 200
    char       edge[4]               //    4 bytes, offset 204
    char       edge_select[4]        //    4 bytes, offset 208
    char       edge_mode_select[4]   //    4 bytes, offset 212
    char       edge_seam[4]          //    4 bytes, offset 216
    char       edge_sharp[4]         //    4 bytes, offset 220
    char       edge_facesel[4]       //    4 bytes, offset 224
    char       edge_crease[4]        //    4 bytes, offset 228
    char       edge_bevel[4]         //    4 bytes, offset 232
    char       face[4]               //    4 bytes, offset 236
    char       face_select[4]        //    4 bytes, offset 240
    char       face_mode_select[4]   //    4 bytes, offset 244
    char       face_retopology[4]    //    4 bytes, offset 248
    char       face_back[4]          //    4 bytes, offset 252
    char       face_front[4]         //    4 bytes, offset 256
    char       face_dot[4]           //    4 bytes, offset 260
    char       extra_edge_len[4]     //    4 bytes, offset 264
    char       extra_edge_angle[4]   //    4 bytes, offset 268
    char       extra_face_angle[4]   //    4 bytes, offset 272
    char       extra_face_area[4]    //    4 bytes, offset 276
    char       normal[4]             //    4 bytes, offset 280
    char       vertex_normal[4]      //    4 bytes, offset 284
    char       loop_normal[4]        //    4 bytes, offset 288
    char       bone_solid[4]         //    4 bytes, offset 292
    char       bone_pose[4]          //    4 bytes, offset 296
    char       bone_pose_active[4]   //    4 bytes, offset 300
    char       bone_locked_weight[4] //    4 bytes, offset 304
    char       strip[4]              //    4 bytes, offset 308
    char       strip_select[4]       //    4 bytes, offset 312
    char       cframe[4]             //    4 bytes, offset 316
    char       before_current_frame[4] //    4 bytes, offset 320
    char       after_current_frame[4] //    4 bytes, offset 324
    char       time_keyframe[4]      //    4 bytes, offset 328
    char       time_gp_keyframe[4]   //    4 bytes, offset 332
    char       freestyle_edge_mark[4] //    4 bytes, offset 336
    char       freestyle_face_mark[4] //    4 bytes, offset 340
    char       scrubbing_background[4] //    4 bytes, offset 344
    char       time_marker_line[4]   //    4 bytes, offset 348
    char       time_marker_line_selected[4] //    4 bytes, offset 352
    char       nurb_uline[4]         //    4 bytes, offset 356
    char       nurb_vline[4]         //    4 bytes, offset 360
    char       act_spline[4]         //    4 bytes, offset 364
    char       nurb_sel_uline[4]     //    4 bytes, offset 368
    char       nurb_sel_vline[4]     //    4 bytes, offset 372
    char       lastsel_point[4]      //    4 bytes, offset 376
    char       handle_free[4]        //    4 bytes, offset 380
    char       handle_auto[4]        //    4 bytes, offset 384
    char       handle_vect[4]        //    4 bytes, offset 388
    char       handle_align[4]       //    4 bytes, offset 392
    char       handle_auto_clamped[4] //    4 bytes, offset 396
    char       handle_sel_free[4]    //    4 bytes, offset 400
    char       handle_sel_auto[4]    //    4 bytes, offset 404
    char       handle_sel_vect[4]    //    4 bytes, offset 408
    char       handle_sel_align[4]   //    4 bytes, offset 412
    char       handle_sel_auto_clamped[4] //    4 bytes, offset 416
    char       ds_channel[4]         //    4 bytes, offset 420
    char       ds_subchannel[4]      //    4 bytes, offset 424
    char       ds_ipoline[4]         //    4 bytes, offset 428
    char       keytype_keyframe[4]   //    4 bytes, offset 432
    char       keytype_extreme[4]    //    4 bytes, offset 436
    char       keytype_breakdown[4]  //    4 bytes, offset 440
    char       keytype_jitter[4]     //    4 bytes, offset 444
    char       keytype_movehold[4]   //    4 bytes, offset 448
    char       keytype_generated[4]  //    4 bytes, offset 452
    char       keytype_keyframe_select[4] //    4 bytes, offset 456
    char       keytype_extreme_select[4] //    4 bytes, offset 460
    char       keytype_breakdown_select[4] //    4 bytes, offset 464
    char       keytype_jitter_select[4] //    4 bytes, offset 468
    char       keytype_movehold_select[4] //    4 bytes, offset 472
    char       keytype_generated_select[4] //    4 bytes, offset 476
    char       keyborder[4]          //    4 bytes, offset 480
    char       keyborder_select[4]   //    4 bytes, offset 484
    char       _pad4[3]              //    3 bytes, offset 488
    char       console_output[4]     //    4 bytes, offset 491
    char       console_input[4]      //    4 bytes, offset 495
    char       console_info[4]       //    4 bytes, offset 499
    char       console_error[4]      //    4 bytes, offset 503
    char       console_cursor[4]     //    4 bytes, offset 507
    char       console_select[4]     //    4 bytes, offset 511
    char       vertex_size           //    1 bytes, offset 515
    char       edge_width            //    1 bytes, offset 516
    char       outline_width         //    1 bytes, offset 517
    char       obcenter_dia          //    1 bytes, offset 518
    char       facedot_size          //    1 bytes, offset 519
    char       noodle_curving        //    1 bytes, offset 520
    char       grid_levels           //    1 bytes, offset 521
    char       _pad5[2]              //    2 bytes, offset 522
    float      dash_alpha            //    4 bytes, offset 524
    char       syntaxl[4]            //    4 bytes, offset 528
    char       syntaxs[4]            //    4 bytes, offset 532
    char       syntaxb[4]            //    4 bytes, offset 536
    char       syntaxn[4]            //    4 bytes, offset 540
    char       syntaxv[4]            //    4 bytes, offset 544
    char       syntaxc[4]            //    4 bytes, offset 548
    char       syntaxd[4]            //    4 bytes, offset 552
    char       syntaxr[4]            //    4 bytes, offset 556
    char       line_numbers[4]       //    4 bytes, offset 560
    char       nodeclass_output[4]   //    4 bytes, offset 564
    char       nodeclass_filter[4]   //    4 bytes, offset 568
    char       nodeclass_vector[4]   //    4 bytes, offset 572
    char       nodeclass_texture[4]  //    4 bytes, offset 576
    char       nodeclass_shader[4]   //    4 bytes, offset 580
    char       nodeclass_script[4]   //    4 bytes, offset 584
    char       nodeclass_pattern[4]  //    4 bytes, offset 588
    char       nodeclass_layout[4]   //    4 bytes, offset 592
    char       nodeclass_geometry[4] //    4 bytes, offset 596
    char       nodeclass_attribute[4] //    4 bytes, offset 600
    char       node_zone_simulation[4] //    4 bytes, offset 604
    char       node_zone_repeat[4]   //    4 bytes, offset 608
    char       node_zone_foreach_geometry_element[4] //    4 bytes, offset 612
    char       simulated_frames[4]   //    4 bytes, offset 616
    char       movie[4]              //    4 bytes, offset 620
    char       movieclip[4]          //    4 bytes, offset 624
    char       mask[4]               //    4 bytes, offset 628
    char       image[4]              //    4 bytes, offset 632
    char       scene[4]              //    4 bytes, offset 636
    char       audio[4]              //    4 bytes, offset 640
    char       effect[4]             //    4 bytes, offset 644
    char       transition[4]         //    4 bytes, offset 648
    char       meta[4]               //    4 bytes, offset 652
    char       text_strip[4]         //    4 bytes, offset 656
    char       color_strip[4]        //    4 bytes, offset 660
    char       active_strip[4]       //    4 bytes, offset 664
    char       selected_strip[4]     //    4 bytes, offset 668
    char       text_strip_cursor[4]  //    4 bytes, offset 672
    char       selected_text[4]      //    4 bytes, offset 676
    float      keyframe_scale_fac    //    4 bytes, offset 680
    char       editmesh_active[4]    //    4 bytes, offset 684
    char       handle_vertex[4]      //    4 bytes, offset 688
    char       handle_vertex_select[4] //    4 bytes, offset 692
    char       handle_vertex_size    //    1 bytes, offset 696
    char       clipping_border_3d[4] //    4 bytes, offset 697
    char       marker_outline[4]     //    4 bytes, offset 701
    char       marker[4]             //    4 bytes, offset 705
    char       act_marker[4]         //    4 bytes, offset 709
    char       sel_marker[4]         //    4 bytes, offset 713
    char       dis_marker[4]         //    4 bytes, offset 717
    char       lock_marker[4]        //    4 bytes, offset 721
    char       bundle_solid[4]       //    4 bytes, offset 725
    char       path_before[4]        //    4 bytes, offset 729
    char       path_after[4]         //    4 bytes, offset 733
    char       path_keyframe_before[4] //    4 bytes, offset 737
    char       path_keyframe_after[4] //    4 bytes, offset 741
    char       camera_path[4]        //    4 bytes, offset 745
    char       camera_passepartout[4] //    4 bytes, offset 749
    char       _pad1[2]              //    2 bytes, offset 753
    char       gp_vertex_size        //    1 bytes, offset 755
    char       gp_vertex[4]          //    4 bytes, offset 756
    char       gp_vertex_select[4]   //    4 bytes, offset 760
    char       preview_back[4]       //    4 bytes, offset 764
    char       preview_stitch_face[4] //    4 bytes, offset 768
    char       preview_stitch_edge[4] //    4 bytes, offset 772
    char       preview_stitch_vert[4] //    4 bytes, offset 776
    char       preview_stitch_stitchable[4] //    4 bytes, offset 780
    char       preview_stitch_unstitchable[4] //    4 bytes, offset 784
    char       preview_stitch_active[4] //    4 bytes, offset 788
    char       uv_shadow[4]          //    4 bytes, offset 792
    char       match[4]              //    4 bytes, offset 796
    char       selected_highlight[4] //    4 bytes, offset 800
    char       selected_object[4]    //    4 bytes, offset 804
    char       active_object[4]      //    4 bytes, offset 808
    char       edited_object[4]      //    4 bytes, offset 812
    char       row_alternate[4]      //    4 bytes, offset 816
    char       skin_root[4]          //    4 bytes, offset 820
    char       anim_active[4]        //    4 bytes, offset 824
    char       anim_non_active[4]    //    4 bytes, offset 828
    char       anim_preview_range[4] //    4 bytes, offset 832
    char       nla_tweaking[4]       //    4 bytes, offset 836
    char       nla_tweakdupli[4]     //    4 bytes, offset 840
    char       nla_track[4]          //    4 bytes, offset 844
    char       nla_transition[4]     //    4 bytes, offset 848
    char       nla_transition_sel[4] //    4 bytes, offset 852
    char       nla_meta[4]           //    4 bytes, offset 856
    char       nla_meta_sel[4]       //    4 bytes, offset 860
    char       nla_sound[4]          //    4 bytes, offset 864
    char       nla_sound_sel[4]      //    4 bytes, offset 868
    char       info_selected[4]      //    4 bytes, offset 872
    char       info_selected_text[4] //    4 bytes, offset 876
    char       info_error[4]         //    4 bytes, offset 880
    char       info_error_text[4]    //    4 bytes, offset 884
    char       info_warning[4]       //    4 bytes, offset 888
    char       info_warning_text[4]  //    4 bytes, offset 892
    char       info_info[4]          //    4 bytes, offset 896
    char       info_info_text[4]     //    4 bytes, offset 900
    char       info_debug[4]         //    4 bytes, offset 904
    char       info_debug_text[4]    //    4 bytes, offset 908
    char       info_property[4]      //    4 bytes, offset 912
    char       info_property_text[4] //    4 bytes, offset 916
    char       info_operator[4]      //    4 bytes, offset 920
    char       info_operator_text[4] //    4 bytes, offset 924
    char       paint_curve_pivot[4]  //    4 bytes, offset 928
    char       paint_curve_handle[4] //    4 bytes, offset 932
    char       metadatabg[4]         //    4 bytes, offset 936
    char       metadatatext[4]       //    4 bytes, offset 940
struct ThemeWireColor // 16 bytes [#858]
    char       solid[4]              //    4 bytes, offset 0
    char       select[4]             //    4 bytes, offset 4
    char       active[4]             //    4 bytes, offset 8
    short      flag                  //    2 bytes, offset 12
    char       _pad0[2]              //    2 bytes, offset 14
struct ThemeCollectionColor // 4 bytes [#859]
    char       color[4]              //    4 bytes, offset 0
struct ThemeStripColor // 4 bytes [#860]
    char       color[4]              //    4 bytes, offset 0
struct bTheme // 19464 bytes [#861]
    bTheme     *next                 //    8 bytes, offset 0
    bTheme     *prev                 //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       filepath[1024]        // 1024 bytes, offset 80
    ThemeUI    tui                   //  976 bytes, offset 1104
    ThemeSpace tbuts                 //  944 bytes, offset 2080
    ThemeSpace tv3d                  //  944 bytes, offset 3024
    ThemeSpace tfile                 //  944 bytes, offset 3968
    ThemeSpace tipo                  //  944 bytes, offset 4912
    ThemeSpace tinfo                 //  944 bytes, offset 5856
    ThemeSpace tact                  //  944 bytes, offset 6800
    ThemeSpace tnla                  //  944 bytes, offset 7744
    ThemeSpace tseq                  //  944 bytes, offset 8688
    ThemeSpace tima                  //  944 bytes, offset 9632
    ThemeSpace text                  //  944 bytes, offset 10576
    ThemeSpace toops                 //  944 bytes, offset 11520
    ThemeSpace tnode                 //  944 bytes, offset 12464
    ThemeSpace tuserpref             //  944 bytes, offset 13408
    ThemeSpace tconsole              //  944 bytes, offset 14352
    ThemeSpace tclip                 //  944 bytes, offset 15296
    ThemeSpace ttopbar               //  944 bytes, offset 16240
    ThemeSpace tstatusbar            //  944 bytes, offset 17184
    ThemeSpace space_spreadsheet     //  944 bytes, offset 18128
    ThemeWireColor tarm[20]          //  320 bytes, offset 19072
    ThemeCollectionColor collection_color[8] //   32 bytes, offset 19392
    ThemeStripColor strip_color[9]   //   36 bytes, offset 19424
    int        active_theme_area     //    4 bytes, offset 19460
struct bAddon // 152 bytes [#862]
    bAddon     *next                 //    8 bytes, offset 0
    bAddon     *prev                 //    8 bytes, offset 8
    char       module[128]           //  128 bytes, offset 16
    IDProperty *prop                 //    8 bytes, offset 144
struct bPathCompare // 792 bytes [#863]
    bPathCompare *next               //    8 bytes, offset 0
    bPathCompare *prev               //    8 bytes, offset 8
    char       path[768]             //  768 bytes, offset 16
    char       flag                  //    1 bytes, offset 784
    char       _pad0[7]              //    7 bytes, offset 785
struct bUserMenu // 104 bytes [#864]
    bUserMenu  *next                 //    8 bytes, offset 0
    bUserMenu  *prev                 //    8 bytes, offset 8
    char       space_type            //    1 bytes, offset 16
    char       _pad0[7]              //    7 bytes, offset 17
    char       context[64]           //   64 bytes, offset 24
    ListBase   items                 //   16 bytes, offset 88
struct bUserMenuItem // 88 bytes [#865]
    bUserMenuItem *next              //    8 bytes, offset 0
    bUserMenuItem *prev              //    8 bytes, offset 8
    char       ui_name[64]           //   64 bytes, offset 16
    char       type                  //    1 bytes, offset 80
    char       _pad0[7]              //    7 bytes, offset 81
struct bUserMenuItem_Op // 232 bytes [#866]
    bUserMenuItem item               //   88 bytes, offset 0
    char       op_idname[64]         //   64 bytes, offset 88
    IDProperty *prop                 //    8 bytes, offset 152
    char       op_prop_enum[64]      //   64 bytes, offset 160
    char       opcontext             //    1 bytes, offset 224
    char       _pad0[7]              //    7 bytes, offset 225
struct bUserMenuItem_Menu // 152 bytes [#867]
    bUserMenuItem item               //   88 bytes, offset 0
    char       mt_idname[64]         //   64 bytes, offset 88
struct bUserMenuItem_Prop // 416 bytes [#868]
    bUserMenuItem item               //   88 bytes, offset 0
    char       context_data_path[256] //  256 bytes, offset 88
    char       prop_id[64]           //   64 bytes, offset 344
    int        prop_index            //    4 bytes, offset 408
    char       _pad0[4]              //    4 bytes, offset 412
struct bUserAssetLibrary // 1112 bytes [#869]
    bUserAssetLibrary *next          //    8 bytes, offset 0
    bUserAssetLibrary *prev          //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       path[1024]            // 1024 bytes, offset 80
    short      import_method         //    2 bytes, offset 1104
    short      flag                  //    2 bytes, offset 1106
    char       _pad0[4]              //    4 bytes, offset 1108
struct bUserExtensionRepo // 2192 bytes [#870]
    bUserExtensionRepo *next         //    8 bytes, offset 0
    bUserExtensionRepo *prev         //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       module[48]            //   48 bytes, offset 80
    char       *access_token         //    8 bytes, offset 128
    char       custom_dirpath[1024]  // 1024 bytes, offset 136
    char       remote_url[1024]      // 1024 bytes, offset 1160
    uchar      flag                  //    1 bytes, offset 2184
    uchar      source                //    1 bytes, offset 2185
    char       _pad0[6]              //    6 bytes, offset 2186
struct SolidLight // 56 bytes [#871]
    int        flag                  //    4 bytes, offset 0
    float      smooth                //    4 bytes, offset 4
    float      col[4]                //   16 bytes, offset 8
    float      spec[4]               //   16 bytes, offset 24
    float      vec[4]                //   16 bytes, offset 40
struct WalkNavigation // 32 bytes [#872]
    float      mouse_speed           //    4 bytes, offset 0
    float      walk_speed            //    4 bytes, offset 4
    float      walk_speed_factor     //    4 bytes, offset 8
    float      view_height           //    4 bytes, offset 12
    float      jump_height           //    4 bytes, offset 16
    float      teleport_time         //    4 bytes, offset 20
    short      flag                  //    2 bytes, offset 24
    char       _pad0[6]              //    6 bytes, offset 26
struct UserDef_Runtime // 8 bytes [#873]
    char       is_dirty              //    1 bytes, offset 0
    char       _pad0[7]              //    7 bytes, offset 1
struct UserDef_SpaceData // 8 bytes [#874]
    char       section_active        //    1 bytes, offset 0
    char       flag                  //    1 bytes, offset 1
    char       _pad0[6]              //    6 bytes, offset 2
struct UserDef_FileSpaceData // 40 bytes [#875]
    int        display_type          //    4 bytes, offset 0
    int        thumbnail_size        //    4 bytes, offset 4
    int        sort_type             //    4 bytes, offset 8
    int        details_flags         //    4 bytes, offset 12
    int        flag                  //    4 bytes, offset 16
    int        _pad0                 //    4 bytes, offset 20
    uint64_t   filter_id             //    8 bytes, offset 24
    int        temp_win_sizex        //    4 bytes, offset 32
    int        temp_win_sizey        //    4 bytes, offset 36
struct UserDef_Experimental // 24 bytes [#876]
    char       use_undo_legacy       //    1 bytes, offset 0
    char       no_override_auto_resync //    1 bytes, offset 1
    char       use_cycles_debug      //    1 bytes, offset 2
    char       use_eevee_debug       //    1 bytes, offset 3
    char       show_asset_debug_info //    1 bytes, offset 4
    char       no_asset_indexing     //    1 bytes, offset 5
    char       use_viewport_debug    //    1 bytes, offset 6
    char       use_all_linked_data_direct //    1 bytes, offset 7
    char       use_extensions_debug  //    1 bytes, offset 8
    char       use_recompute_usercount_on_save_debug //    1 bytes, offset 9
    char       SANITIZE_AFTER_HERE   //    1 bytes, offset 10
    char       use_new_curves_tools  //    1 bytes, offset 11
    char       use_new_point_cloud_type //    1 bytes, offset 12
    char       use_sculpt_tools_tilt //    1 bytes, offset 13
    char       use_extended_asset_browser //    1 bytes, offset 14
    char       use_sculpt_texture_paint //    1 bytes, offset 15
    char       use_new_volume_nodes  //    1 bytes, offset 16
    char       use_new_file_import_nodes //    1 bytes, offset 17
    char       use_shader_node_previews //    1 bytes, offset 18
    char       _pad[5]               //    5 bytes, offset 19
struct bUserScriptDirectory // 848 bytes [#877]
    bUserScriptDirectory *next       //    8 bytes, offset 0
    bUserScriptDirectory *prev       //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       dir_path[768]         //  768 bytes, offset 80
struct bUserAssetShelfSettings // 96 bytes [#878]
    bUserAssetShelfSettings *next    //    8 bytes, offset 0
    bUserAssetShelfSettings *prev    //    8 bytes, offset 8
    char       shelf_idname[64]      //   64 bytes, offset 16
    ListBase   enabled_catalog_paths //   16 bytes, offset 80
struct UserDef // 14616 bytes [#879]
    int        versionfile           //    4 bytes, offset 0
    int        subversionfile        //    4 bytes, offset 4
    int        flag                  //    4 bytes, offset 8
    int        dupflag               //    4 bytes, offset 12
    char       pref_flag             //    1 bytes, offset 16
    char       savetime              //    1 bytes, offset 17
    char       mouse_emulate_3_button_modifier //    1 bytes, offset 18
    char       trackpad_scroll_direction //    1 bytes, offset 19
    char       tempdir[768]          //  768 bytes, offset 20
    char       fontdir[768]          //  768 bytes, offset 788
    char       renderdir[1024]       // 1024 bytes, offset 1556
    char       render_cachedir[768]  //  768 bytes, offset 2580
    char       textudir[768]         //  768 bytes, offset 3348
    char       pythondir[768]        //  768 bytes, offset 4116
    char       sounddir[768]         //  768 bytes, offset 4884
    char       i18ndir[768]          //  768 bytes, offset 5652
    char       image_editor[1024]    // 1024 bytes, offset 6420
    char       text_editor[1024]     // 1024 bytes, offset 7444
    char       text_editor_args[256] //  256 bytes, offset 8468
    char       anim_player[1024]     // 1024 bytes, offset 8724
    int        anim_player_preset    //    4 bytes, offset 9748
    short      v2d_min_gridsize      //    2 bytes, offset 9752
    short      timecode_style        //    2 bytes, offset 9754
    short      versions              //    2 bytes, offset 9756
    short      dbl_click_time        //    2 bytes, offset 9758
    char       _pad0[3]              //    3 bytes, offset 9760
    char       mini_axis_type        //    1 bytes, offset 9763
    int        uiflag                //    4 bytes, offset 9764
    char       uiflag2               //    1 bytes, offset 9768
    char       gpu_flag              //    1 bytes, offset 9769
    char       _pad8[6]              //    6 bytes, offset 9770
    char       app_flag              //    1 bytes, offset 9776
    char       viewzoom              //    1 bytes, offset 9777
    short      language              //    2 bytes, offset 9778
    int        mixbufsize            //    4 bytes, offset 9780
    int        audiodevice           //    4 bytes, offset 9784
    int        audiorate             //    4 bytes, offset 9788
    int        audioformat           //    4 bytes, offset 9792
    int        audiochannels         //    4 bytes, offset 9796
    float      ui_scale              //    4 bytes, offset 9800
    int        ui_line_width         //    4 bytes, offset 9804
    int        dpi                   //    4 bytes, offset 9808
    float      scale_factor          //    4 bytes, offset 9812
    float      inv_scale_factor      //    4 bytes, offset 9816
    float      pixelsize             //    4 bytes, offset 9820
    int        virtual_pixel         //    4 bytes, offset 9824
    int        scrollback            //    4 bytes, offset 9828
    char       node_margin           //    1 bytes, offset 9832
    char       node_preview_res      //    1 bytes, offset 9833
    short      transopts             //    2 bytes, offset 9834
    short      menuthreshold1        //    2 bytes, offset 9836
    short      menuthreshold2        //    2 bytes, offset 9838
    char       app_template[64]      //   64 bytes, offset 9840
    ListBase   themes                //   16 bytes, offset 9904
    ListBase   uifonts               //   16 bytes, offset 9920
    ListBase   uistyles              //   16 bytes, offset 9936
    ListBase   user_keymaps          //   16 bytes, offset 9952
    ListBase   user_keyconfig_prefs  //   16 bytes, offset 9968
    ListBase   addons                //   16 bytes, offset 9984
    ListBase   autoexec_paths        //   16 bytes, offset 10000
    ListBase   script_directories    //   16 bytes, offset 10016
    ListBase   user_menus            //   16 bytes, offset 10032
    ListBase   asset_libraries       //   16 bytes, offset 10048
    ListBase   extension_repos       //   16 bytes, offset 10064
    ListBase   asset_shelves_settings //   16 bytes, offset 10080
    char       keyconfigstr[64]      //   64 bytes, offset 10096
    short      active_asset_library  //    2 bytes, offset 10160
    short      active_extension_repo //    2 bytes, offset 10162
    char       extension_flag        //    1 bytes, offset 10164
    uchar      network_timeout       //    1 bytes, offset 10165
    uchar      network_connection_limit //    1 bytes, offset 10166
    char       _pad14[3]             //    3 bytes, offset 10167
    short      undosteps             //    2 bytes, offset 10170
    int        undomemory            //    4 bytes, offset 10172
    float      gpu_viewport_quality  //    4 bytes, offset 10176
    short      gp_manhattendist      //    2 bytes, offset 10180
    short      gp_euclideandist      //    2 bytes, offset 10182
    short      gp_eraser             //    2 bytes, offset 10184
    short      gp_settings           //    2 bytes, offset 10186
    char       _pad13[4]             //    4 bytes, offset 10188
    SolidLight light_param[4]        //  224 bytes, offset 10192
    float      light_ambient[3]      //   12 bytes, offset 10416
    char       gizmo_flag            //    1 bytes, offset 10428
    char       gizmo_size            //    1 bytes, offset 10429
    char       gizmo_size_navigate_v3d //    1 bytes, offset 10430
    char       _pad3[5]              //    5 bytes, offset 10431
    short      edit_studio_light     //    2 bytes, offset 10436
    short      lookdev_sphere_size   //    2 bytes, offset 10438
    short      vbotimeout            //    2 bytes, offset 10440
    short      vbocollectrate        //    2 bytes, offset 10442
    short      textimeout            //    2 bytes, offset 10444
    short      texcollectrate        //    2 bytes, offset 10446
    int        memcachelimit         //    4 bytes, offset 10448
    int        prefetchframes        //    4 bytes, offset 10452
    float      pad_rot_angle         //    4 bytes, offset 10456
    char       _pad12[4]             //    4 bytes, offset 10460
    short      rvisize               //    2 bytes, offset 10464
    short      rvibright             //    2 bytes, offset 10466
    short      recent_files          //    2 bytes, offset 10468
    short      smooth_viewtx         //    2 bytes, offset 10470
    short      glreslimit            //    2 bytes, offset 10472
    short      color_picker_type     //    2 bytes, offset 10474
    char       auto_smoothing_new    //    1 bytes, offset 10476
    char       ipo_new               //    1 bytes, offset 10477
    char       keyhandles_new        //    1 bytes, offset 10478
    char       _pad11[4]             //    4 bytes, offset 10479
    char       view_frame_type       //    1 bytes, offset 10483
    int        view_frame_keyframes  //    4 bytes, offset 10484
    float      view_frame_seconds    //    4 bytes, offset 10488
    int        gpu_preferred_index   //    4 bytes, offset 10492
    int        gpu_preferred_vendor_id //    4 bytes, offset 10496
    int        gpu_preferred_device_id //    4 bytes, offset 10500
    char       _pad16[4]             //    4 bytes, offset 10504
    short      gpu_backend           //    2 bytes, offset 10508
    short      max_shader_compilation_subprocesses //    2 bytes, offset 10510
    short      playback_fps_samples  //    2 bytes, offset 10512
    short      widget_unit           //    2 bytes, offset 10514
    short      anisotropic_filter    //    2 bytes, offset 10516
    short      tablet_api            //    2 bytes, offset 10518
    float      pressure_threshold_max //    4 bytes, offset 10520
    float      pressure_softness     //    4 bytes, offset 10524
    float      ndof_sensitivity      //    4 bytes, offset 10528
    float      ndof_orbit_sensitivity //    4 bytes, offset 10532
    float      ndof_deadzone         //    4 bytes, offset 10536
    int        ndof_flag             //    4 bytes, offset 10540
    short      ogl_multisamples      //    2 bytes, offset 10544
    short      image_draw_method     //    2 bytes, offset 10546
    float      glalphaclip           //    4 bytes, offset 10548
    short      autokey_mode          //    2 bytes, offset 10552
    short      autokey_flag          //    2 bytes, offset 10554
    short      key_insert_channels   //    2 bytes, offset 10556
    char       _pad15[6]             //    6 bytes, offset 10558
    short      animation_flag        //    2 bytes, offset 10564
    char       text_render           //    1 bytes, offset 10566
    char       navigation_mode       //    1 bytes, offset 10567
    float      view_rotate_sensitivity_turntable //    4 bytes, offset 10568
    float      view_rotate_sensitivity_trackball //    4 bytes, offset 10572
    ColorBand  coba_weight           //  776 bytes, offset 10576
    float      sculpt_paint_overlay_col[3] //   12 bytes, offset 11352
    float      gpencil_new_layer_col[4] //   16 bytes, offset 11364
    char       drag_threshold_mouse  //    1 bytes, offset 11380
    char       drag_threshold_tablet //    1 bytes, offset 11381
    char       drag_threshold        //    1 bytes, offset 11382
    char       move_threshold        //    1 bytes, offset 11383
    char       font_path_ui[1024]    // 1024 bytes, offset 11384
    char       font_path_ui_mono[1024] // 1024 bytes, offset 12408
    int        compute_device_type   //    4 bytes, offset 13432
    float      fcu_inactive_alpha    //    4 bytes, offset 13436
    short      pie_tap_timeout       //    2 bytes, offset 13440
    short      pie_initial_timeout   //    2 bytes, offset 13442
    short      pie_animation_timeout //    2 bytes, offset 13444
    short      pie_menu_confirm      //    2 bytes, offset 13446
    short      pie_menu_radius       //    2 bytes, offset 13448
    short      pie_menu_threshold    //    2 bytes, offset 13450
    int        sequencer_editor_flag //    4 bytes, offset 13452
    char       factor_display_type   //    1 bytes, offset 13456
    char       viewport_aa           //    1 bytes, offset 13457
    char       render_display_type   //    1 bytes, offset 13458
    char       filebrowser_display_type //    1 bytes, offset 13459
    char       sequencer_disk_cache_dir[1024] // 1024 bytes, offset 13460
    int        sequencer_disk_cache_compression //    4 bytes, offset 14484
    int        sequencer_disk_cache_size_limit //    4 bytes, offset 14488
    short      sequencer_disk_cache_flag //    2 bytes, offset 14492
    short      sequencer_proxy_setup //    2 bytes, offset 14494
    float      collection_instance_empty_size //    4 bytes, offset 14496
    char       text_flag             //    1 bytes, offset 14500
    char       _pad10[1]             //    1 bytes, offset 14501
    char       file_preview_type     //    1 bytes, offset 14502
    char       statusbar_flag        //    1 bytes, offset 14503
    WalkNavigation walk_navigation   //   32 bytes, offset 14504
    UserDef_SpaceData space_data     //    8 bytes, offset 14536
    UserDef_FileSpaceData file_space_data //   40 bytes, offset 14544
    UserDef_Experimental experimental //   24 bytes, offset 14584
    UserDef_Runtime runtime          //    8 bytes, offset 14608
struct bUUID // 16 bytes [#880]
    int        time_low              //    4 bytes, offset 0
    ushort     time_mid              //    2 bytes, offset 4
    ushort     time_hi_and_version   //    2 bytes, offset 6
    uchar      clock_seq_hi_and_reserved //    1 bytes, offset 8
    uchar      clock_seq_low         //    1 bytes, offset 9
    uchar      node[6]               //    6 bytes, offset 10
struct vec2s // 4 bytes [#881]
    short      x                     //    2 bytes, offset 0
    short      y                     //    2 bytes, offset 2
struct vec2f // 8 bytes [#882]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
struct vec2i // 8 bytes [#883]
    int        x                     //    4 bytes, offset 0
    int        y                     //    4 bytes, offset 4
struct vec3i // 12 bytes [#884]
    int        x                     //    4 bytes, offset 0
    int        y                     //    4 bytes, offset 4
    int        z                     //    4 bytes, offset 8
struct vec3f // 12 bytes [#885]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    float      z                     //    4 bytes, offset 8
struct vec4f // 16 bytes [#886]
    float      x                     //    4 bytes, offset 0
    float      y                     //    4 bytes, offset 4
    float      z                     //    4 bytes, offset 8
    float      w                     //    4 bytes, offset 12
struct mat4x4f // 64 bytes [#887]
    float      value[4][4]           //   64 bytes, offset 0
struct rcti // 16 bytes [#888]
    int        xmin                  //    4 bytes, offset 0
    int        xmax                  //    4 bytes, offset 4
    int        ymin                  //    4 bytes, offset 8
    int        ymax                  //    4 bytes, offset 12
struct rctf // 16 bytes [#889]
    float      xmin                  //    4 bytes, offset 0
    float      xmax                  //    4 bytes, offset 4
    float      ymin                  //    4 bytes, offset 8
    float      ymax                  //    4 bytes, offset 12
struct DualQuat // 100 bytes [#890]
    float      quat[4]               //   16 bytes, offset 0
    float      trans[4]              //   16 bytes, offset 16
    float      scale[4][4]           //   64 bytes, offset 32
    float      scale_weight          //    4 bytes, offset 96
struct VFont // 1256 bytes, is ID [#891]
    ID         id                    //  208 bytes, offset 0
    char       name[1024]            // 1024 bytes, offset 208
    VFontData  *data                 //    8 bytes, offset 1232
    PackedFile *packedfile           //    8 bytes, offset 1240
    PackedFile *temp_pf              //    8 bytes, offset 1248
struct View2D // 152 bytes [#892]
    rctf       tot                   //   16 bytes, offset 0
    rctf       cur                   //   16 bytes, offset 16
    rcti       vert                  //   16 bytes, offset 32
    rcti       hor                   //   16 bytes, offset 48
    rcti       mask                  //   16 bytes, offset 64
    float      min[2]                //    8 bytes, offset 80
    float      max[2]                //    8 bytes, offset 88
    float      minzoom               //    4 bytes, offset 96
    float      maxzoom               //    4 bytes, offset 100
    short      scroll                //    2 bytes, offset 104
    short      scroll_ui             //    2 bytes, offset 106
    short      keeptot               //    2 bytes, offset 108
    short      keepzoom              //    2 bytes, offset 110
    short      keepofs               //    2 bytes, offset 112
    short      flag                  //    2 bytes, offset 114
    short      align                 //    2 bytes, offset 116
    short      winx                  //    2 bytes, offset 118
    short      winy                  //    2 bytes, offset 120
    short      oldwinx               //    2 bytes, offset 122
    short      oldwiny               //    2 bytes, offset 124
    short      around                //    2 bytes, offset 126
    char       alpha_vert            //    1 bytes, offset 128
    char       alpha_hor             //    1 bytes, offset 129
    char       _pad[2]               //    2 bytes, offset 130
    float      page_size_y           //    4 bytes, offset 132
    SmoothView2DStore *sms           //    8 bytes, offset 136
    wmTimer    *smooth_timer         //    8 bytes, offset 144
struct RegionView3D // 944 bytes [#893]
    float      winmat[4][4]          //   64 bytes, offset 0
    float      viewmat[4][4]         //   64 bytes, offset 64
    float      viewinv[4][4]         //   64 bytes, offset 128
    float      persmat[4][4]         //   64 bytes, offset 192
    float      persinv[4][4]         //   64 bytes, offset 256
    float      viewcamtexcofac[4]    //   16 bytes, offset 320
    float      viewmatob[4][4]       //   64 bytes, offset 336
    float      persmatob[4][4]       //   64 bytes, offset 400
    float      clip[6][4]            //   96 bytes, offset 464
    float      clip_local[6][4]      //   96 bytes, offset 560
    BoundBox   *clipbb               //    8 bytes, offset 656
    RegionView3D *localvd            //    8 bytes, offset 664
    ViewRender *view_render          //    8 bytes, offset 672
    SmoothView3DStore *sms           //    8 bytes, offset 680
    wmTimer    *smooth_timer         //    8 bytes, offset 688
    float      twmat[4][4]           //   64 bytes, offset 696
    float      tw_axis_min[3]        //   12 bytes, offset 760
    float      tw_axis_max[3]        //   12 bytes, offset 772
    float      tw_axis_matrix[3][3]  //   36 bytes, offset 784
    float      gridview              //    4 bytes, offset 820
    float      viewquat[4]           //   16 bytes, offset 824
    float      dist                  //    4 bytes, offset 840
    float      camdx                 //    4 bytes, offset 844
    float      camdy                 //    4 bytes, offset 848
    float      pixsize               //    4 bytes, offset 852
    float      ofs[3]                //   12 bytes, offset 856
    float      camzoom               //    4 bytes, offset 868
    char       is_persp              //    1 bytes, offset 872
    char       persp                 //    1 bytes, offset 873
    char       view                  //    1 bytes, offset 874
    char       view_axis_roll        //    1 bytes, offset 875
    char       viewlock              //    1 bytes, offset 876
    char       runtime_viewlock      //    1 bytes, offset 877
    char       viewlock_quad         //    1 bytes, offset 878
    char       _pad[1]               //    1 bytes, offset 879
    float      ofs_lock[2]           //    8 bytes, offset 880
    short      twdrawflag            //    2 bytes, offset 888
    short      rflag                 //    2 bytes, offset 890
    float      lviewquat[4]          //   16 bytes, offset 892
    char       lpersp                //    1 bytes, offset 908
    char       lview                 //    1 bytes, offset 909
    char       lview_axis_roll       //    1 bytes, offset 910
    char       _pad8[4]              //    4 bytes, offset 911
    char       ndof_flag             //    1 bytes, offset 915
    float      ndof_ofs[3]           //   12 bytes, offset 916
    float      ndof_rot_angle        //    4 bytes, offset 928
    float      ndof_rot_axis[3]      //   12 bytes, offset 932
struct View3DCursor // 64 bytes [#894]
    float      location[3]           //   12 bytes, offset 0
    float      rotation_quaternion[4] //   16 bytes, offset 12
    float      rotation_euler[3]     //   12 bytes, offset 28
    float      rotation_axis[3]      //   12 bytes, offset 40
    float      rotation_angle        //    4 bytes, offset 52
    short      rotation_mode         //    2 bytes, offset 56
    char       _pad[6]               //    6 bytes, offset 58
struct View3DShading // 944 bytes [#895]
    char       type                  //    1 bytes, offset 0
    char       prev_type             //    1 bytes, offset 1
    char       prev_type_wire        //    1 bytes, offset 2
    char       color_type            //    1 bytes, offset 3
    short      flag                  //    2 bytes, offset 4
    char       light                 //    1 bytes, offset 6
    char       background_type       //    1 bytes, offset 7
    char       cavity_type           //    1 bytes, offset 8
    char       wire_color_type       //    1 bytes, offset 9
    char       use_compositor        //    1 bytes, offset 10
    char       _pad                  //    1 bytes, offset 11
    char       studio_light[256]     //  256 bytes, offset 12
    char       lookdev_light[256]    //  256 bytes, offset 268
    char       matcap[256]           //  256 bytes, offset 524
    float      shadow_intensity      //    4 bytes, offset 780
    float      single_color[3]       //   12 bytes, offset 784
    float      studiolight_rot_z     //    4 bytes, offset 796
    float      studiolight_background //    4 bytes, offset 800
    float      studiolight_intensity //    4 bytes, offset 804
    float      studiolight_blur      //    4 bytes, offset 808
    float      object_outline_color[3] //   12 bytes, offset 812
    float      xray_alpha            //    4 bytes, offset 824
    float      xray_alpha_wire       //    4 bytes, offset 828
    float      cavity_valley_factor  //    4 bytes, offset 832
    float      cavity_ridge_factor   //    4 bytes, offset 836
    float      background_color[3]   //   12 bytes, offset 840
    float      curvature_ridge_factor //    4 bytes, offset 852
    float      curvature_valley_factor //    4 bytes, offset 856
    int        render_pass           //    4 bytes, offset 860
    char       aov_name[64]          //   64 bytes, offset 864
    IDProperty *prop                 //    8 bytes, offset 928
    void       *_pad2                //    8 bytes, offset 936
struct View3DOverlay // 128 bytes [#896]
    int        flag                  //    4 bytes, offset 0
    int        edit_flag             //    4 bytes, offset 4
    float      normals_length        //    4 bytes, offset 8
    float      normals_constant_screen_size //    4 bytes, offset 12
    int        paint_flag            //    4 bytes, offset 16
    int        wpaint_flag           //    4 bytes, offset 20
    float      texture_paint_mode_opacity //    4 bytes, offset 24
    float      vertex_paint_mode_opacity //    4 bytes, offset 28
    float      weight_paint_mode_opacity //    4 bytes, offset 32
    float      sculpt_mode_mask_opacity //    4 bytes, offset 36
    float      sculpt_mode_face_sets_opacity //    4 bytes, offset 40
    float      viewer_attribute_opacity //    4 bytes, offset 44
    float      xray_alpha_bone       //    4 bytes, offset 48
    float      bone_wire_alpha       //    4 bytes, offset 52
    float      fade_alpha            //    4 bytes, offset 56
    float      wireframe_threshold   //    4 bytes, offset 60
    float      wireframe_opacity     //    4 bytes, offset 64
    float      retopology_offset     //    4 bytes, offset 68
    float      gpencil_paper_opacity //    4 bytes, offset 72
    float      gpencil_grid_opacity  //    4 bytes, offset 76
    float      gpencil_fade_layer    //    4 bytes, offset 80
    float      gpencil_grid_color[3] //   12 bytes, offset 84
    float      gpencil_grid_scale[2] //    8 bytes, offset 96
    float      gpencil_grid_offset[2] //    8 bytes, offset 104
    int        gpencil_grid_subdivisions //    4 bytes, offset 112
    float      gpencil_vertex_paint_opacity //    4 bytes, offset 116
    int        handle_display        //    4 bytes, offset 120
    float      sculpt_curves_cage_opacity //    4 bytes, offset 124
struct View3D_Runtime // 32 bytes [#897]
    void       *properties_storage   //    8 bytes, offset 0
    void       (*properties_storage_free)() //    8 bytes, offset 8
    int        flag                  //    4 bytes, offset 16
    char       _pad1[4]              //    4 bytes, offset 20
    SceneStats *local_stats          //    8 bytes, offset 24
struct View3D // 1400 bytes [#898]
    SpaceLink  *next                 //    8 bytes, offset 0
    SpaceLink  *prev                 //    8 bytes, offset 8
    ListBase   regionbase            //   16 bytes, offset 16
    char       spacetype             //    1 bytes, offset 32
    char       link_flag             //    1 bytes, offset 33
    char       _pad0[6]              //    6 bytes, offset 34
    float      viewquat[4]           //   16 bytes, offset 40
    float      dist                  //    4 bytes, offset 56
    float      bundle_size           //    4 bytes, offset 60
    char       bundle_drawtype       //    1 bytes, offset 64
    char       drawtype              //    1 bytes, offset 65
    char       _pad3[1]              //    1 bytes, offset 66
    char       multiview_eye         //    1 bytes, offset 67
    int        object_type_exclude_viewport //    4 bytes, offset 68
    int        object_type_exclude_select //    4 bytes, offset 72
    short      persp                 //    2 bytes, offset 76
    short      view                  //    2 bytes, offset 78
    Object     *camera               //    8 bytes, offset 80
    Object     *ob_centre            //    8 bytes, offset 88
    rctf       render_border         //   16 bytes, offset 96
    View3D     *localvd              //    8 bytes, offset 112
    char       ob_centre_bone[64]    //   64 bytes, offset 120
    short      local_view_uuid       //    2 bytes, offset 184
    char       _pad6[2]              //    2 bytes, offset 186
    int        layact                //    4 bytes, offset 188
    short      local_collections_uuid //    2 bytes, offset 192
    short      _pad7[2]              //    4 bytes, offset 194
    short      debug_flag            //    2 bytes, offset 198
    short      ob_centre_cursor      //    2 bytes, offset 200
    short      scenelock             //    2 bytes, offset 202
    short      gp_flag               //    2 bytes, offset 204
    short      flag                  //    2 bytes, offset 206
    int        flag2                 //    4 bytes, offset 208
    float      lens                  //    4 bytes, offset 212
    float      grid                  //    4 bytes, offset 216
    float      near                  //    4 bytes, offset 220
    float      far                   //    4 bytes, offset 224
    float      ofs[3]                //   12 bytes, offset 228
    char       _pad[1]               //    1 bytes, offset 240
    char       gizmo_flag            //    1 bytes, offset 241
    char       gizmo_show_object     //    1 bytes, offset 242
    char       gizmo_show_armature   //    1 bytes, offset 243
    char       gizmo_show_empty      //    1 bytes, offset 244
    char       gizmo_show_light      //    1 bytes, offset 245
    char       gizmo_show_camera     //    1 bytes, offset 246
    char       gridflag              //    1 bytes, offset 247
    short      gridlines             //    2 bytes, offset 248
    short      gridsubdiv            //    2 bytes, offset 250
    float      vertex_opacity        //    4 bytes, offset 252
    bGPdata    *gpd                  //    8 bytes, offset 256
    short      stereo3d_flag         //    2 bytes, offset 264
    char       stereo3d_camera       //    1 bytes, offset 266
    char       _pad4                 //    1 bytes, offset 267
    float      stereo3d_convergence_factor //    4 bytes, offset 268
    float      stereo3d_volume_alpha //    4 bytes, offset 272
    float      stereo3d_convergence_alpha //    4 bytes, offset 276
    View3DShading shading            //  944 bytes, offset 280
    View3DOverlay overlay            //  128 bytes, offset 1224
    ViewerPath viewer_path           //   16 bytes, offset 1352
    View3D_Runtime runtime           //   32 bytes, offset 1368
struct ViewerPathElem // 32 bytes [#899]
    ViewerPathElem *next             //    8 bytes, offset 0
    ViewerPathElem *prev             //    8 bytes, offset 8
    int        type                  //    4 bytes, offset 16
    char       _pad[4]               //    4 bytes, offset 20
    char       *ui_name              //    8 bytes, offset 24
struct IDViewerPathElem // 40 bytes [#900]
    ViewerPathElem base              //   32 bytes, offset 0
    ID         *id                   //    8 bytes, offset 32
struct ModifierViewerPathElem // 40 bytes [#901]
    ViewerPathElem base              //   32 bytes, offset 0
    char       *modifier_name        //    8 bytes, offset 32
struct GroupNodeViewerPathElem // 40 bytes [#902]
    ViewerPathElem base              //   32 bytes, offset 0
    int        node_id               //    4 bytes, offset 32
    char       _pad1[4]              //    4 bytes, offset 36
struct SimulationZoneViewerPathElem // 40 bytes [#903]
    ViewerPathElem base              //   32 bytes, offset 0
    int        sim_output_node_id    //    4 bytes, offset 32
    char       _pad1[4]              //    4 bytes, offset 36
struct RepeatZoneViewerPathElem // 40 bytes [#904]
    ViewerPathElem base              //   32 bytes, offset 0
    int        repeat_output_node_id //    4 bytes, offset 32
    int        iteration             //    4 bytes, offset 36
struct ForeachGeometryElementZoneViewerPathElem // 40 bytes [#905]
    ViewerPathElem base              //   32 bytes, offset 0
    int        zone_output_node_id   //    4 bytes, offset 32
    int        index                 //    4 bytes, offset 36
struct ViewerNodeViewerPathElem // 40 bytes [#906]
    ViewerPathElem base              //   32 bytes, offset 0
    int        node_id               //    4 bytes, offset 32
    char       _pad1[4]              //    4 bytes, offset 36
struct ViewerPath // 16 bytes [#907]
    ListBase   path                  //   16 bytes, offset 0
struct VolumeDisplay // 32 bytes [#908]
    float      density               //    4 bytes, offset 0
    int        wireframe_type        //    4 bytes, offset 4
    int        wireframe_detail      //    4 bytes, offset 8
    int        interpolation_method  //    4 bytes, offset 12
    int        axis_slice_method     //    4 bytes, offset 16
    int        slice_axis            //    4 bytes, offset 20
    float      slice_depth           //    4 bytes, offset 24
    int        _pad[1]               //    4 bytes, offset 28
struct VolumeRender // 16 bytes [#909]
    int        precision             //    4 bytes, offset 0
    int        space                 //    4 bytes, offset 4
    float      step_size             //    4 bytes, offset 8
    float      clipping              //    4 bytes, offset 12
struct Volume // 1424 bytes, is ID [#910]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    char       filepath[1024]        // 1024 bytes, offset 216
    PackedFile *packedfile           //    8 bytes, offset 1240
    char       is_sequence           //    1 bytes, offset 1248
    char       sequence_mode         //    1 bytes, offset 1249
    char       _pad1[2]              //    2 bytes, offset 1250
    int        frame_start           //    4 bytes, offset 1252
    int        frame_duration        //    4 bytes, offset 1256
    int        frame_offset          //    4 bytes, offset 1260
    int        flag                  //    4 bytes, offset 1264
    int        active_grid           //    4 bytes, offset 1268
    Material   **mat                 //    8 bytes, offset 1272
    short      totcol                //    2 bytes, offset 1280
    short      _pad2[3]              //    6 bytes, offset 1282
    VolumeRender render              //   16 bytes, offset 1288
    VolumeDisplay display            //   32 bytes, offset 1304
    char       velocity_grid[64]     //   64 bytes, offset 1336
    char       _pad3[3]              //    3 bytes, offset 1400
    char       velocity_unit         //    1 bytes, offset 1403
    float      velocity_scale        //    4 bytes, offset 1404
    void       *batch_cache          //    8 bytes, offset 1408
    VolumeRuntimeHandle *runtime     //    8 bytes, offset 1416
struct ReportList // 48 bytes [#911]
    ListBase   list                  //   16 bytes, offset 0
    int        printlevel            //    4 bytes, offset 16
    int        storelevel            //    4 bytes, offset 20
    int        flag                  //    4 bytes, offset 24
    char       _pad[4]               //    4 bytes, offset 28
    wmTimer    *reporttimer          //    8 bytes, offset 32
    std_mutex_type *lock             //    8 bytes, offset 40
struct wmXrData // 1008 bytes [#912]
    wmXrRuntimeData *runtime         //    8 bytes, offset 0
    XrSessionSettings session_settings // 1000 bytes, offset 8
struct wmWindowManager // 1456 bytes, is ID [#913]
    ID         id                    //  208 bytes, offset 0
    wmWindow   *windrawable          //    8 bytes, offset 208
    wmWindow   *winactive            //    8 bytes, offset 216
    ListBase   windows               //   16 bytes, offset 224
    uchar      init_flag             //    1 bytes, offset 240
    char       _pad0[1]              //    1 bytes, offset 241
    short      file_saved            //    2 bytes, offset 242
    short      op_undo_depth         //    2 bytes, offset 244
    short      outliner_sync_select_dirty //    2 bytes, offset 246
    ListBase   operators             //   16 bytes, offset 248
    ListBase   notifier_queue        //   16 bytes, offset 264
    GSet       *notifier_queue_set   //    8 bytes, offset 280
    wmNotifier *notifier_current     //    8 bytes, offset 288
    int        extensions_updates    //    4 bytes, offset 296
    int        extensions_blocked    //    4 bytes, offset 300
    ListBase   jobs                  //   16 bytes, offset 304
    ListBase   paintcursors          //   16 bytes, offset 320
    ListBase   drags                 //   16 bytes, offset 336
    ListBase   keyconfigs            //   16 bytes, offset 352
    wmKeyConfig *defaultconf         //    8 bytes, offset 368
    wmKeyConfig *addonconf           //    8 bytes, offset 376
    wmKeyConfig *userconf            //    8 bytes, offset 384
    ListBase   timers                //   16 bytes, offset 392
    wmTimer    *autosavetimer        //    8 bytes, offset 408
    char       autosave_scheduled    //    1 bytes, offset 416
    char       _pad2[7]              //    7 bytes, offset 417
    UndoStack  *undo_stack           //    8 bytes, offset 424
    wmMsgBus   *message_bus          //    8 bytes, offset 432
    wmXrData   xr                    // 1008 bytes, offset 440
    WindowManagerRuntimeHandle *runtime //    8 bytes, offset 1448
struct wmWindow // 376 bytes [#914]
    wmWindow   *next                 //    8 bytes, offset 0
    wmWindow   *prev                 //    8 bytes, offset 8
    void       *ghostwin             //    8 bytes, offset 16
    void       *gpuctx               //    8 bytes, offset 24
    wmWindow   *parent               //    8 bytes, offset 32
    Scene      *scene                //    8 bytes, offset 40
    Scene      *new_scene            //    8 bytes, offset 48
    char       view_layer_name[64]   //   64 bytes, offset 56
    Scene      *unpinned_scene       //    8 bytes, offset 120
    WorkSpaceInstanceHook *workspace_hook //    8 bytes, offset 128
    ScrAreaMap global_area_map       //   48 bytes, offset 136
    bScreen    *screen               //    8 bytes, offset 184
    int        winid                 //    4 bytes, offset 192
    short      posx                  //    2 bytes, offset 196
    short      posy                  //    2 bytes, offset 198
    short      sizex                 //    2 bytes, offset 200
    short      sizey                 //    2 bytes, offset 202
    char       windowstate           //    1 bytes, offset 204
    char       active                //    1 bytes, offset 205
    short      cursor                //    2 bytes, offset 206
    short      lastcursor            //    2 bytes, offset 208
    short      modalcursor           //    2 bytes, offset 210
    short      grabcursor            //    2 bytes, offset 212
    short      pie_event_type_lock   //    2 bytes, offset 214
    short      pie_event_type_last   //    2 bytes, offset 216
    char       addmousemove          //    1 bytes, offset 218
    char       tag_cursor_refresh    //    1 bytes, offset 219
    char       event_queue_check_click //    1 bytes, offset 220
    char       event_queue_check_drag //    1 bytes, offset 221
    char       event_queue_check_drag_handled //    1 bytes, offset 222
    char       event_queue_consecutive_gesture_type //    1 bytes, offset 223
    int        event_queue_consecutive_gesture_xy[2] //    8 bytes, offset 224
    wmEvent_ConsecutiveData *event_queue_consecutive_gesture_data //    8 bytes, offset 232
    wmEvent    *eventstate           //    8 bytes, offset 240
    wmEvent    *event_last_handled   //    8 bytes, offset 248
    wmIMEData  *ime_data             //    8 bytes, offset 256
    char       ime_data_is_composing //    1 bytes, offset 264
    char       _pad1[7]              //    7 bytes, offset 265
    ListBase   event_queue           //   16 bytes, offset 272
    ListBase   handlers              //   16 bytes, offset 288
    ListBase   modalhandlers         //   16 bytes, offset 304
    ListBase   gesture               //   16 bytes, offset 320
    Stereo3dFormat *stereo3d_format  //    8 bytes, offset 336
    ListBase   drawcalls             //   16 bytes, offset 344
    void       *cursor_keymap_status //    8 bytes, offset 360
    uint64_t   eventstate_prev_press_time_ms //    8 bytes, offset 368
struct wmKeyMapItem // 184 bytes [#915]
    wmKeyMapItem *next               //    8 bytes, offset 0
    wmKeyMapItem *prev               //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    IDProperty *properties           //    8 bytes, offset 80
    char       propvalue_str[64]     //   64 bytes, offset 88
    short      propvalue             //    2 bytes, offset 152
    short      type                  //    2 bytes, offset 154
    int8_t     val                   //    1 bytes, offset 156
    int8_t     direction             //    1 bytes, offset 157
    short      shift                 //    2 bytes, offset 158
    short      ctrl                  //    2 bytes, offset 160
    short      alt                   //    2 bytes, offset 162
    short      oskey                 //    2 bytes, offset 164
    short      keymodifier           //    2 bytes, offset 166
    short      flag                  //    2 bytes, offset 168
    short      maptype               //    2 bytes, offset 170
    short      id                    //    2 bytes, offset 172
    char       _pad[2]               //    2 bytes, offset 174
    PointerRNA *ptr                  //    8 bytes, offset 176
struct wmKeyMapDiffItem // 32 bytes [#916]
    wmKeyMapDiffItem *next           //    8 bytes, offset 0
    wmKeyMapDiffItem *prev           //    8 bytes, offset 8
    wmKeyMapItem *remove_item        //    8 bytes, offset 16
    wmKeyMapItem *add_item           //    8 bytes, offset 24
struct wmKeyMap // 272 bytes [#917]
    wmKeyMap   *next                 //    8 bytes, offset 0
    wmKeyMap   *prev                 //    8 bytes, offset 8
    ListBase   items                 //   16 bytes, offset 16
    ListBase   diff_items            //   16 bytes, offset 32
    char       idname[64]            //   64 bytes, offset 48
    short      spaceid               //    2 bytes, offset 112
    short      regionid              //    2 bytes, offset 114
    char       owner_id[128]         //  128 bytes, offset 116
    short      flag                  //    2 bytes, offset 244
    short      kmi_id                //    2 bytes, offset 246
    bool       (*poll)()             //    8 bytes, offset 248
    bool       (*poll_modal_item)()  //    8 bytes, offset 256
    void       *modal_items          //    8 bytes, offset 264
struct wmKeyConfigPref // 88 bytes [#918]
    wmKeyConfigPref *next            //    8 bytes, offset 0
    wmKeyConfigPref *prev            //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    IDProperty *prop                 //    8 bytes, offset 80
struct wmKeyConfig // 168 bytes [#919]
    wmKeyConfig *next                //    8 bytes, offset 0
    wmKeyConfig *prev                //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    char       basename[64]          //   64 bytes, offset 80
    ListBase   keymaps               //   16 bytes, offset 144
    int        actkeymap             //    4 bytes, offset 160
    short      flag                  //    2 bytes, offset 164
    char       _pad0[2]              //    2 bytes, offset 166
struct wmOperator // 168 bytes [#920]
    wmOperator *next                 //    8 bytes, offset 0
    wmOperator *prev                 //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    IDProperty *properties           //    8 bytes, offset 80
    wmOperatorType *type             //    8 bytes, offset 88
    void       *customdata           //    8 bytes, offset 96
    void       *py_instance          //    8 bytes, offset 104
    PointerRNA *ptr                  //    8 bytes, offset 112
    ReportList *reports              //    8 bytes, offset 120
    ListBase   macro                 //   16 bytes, offset 128
    wmOperator *opm                  //    8 bytes, offset 144
    uiLayout   *layout               //    8 bytes, offset 152
    short      flag                  //    2 bytes, offset 160
    char       _pad[6]               //    6 bytes, offset 162
struct bToolRef // 232 bytes [#921]
    bToolRef   *next                 //    8 bytes, offset 0
    bToolRef   *prev                 //    8 bytes, offset 8
    char       idname[64]            //   64 bytes, offset 16
    char       idname_fallback[64]   //   64 bytes, offset 80
    char       idname_pending[64]    //   64 bytes, offset 144
    short      tag                   //    2 bytes, offset 208
    short      space_type            //    2 bytes, offset 210
    int        mode                  //    4 bytes, offset 212
    IDProperty *properties           //    8 bytes, offset 216
    bToolRef_Runtime *runtime        //    8 bytes, offset 224
struct WorkSpaceLayout // 88 bytes [#922]
    WorkSpaceLayout *next            //    8 bytes, offset 0
    WorkSpaceLayout *prev            //    8 bytes, offset 8
    bScreen    *screen               //    8 bytes, offset 16
    char       name[64]              //   64 bytes, offset 24
struct wmOwnerID // 144 bytes [#923]
    wmOwnerID  *next                 //    8 bytes, offset 0
    wmOwnerID  *prev                 //    8 bytes, offset 8
    char       name[128]             //  128 bytes, offset 16
struct WorkSpace // 328 bytes, is ID [#924]
    ID         id                    //  208 bytes, offset 0
    ListBase   layouts               //   16 bytes, offset 208
    ListBase   hook_layout_relations //   16 bytes, offset 224
    ListBase   owner_ids             //   16 bytes, offset 240
    ListBase   tools                 //   16 bytes, offset 256
    Scene      *pin_scene            //    8 bytes, offset 272
    char       _pad[4]               //    4 bytes, offset 280
    int        object_mode           //    4 bytes, offset 284
    int        flags                 //    4 bytes, offset 288
    int        order                 //    4 bytes, offset 292
    WorkSpaceRuntimeHandle *runtime  //    8 bytes, offset 296
    AssetLibraryReference asset_library_ref //    8 bytes, offset 304
    ViewerPath viewer_path           //   16 bytes, offset 312
struct WorkSpaceDataRelation // 40 bytes [#925]
    WorkSpaceDataRelation *next      //    8 bytes, offset 0
    WorkSpaceDataRelation *prev      //    8 bytes, offset 8
    void       *parent               //    8 bytes, offset 16
    void       *value                //    8 bytes, offset 24
    int        parentid              //    4 bytes, offset 32
    char       _pad_0[4]             //    4 bytes, offset 36
struct WorkSpaceInstanceHook // 32 bytes [#926]
    WorkSpace  *active               //    8 bytes, offset 0
    WorkSpaceLayout *act_layout      //    8 bytes, offset 8
    WorkSpace  *temp_workspace_store //    8 bytes, offset 16
    WorkSpaceLayout *temp_layout_store //    8 bytes, offset 24
struct World // 400 bytes, is ID [#927]
    ID         id                    //  208 bytes, offset 0
    AnimData   *adt                  //    8 bytes, offset 208
    DrawDataList drawdata            //   16 bytes, offset 216
    char       _pad0[4]              //    4 bytes, offset 232
    short      texact                //    2 bytes, offset 236
    short      mistype               //    2 bytes, offset 238
    float      horr                  //    4 bytes, offset 240
    float      horg                  //    4 bytes, offset 244
    float      horb                  //    4 bytes, offset 248
    float      exposure              //    4 bytes, offset 252
    float      exp                   //    4 bytes, offset 256
    float      range                 //    4 bytes, offset 260
    short      mode                  //    2 bytes, offset 264
    char       _pad2[6]              //    6 bytes, offset 266
    float      misi                  //    4 bytes, offset 272
    float      miststa               //    4 bytes, offset 276
    float      mistdist              //    4 bytes, offset 280
    float      misthi                //    4 bytes, offset 284
    float      aodist                //    4 bytes, offset 288
    float      aoenergy              //    4 bytes, offset 292
    short      flag                  //    2 bytes, offset 296
    char       _pad3[2]              //    2 bytes, offset 298
    int        probe_resolution      //    4 bytes, offset 300
    float      sun_threshold         //    4 bytes, offset 304
    float      sun_angle             //    4 bytes, offset 308
    float      sun_shadow_maximum_resolution //    4 bytes, offset 312
    float      sun_shadow_jitter_overblur //    4 bytes, offset 316
    float      sun_shadow_filter_radius //    4 bytes, offset 320
    char       _pad4[4]              //    4 bytes, offset 324
    Ipo        *ipo                  //    8 bytes, offset 328
    short      pr_texture            //    2 bytes, offset 336
    short      use_nodes             //    2 bytes, offset 338
    char       _pad[4]               //    4 bytes, offset 340
    PreviewImage *preview            //    8 bytes, offset 344
    bNodeTree  *nodetree             //    8 bytes, offset 352
    LightgroupMembership *lightgroup //    8 bytes, offset 360
    void       *_pad1                //    8 bytes, offset 368
    ListBase   gpumaterial           //   16 bytes, offset 376
    uint64_t   last_update           //    8 bytes, offset 392
struct XrSessionSettings // 1000 bytes [#928]
    View3DShading shading            //  944 bytes, offset 0
    float      base_scale            //    4 bytes, offset 944
    char       _pad[3]               //    3 bytes, offset 948
    char       base_pose_type        //    1 bytes, offset 951
    Object     *base_pose_object     //    8 bytes, offset 952
    float      base_pose_location[3] //   12 bytes, offset 960
    float      base_pose_angle       //    4 bytes, offset 972
    char       draw_flags            //    1 bytes, offset 976
    char       controller_draw_style //    1 bytes, offset 977
    char       _pad2[2]              //    2 bytes, offset 978
    float      clip_start            //    4 bytes, offset 980
    float      clip_end              //    4 bytes, offset 984
    int        flag                  //    4 bytes, offset 988
    int        object_type_exclude_viewport //    4 bytes, offset 992
    int        object_type_exclude_select //    4 bytes, offset 996
struct XrComponentPath // 208 bytes [#929]
    XrComponentPath *next            //    8 bytes, offset 0
    XrComponentPath *prev            //    8 bytes, offset 8
    char       path[192]             //  192 bytes, offset 16
struct XrActionMapBinding // 384 bytes [#930]
    XrActionMapBinding *next         //    8 bytes, offset 0
    XrActionMapBinding *prev         //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       profile[256]          //  256 bytes, offset 80
    ListBase   component_paths       //   16 bytes, offset 336
    float      float_threshold       //    4 bytes, offset 352
    short      axis_flag             //    2 bytes, offset 356
    char       _pad[2]               //    2 bytes, offset 358
    float      pose_location[3]      //   12 bytes, offset 360
    float      pose_rotation[3]      //   12 bytes, offset 372
struct XrUserPath // 80 bytes [#931]
    XrUserPath *next                 //    8 bytes, offset 0
    XrUserPath *prev                 //    8 bytes, offset 8
    char       path[64]              //   64 bytes, offset 16
struct XrActionMapItem // 288 bytes [#932]
    XrActionMapItem *next            //    8 bytes, offset 0
    XrActionMapItem *prev            //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    char       type                  //    1 bytes, offset 80
    char       _pad[7]               //    7 bytes, offset 81
    ListBase   user_paths            //   16 bytes, offset 88
    char       op[64]                //   64 bytes, offset 104
    IDProperty *op_properties        //    8 bytes, offset 168
    PointerRNA *op_properties_ptr    //    8 bytes, offset 176
    short      op_flag               //    2 bytes, offset 184
    short      action_flag           //    2 bytes, offset 186
    short      haptic_flag           //    2 bytes, offset 188
    short      pose_flag             //    2 bytes, offset 190
    char       haptic_name[64]       //   64 bytes, offset 192
    float      haptic_duration       //    4 bytes, offset 256
    float      haptic_frequency      //    4 bytes, offset 260
    float      haptic_amplitude      //    4 bytes, offset 264
    short      selbinding            //    2 bytes, offset 268
    char       _pad3[2]              //    2 bytes, offset 270
    ListBase   bindings              //   16 bytes, offset 272
struct XrActionMap // 104 bytes [#933]
    XrActionMap *next                //    8 bytes, offset 0
    XrActionMap *prev                //    8 bytes, offset 8
    char       name[64]              //   64 bytes, offset 16
    ListBase   items                 //   16 bytes, offset 80
    short      selitem               //    2 bytes, offset 96
    char       _pad[6]               //    6 bytes, offset 98
